{"version":3,"file":"static/chunks/app/(product)/(app)/album/page-81d1a7e2b2e06c52.js","mappings":"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","sources":["webpack://_N_E/?0d21","webpack://_N_E/./src/app/(product)/(app)/album/page.tsx","webpack://_N_E/./src/domain/app/navigation/NavigationEvents.tsx","webpack://_N_E/./src/domain/app/navigation/PrimaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/SecondaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/index.ts","webpack://_N_E/./src/domain/features/album/ui/AlbumsCarousel/AlbumsCarousel.tsx","webpack://_N_E/./src/domain/features/album/model/AlbumWithArtists.ts","webpack://_N_E/./src/domain/features/album/lib/albumWithArtistsResponseToModel.ts","webpack://_N_E/./src/domain/features/album/index.ts","webpack://_N_E/./src/domain/features/album/ui/AlbumCard/AlbumCard.tsx","webpack://_N_E/./src/domain/features/navigation/lib/useHistoryBackOrForward.ts","webpack://_N_E/./src/domain/features/navigation/ui/NavigationControls.tsx","webpack://_N_E/./src/domain/features/navigation/index.ts","webpack://_N_E/./src/domain/pages/album/lib/getPreparedIds.ts","webpack://_N_E/./src/domain/pages/album/lib/createVolumeItem.ts","webpack://_N_E/./src/domain/pages/album/lib/getVolumeItemKey.ts","webpack://_N_E/./src/domain/pages/album/lib/insertDataToVolumeItems.ts","webpack://_N_E/./src/domain/pages/album/lib/makeFlatVolumeItems.ts","webpack://_N_E/./src/domain/pages/album/lib/updateVolumeItemsState.ts","webpack://_N_E/./src/domain/pages/album/model/RelatedAlbums.ts","webpack://_N_E/./src/domain/pages/album/model/VolumeItem.ts","webpack://_N_E/./src/domain/pages/album/model/Album.ts","webpack://_N_E/./src/domain/pages/album/index.ts","webpack://_N_E/./src/domain/pages/album/lib/types/VolumeType.ts","webpack://_N_E/./src/domain/pages/album/ui/Album/Album.tsx","webpack://_N_E/./src/domain/pages/album/ui/AlbumNotFound/AlbumNotFound.tsx","webpack://_N_E/./src/domain/features/album/ui/AlbumCard/AlbumCard.module.scss","webpack://_N_E/./src/domain/features/navigation/ui/NavigationControls.module.scss","webpack://_N_E/./src/domain/pages/album/ui/Album/Album.module.scss","webpack://_N_E/../../packages/http-client/build/exceptions/HttpErrorException.js","webpack://_N_E/../../packages/http-client/build/exceptions/HttpException.js","webpack://_N_E/../../packages/http-client/build/types/HttpResponseStatusCode.js","webpack://_N_E/../../packages/http-client/build/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/andrey-volkov/projects/arcadia/music/frontend/musfront/services/music/src/app/(product)/(app)/album/page.tsx\")","'use client';\n\n// import { usePathname } from 'next/navigation.js';\nimport { useSearchParams, notFound } from 'next/navigation.js';\nimport { ReactElement, Suspense } from 'react';\n\nimport { SecondaryPage } from '@/app/navigation/index.js';\n\nimport { AlbumPage } from '@/pages/album/index.js';\n\nconst Album = (): ReactElement => {\n    const searchParams = useSearchParams();\n\n    const albumId = searchParams.get('albumId');\n\n    if (!albumId) {\n        notFound();\n    }\n\n    return (\n        <Suspense>\n            <SecondaryPage>\n                <AlbumPage albumId={albumId} />\n            </SecondaryPage>\n        </Suspense>\n    );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Album;\n","'use client';\n\nimport { usePathname, useSearchParams } from 'next/navigation.js';\nimport { ReactNode, useEffect } from 'react';\n\nimport { useMetrika } from '@/shared/lib/index.js';\n\nexport const NavigationEvents = (): ReactNode => {\n    const metrika = useMetrika();\n    const pathname = usePathname();\n    const searchParams = useSearchParams();\n\n    useEffect(() => {\n        const url = `${pathname}${searchParams.size > 0 ? `?${searchParams}` : ''}`;\n        metrika.hit(url);\n    }, [pathname, searchParams, metrika]);\n\n    return null;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {}\n\nexport const PrimaryPage = ({ children }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            history?.pushState({\n                href: window.location.href,\n                primaryPage: {\n                    pathname: window.location.pathname,\n                    query: window.location.search\n                }\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <Suspense>{children}</Suspense>;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {\n    defaultPrimaryPage?: string;\n}\n\nexport const SecondaryPage = ({ children, defaultPrimaryPage = '/' }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            const primaryPage = history?.state?.data.primaryPage ?? { pathname: defaultPrimaryPage, query: '' };\n            history?.pushState({\n                href: window.location.href,\n                primaryPage\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <Suspense>{children}</Suspense>;\n};\n","export { PrimaryPage } from './PrimaryPage.js';\nexport { SecondaryPage } from './SecondaryPage.js';\nexport { NavigationEvents } from './NavigationEvents.js';\n","import { forwardRef, ReactElement, Ref } from 'react';\n\nimport { WithClassName } from '@/shared/lib/index.js';\nimport { CarouselBlock } from '@/shared/ui/index.js';\n\nimport { AlbumWithArtistsModel } from '../../model/AlbumWithArtists.js';\nimport { AlbumCard } from '../AlbumCard/AlbumCard.js';\n\ninterface Props extends WithClassName {\n    isLoading?: boolean;\n    title: string;\n    description?: string;\n    albums?: AlbumWithArtistsModel[];\n    containerClassName?: string;\n    forwardRef?: Ref<HTMLDivElement>;\n    headerClassName?: string;\n}\n\nconst AlbumsCarouselComponent = ({\n    forwardRef: ref,\n    title,\n    description,\n    albums,\n    isLoading,\n    className,\n    containerClassName,\n    headerClassName\n}: Props): ReactElement | null => {\n    return (\n        <CarouselBlock\n            className={className}\n            headerClassName={headerClassName}\n            containerClassName={containerClassName}\n            isLoading={isLoading}\n            ref={ref}\n            title={title}\n            description={description}\n        >\n            {albums?.map((album: AlbumWithArtistsModel) => {\n                return <AlbumCard key={album.id} album={album} contentLinesCount={3} />;\n            })}\n        </CarouselBlock>\n    );\n};\n\nexport const AlbumsCarousel = forwardRef<HTMLDivElement, Props>((props: Props, ref: Ref<HTMLDivElement>) => {\n    return <AlbumsCarouselComponent forwardRef={ref} {...props} />;\n});\n","import { Instance, types } from 'mobx-state-tree';\n\nimport { Album } from '@/entities/album/index.js';\nimport { Artist, ArtistModel } from '@/entities/artist/index.js';\n\nexport const AlbumWithArtists = Album.props({\n    artists: types.maybe(types.array(Artist))\n})\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .views((self) => ({\n        get artistNames() {\n            return self.artists?.map((artist: ArtistModel) => artist.name).join(', ');\n        }\n    }));\n\nexport type AlbumWithArtistsModel = Instance<typeof AlbumWithArtists>;\n","import { cast } from 'mobx-state-tree';\n\nimport { Album as AlbumResponse, Artist as ArtistResponse } from '@yandex-music-int/resource-collection';\n\nimport { albumResponseToModel } from '@/entities/album/index.js';\nimport { artistResponseToModel } from '@/entities/artist/index.js';\n\nimport { AlbumWithArtistsModel } from '../model/AlbumWithArtists.js';\n\nexport const albumWithArtistsResponseToModel = (response: AlbumResponse): AlbumWithArtistsModel => {\n    const artists = response.artists.map((artist: ArtistResponse) => {\n        return artistResponseToModel(artist);\n    });\n\n    return cast({\n        ...albumResponseToModel(response),\n        artists\n    });\n};\n","export { AlbumCard } from './ui/AlbumCard/AlbumCard.js';\nexport { AlbumsCarousel } from './ui/AlbumsCarousel/AlbumsCarousel.js';\nexport { AlbumWithArtists, type AlbumWithArtistsModel } from './model/AlbumWithArtists.js';\nexport { albumWithArtistsResponseToModel } from './lib/albumWithArtistsResponseToModel.js';\n","'use client';\n\nimport { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport React, { MouseEvent, ReactElement, useCallback, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { YaMusicContexts } from '@yandex-music-int/player-contexts';\nimport { AlbumType, ContentWarning } from '@yandex-music-int/resource-collection';\nimport { Button } from '@yandex-music-int/sol/components/Button';\nimport { EntityCard, EntityCardProps, CommonCardControls } from '@yandex-music-int/sol/components/EntityCard';\nimport { ExplicitMarkVariant } from '@yandex-music-int/sol/components/ExplicitMark';\nimport { Icon } from '@yandex-music-int/sol/components/Icon';\nimport { Image } from '@yandex-music-int/sol/components/Image';\nimport { Paper } from '@yandex-music-int/sol/components/Paper';\nimport { Caption } from '@yandex-music-int/sol/components/Typography';\n\nimport { useOnLikeClick } from '@/entities/album/index.js';\nimport { SeparatedArtists } from '@/entities/artist/index.js';\n\nimport {\n    useSearchFeedback,\n    WithClassName,\n    WithChildren,\n    usePlayableContext,\n    additionFormatter,\n    useCreateFrom\n} from '@/shared/lib/index.js';\nimport { Link, PlayButton, LikeButton, useFuture } from '@/shared/ui/index.js';\n\nimport { AlbumWithArtistsModel } from '../../model/AlbumWithArtists.js';\n\nimport styles from './AlbumCard.module.scss';\n\nexport interface Props extends WithClassName, WithChildren {\n    album: AlbumWithArtistsModel;\n    contentLinesCount?: EntityCardProps['contentLinesCount'];\n}\n\nexport const AlbumCard = observer(({ className, children, album, contentLinesCount }: Props): ReactElement => {\n    const from = useCreateFrom();\n    const { isFuture } = useFuture();\n    const { formatMessage } = useIntl();\n    const handleOnLikeClick = useOnLikeClick(album);\n    const { sendLikeSearchFeedback, sendNavigateSearchFeedback, sendPlaySearchFeedback } = useSearchFeedback();\n\n    const albumSingleType = album.type === AlbumType.SINGLE ? formatMessage({ id: 'entity-names.single' }) : undefined;\n    const addition = additionFormatter([album.year, albumSingleType, album.version]);\n    const explicitMark = album.contentWarning === ContentWarning.EXPLICIT ? ExplicitMarkVariant.E : null;\n    const albumName = useMemo(() => {\n        return formatMessage({ id: 'entity-names.album-name' }, { albumName: album.title });\n    }, [album.title, formatMessage]);\n\n    const { isPlaying, togglePlay } = usePlayableContext({\n        playContextParams: {\n            contextData: {\n                type: YaMusicContexts.Album,\n                meta: {\n                    id: album.id\n                },\n                from\n            },\n            loadContextMeta: true\n        }\n    });\n\n    //TODO: заменить на внутреннюю обработку в MenuButton\n    const handleClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n    }, []);\n\n    const handleNavigate = useCallback(() => {\n        sendNavigateSearchFeedback?.();\n    }, [sendNavigateSearchFeedback]);\n\n    const [onSearchFeedbackPlayed, setOnSearchFeedbackPlayed] = useState(false);\n    const handlePlayButtonClick = useCallback(() => {\n        if (!onSearchFeedbackPlayed && !isPlaying) {\n            setOnSearchFeedbackPlayed(true);\n            sendPlaySearchFeedback?.();\n        }\n\n        togglePlay();\n    }, [isPlaying, onSearchFeedbackPlayed, sendPlaySearchFeedback, togglePlay]);\n\n    const [onSearchFeedbackLiked, setOnSearchFeedbackLiked] = useState(false);\n    const handleLikeButtonClick = useCallback(() => {\n        if (!onSearchFeedbackLiked && !album.isLiked) {\n            setOnSearchFeedbackLiked(true);\n            sendLikeSearchFeedback?.();\n        }\n\n        handleOnLikeClick();\n    }, [album.isLiked, handleOnLikeClick, onSearchFeedbackLiked, sendLikeSearchFeedback]);\n\n    const menuControl = useMemo(() => {\n        if (isFuture) {\n            return (\n                <Button\n                    className={clsx(styles.icon, styles.control)}\n                    //TODO: Заменить на релевантное имя, когда будет готово контекстное меню\n                    aria-label={formatMessage({ id: 'interface-actions.context-menu' })}\n                    icon={<Icon size=\"xxs\" variant=\"more\" />}\n                    size=\"s\"\n                    radius=\"round\"\n                    onClick={handleClick}\n                />\n            );\n        }\n\n        return null;\n    }, [isFuture, handleClick, formatMessage]);\n\n    const view = useMemo(() => {\n        return (\n            <Paper className={styles.cover} radius=\"s\" withShadow>\n                <Link\n                    className={styles.coverLink}\n                    href={`/album/${album.id}`}\n                    aria-label={album.title}\n                    onClick={handleNavigate}\n                >\n                    <Image\n                        className={styles.image}\n                        src={album.coverUri}\n                        size={200}\n                        fit=\"cover\"\n                        alt={albumName}\n                        withAvatarReplace\n                    />\n                    <CommonCardControls\n                        className={styles.controls}\n                        playControl={\n                            <PlayButton\n                                className={clsx(styles.playButton, styles.control)}\n                                buttonVariant=\"default\"\n                                withHover={false}\n                                iconSize=\"l\"\n                                variant=\"filled\"\n                                onClick={handlePlayButtonClick}\n                                isPlaying={isPlaying}\n                                disabled={!album.isAvailable}\n                            />\n                        }\n                        likeControl={\n                            <LikeButton\n                                isLiked={album.isLiked}\n                                onClick={handleLikeButtonClick}\n                                variant=\"default\"\n                                size=\"s\"\n                                iconSize=\"xxs\"\n                                className={styles.control}\n                            />\n                        }\n                        menuControl={menuControl}\n                    />\n                </Link>\n            </Paper>\n        );\n    }, [\n        album.id,\n        album.title,\n        album.coverUri,\n        album.isAvailable,\n        album.isLiked,\n        handleNavigate,\n        albumName,\n        handlePlayButtonClick,\n        isPlaying,\n        handleLikeButtonClick,\n        menuControl\n    ]);\n\n    return (\n        <EntityCard\n            className={clsx(styles.root, className)}\n            aria-label={albumName}\n            explicitMark={explicitMark}\n            title={\n                <Caption variant=\"div\" type=\"entity\" size=\"s\" weight=\"medium\" lineClamp={2}>\n                    <Link className={styles.titleLink} href={`/album/${album.id}`} onClick={handleNavigate}>\n                        {album.title}\n                    </Link>\n                </Caption>\n            }\n            contentLinesCount={contentLinesCount}\n            view={view}\n            description={\n                <SeparatedArtists\n                    className={styles.artists}\n                    artists={album.artists}\n                    lineClamp={1}\n                    linkClassName={styles.artistLink}\n                    captionSize=\"s\"\n                />\n            }\n        >\n            {addition && (\n                <Caption className={styles.addition} variant=\"div\" type=\"entity\" size=\"s\" weight=\"medium\" lineClamp={1}>\n                    {addition}\n                </Caption>\n            )}\n            {children}\n        </EntityCard>\n    );\n});\n","import { debounce } from 'lodash-es';\nimport { useMemo } from 'react';\n\nimport { useHistory } from '@/shared/lib/index.js';\n\nconst DEBOUNCE_DURATION_MS = 200;\n\nexport const useHistoryBackOrForward = (\n    withBackwardFallback?: string\n): {\n    canBack: boolean;\n    canForward: boolean;\n    moveBack: () => void;\n    moveForward: () => void;\n} => {\n    const history = useHistory();\n    const moveBack = useMemo(() => {\n        return debounce(() => {\n            if (withBackwardFallback && !history.canBack) {\n                history.replaceState({\n                    href: withBackwardFallback,\n                    primaryPage: {\n                        pathname: '',\n                        query: ''\n                    }\n                });\n                return;\n            }\n            history?.back();\n        }, DEBOUNCE_DURATION_MS);\n    }, [history, withBackwardFallback]);\n\n    const moveForward = useMemo(() => {\n        return debounce(() => {\n            history?.forward();\n        }, DEBOUNCE_DURATION_MS);\n    }, [history]);\n\n    return {\n        canBack: Boolean(withBackwardFallback) || history.canBack,\n        canForward: history.canForward,\n        moveBack,\n        moveForward\n    };\n};\n","import { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ReactElement } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@yandex-music-int/sol/components/Button';\nimport { Icon } from '@yandex-music-int/sol/components/Icon';\n\nimport { LayoutName, WithClassName, useStore } from '@/shared/lib/index.js';\n\nimport { useHistoryBackOrForward } from '../lib/useHistoryBackOrForward.js';\n\nimport styles from './NavigationControls.module.scss';\n\ninterface Props extends WithClassName {\n    withBackwardControl?: boolean;\n    withForwardControl?: boolean;\n    withBackwardFallback?: string;\n}\n\nexport const NavigationControls = observer(\n    ({\n        withBackwardControl = true,\n        withForwardControl = true,\n        className,\n        withBackwardFallback\n    }: Props): ReactElement => {\n        const { settings } = useStore();\n\n        const isMobile = settings.layout === LayoutName.Mobile;\n        const { formatMessage } = useIntl();\n        const { canBack, canForward, moveBack, moveForward } = useHistoryBackOrForward(withBackwardFallback);\n\n        return (\n            <div className={clsx(styles.root, className)}>\n                {withBackwardControl && (\n                    <Button\n                        aria-label={formatMessage({ id: 'navigation.go-back' })}\n                        radius=\"round\"\n                        disabled={!canBack}\n                        size={isMobile ? 'xxs' : 's'}\n                        icon={<Icon size=\"xxs\" variant=\"arrowLeft\" />}\n                        onClick={moveBack}\n                    />\n                )}\n                {withForwardControl && (\n                    <Button\n                        aria-label={formatMessage({ id: 'navigation.go-forward' })}\n                        radius=\"round\"\n                        disabled={!canForward}\n                        size={isMobile ? 'xxs' : 's'}\n                        icon={<Icon size=\"xxs\" variant=\"arrowRight\" />}\n                        onClick={moveForward}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n","export { NavigationControls } from './ui/NavigationControls.js';\nexport { useHistoryBackOrForward } from './lib/useHistoryBackOrForward.js';\n","import { TrackId } from '@yandex-music-int/resource-collection';\n\n/**\n * Функция подготовки композитных id - {trackId}:{albumId}\n * @param trackIds Массив id треков\n * @param albumId Id альбома\n * @returns МАссив комбинированных id\n */\nexport const getPreparedIds = (trackIds: TrackId[], albumId: number): string[] => {\n    return trackIds.map((trackId: TrackId) => {\n        return `${trackId}:${albumId}`;\n    });\n};\n","import { TrackId } from '@yandex-music-int/resource-collection';\n\nimport { TrackWithArtistsModel } from '@/features/track/index.js';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { VolumeItemTextModel, VolumeItemTrackModel } from '../model/VolumeItem.js';\n\nimport { VolumeType } from './types/VolumeType.js';\n\nexport const createVolumeItemText = (data?: number): VolumeItemTextModel => {\n    return {\n        type: VolumeType.TEXT,\n        data: data || null\n    };\n};\n\nexport const createVolumeItemTrack = (\n    id: TrackId,\n    loadingState: LoadingState,\n    data?: TrackWithArtistsModel,\n    position?: number\n): VolumeItemTrackModel => {\n    return {\n        type: VolumeType.TRACK,\n        id,\n        data: data || null,\n        loadingState,\n        position\n    };\n};\n","import { TrackId } from '@yandex-music-int/resource-collection';\n\nexport const getVolumeItemKeyText = (trackId: TrackId): string => {\n    return `${trackId}-text`;\n};\n\nexport const getVolumeItemKeyTrack = (trackId: TrackId): string => {\n    return String(trackId);\n};\n","import { IMSTMap, ISimpleType } from 'mobx-state-tree';\n\nimport { Track } from '@yandex-music-int/resource-collection';\n\nimport { trackWithArtistsResponseToModel } from '@/features/track/index.js';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { VolumeItemModel } from '../model/VolumeItem.js';\n\nimport { createVolumeItemTrack, createVolumeItemText } from './createVolumeItem.js';\nimport { getVolumeItemKeyText, getVolumeItemKeyTrack } from './getVolumeItemKey.js';\n\n/**\n * Функция вставки данных о треки в виртуальный скролл\n * @param data Массив треков с полной мета информацией\n * @param items Плоский массив элементов для виртуального скролла\n * @param indexItems Map, где ключ - это id трека, а значение индекс в массиве items\n */\nexport const insertDataToVolumeItems = (\n    data: Track[],\n    items: VolumeItemModel[],\n    indexItems: IMSTMap<ISimpleType<number>>\n): void => {\n    data.forEach((track: Track) => {\n        if (track.albums?.[0]) {\n            const trackIndex = indexItems.get(getVolumeItemKeyTrack(track.id));\n            if (typeof trackIndex !== 'undefined') {\n                items[trackIndex] = createVolumeItemTrack(\n                    track.id,\n                    LoadingState.RESOLVE,\n                    trackWithArtistsResponseToModel(track),\n                    track.albums[0]?.trackPosition?.index\n                );\n            }\n            const volumeIndex = indexItems.get(getVolumeItemKeyText(track.id));\n            if (typeof volumeIndex !== 'undefined') {\n                items[volumeIndex] = createVolumeItemText(track.albums[0]?.trackPosition?.volume);\n            }\n        }\n    });\n};\n","import { IMSTMap, ISimpleType } from 'mobx-state-tree';\n\nimport { AlbumsResourceWithTracksIdsResponse, TrackId } from '@yandex-music-int/resource-collection';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { VolumeItemModel } from '../model/VolumeItem.js';\n\nimport { createVolumeItemText, createVolumeItemTrack } from './createVolumeItem.js';\nimport { getVolumeItemKeyText, getVolumeItemKeyTrack } from './getVolumeItemKey.js';\n\nconst COUNT_VOLUMES_WITHOUT_TEXT = 1;\n\n/**\n * Функция для преобразования многомерного массива volumes: [[{id}, {id}], [...]] в плоский массив\n * Если альбом имеет больше 1 диска, перед треками вставляется объект, который отвечает за номер диска\n * @param album Альбом с полем volumes, которое содержит диски и треки альбома\n * @param items Плоский массив элементов для виртуального скролла\n * @param indexItems Map, где ключ - это id трека, а значение индекс в массиве items\n * @param trackIndexInContext Map, где ключ - это id трека, а значение индекс в альбоме (для запуска трека)\n */\nexport const makeFlatVolumeItems = (\n    album: AlbumsResourceWithTracksIdsResponse,\n    items: VolumeItemModel[],\n    indexItems: IMSTMap<ISimpleType<number>>,\n    trackIndexInContext: IMSTMap<ISimpleType<number>>\n): void => {\n    let trackIndex = 0;\n    album.volumes.forEach((volume: Array<Record<'id', TrackId>>) => {\n        if (album.volumes.length > COUNT_VOLUMES_WITHOUT_TEXT && volume[0]) {\n            items.push(createVolumeItemText());\n            indexItems.set(getVolumeItemKeyText(volume[0].id), items.length - 1);\n        }\n        volume.forEach((trackId: Record<'id', TrackId>) => {\n            items.push(createVolumeItemTrack(trackId.id, LoadingState.IDLE));\n            indexItems.set(getVolumeItemKeyTrack(trackId.id), items.length - 1);\n            trackIndexInContext.set(getVolumeItemKeyTrack(trackId.id), trackIndex);\n            trackIndex++;\n        });\n    });\n};\n","import { IMSTMap, ISimpleType } from 'mobx-state-tree';\n\nimport { TrackId } from '@yandex-music-int/resource-collection';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { VolumeItemModel } from '../model/VolumeItem.js';\n\nimport { createVolumeItemTrack } from './createVolumeItem.js';\n\n/**\n * Функция для изменения состояния у определенных треков\n * @param trackIds Массив id треков, у которых необходимо поменять состояние\n * @param items Плоский массив элементов для виртуального скролла\n * @param indexItems Map, где ключ - это id трека, а значение индекс в массиве items\n * @param state Новое состояние для конкретного трека\n */\nexport const updateVolumeItemsState = (\n    trackIds: TrackId[],\n    items: VolumeItemModel[],\n    indexItems: IMSTMap<ISimpleType<number>>,\n    state: LoadingState\n): void => {\n    trackIds.forEach((id: TrackId) => {\n        const trackIndex = indexItems.get(String(id));\n        if (typeof trackIndex !== 'undefined') {\n            items[trackIndex] = createVolumeItemTrack(id, state);\n        }\n    });\n};\n","import { types } from 'mobx-state-tree';\n\nimport { AlbumWithArtists } from '@/features/album/index.js';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nexport const RelatedAlbums = types.model('RelatedAlbums', {\n    loadingState: types.enumeration(Object.values(LoadingState)),\n    items: types.array(AlbumWithArtists)\n});\n","import { types, Instance } from 'mobx-state-tree';\n\nimport { TrackWithArtists } from '@/features/track/index.js';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { VolumeType } from '../lib/types/VolumeType.js';\n\nexport const VolumeItemTrack = types.model('VolumeItemTrack', {\n    type: types.literal(VolumeType.TRACK),\n    id: types.union(types.string, types.number),\n    data: types.maybeNull(TrackWithArtists),\n    position: types.maybe(types.number),\n    loadingState: types.enumeration(Object.values(LoadingState))\n});\n\nexport const VolumeItemText = types.model('VolumeItemText', {\n    type: types.literal(VolumeType.TEXT),\n    data: types.maybeNull(types.number)\n});\n\nexport const VolumeItem = types.union(VolumeItemText, VolumeItemTrack);\n\nexport type VolumeItemModel = Instance<typeof VolumeItem>;\nexport type VolumeItemTextModel = Instance<typeof VolumeItemText>;\nexport type VolumeItemTrackModel = Instance<typeof VolumeItemTrack>;\n","import { cast, flow, getEnv, Instance, types, getRoot } from 'mobx-state-tree';\n\nimport { HttpErrorException, HttpResponseStatusCode } from '@yandex-music-int/http-client';\nimport {\n    Album as AlbumEntity,\n    AlbumsResourceWithTracksIdsResponse,\n    AlbumsResourceWithTracksParams,\n    AlbumType,\n    ArtistsResourceSafeDirectAlbumsParams,\n    ArtistsResourceSafeDirectAlbumsResponse,\n    Period,\n    TopResourceCategoryParams,\n    TopResourceCategoryResponse,\n    TopResourceCategoryType,\n    Track,\n    TracksMetaParams\n} from '@yandex-music-int/resource-collection';\n\nimport { AlbumWithArtists, albumWithArtistsResponseToModel } from '@/features/album/index.js';\n\nimport { LoadingState, StoreEnv, Experiments } from '@/shared/lib/index.js';\n\nimport { getPreparedIds } from '../lib/getPreparedIds.js';\nimport { insertDataToVolumeItems } from '../lib/insertDataToVolumeItems.js';\nimport { makeFlatVolumeItems } from '../lib/makeFlatVolumeItems.js';\nimport { VolumeType } from '../lib/types/VolumeType.js';\nimport { updateVolumeItemsState } from '../lib/updateVolumeItemsState.js';\n\nimport { RelatedAlbums } from './RelatedAlbums.js';\nimport { VolumeItem } from './VolumeItem.js';\n\nconst INITIAL_TRACKS_COUNT_TO_FETCH = 10;\nconst RELATED_ALBUMS_PAGE_SIZE = 8;\n\ninterface ArtistsResourceParams extends Omit<ArtistsResourceSafeDirectAlbumsParams, 'artistId'> {\n    artistId?: string;\n}\n\nexport const Album = types\n    .model('Album', {\n        meta: types.maybeNull(AlbumWithArtists),\n        items: types.array(VolumeItem),\n        indexItems: types.map(types.number),\n        trackIndexInContext: types.map(types.number),\n        loadingState: types.enumeration(Object.values(LoadingState)),\n        errorStatusCode: types.maybeNull(types.number),\n        latestGenreAlbums: RelatedAlbums,\n        otherArtistAlbums: RelatedAlbums,\n        otherAlbumVersions: types.array(AlbumWithArtists)\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .views((self) => {\n        return {\n            get isNonMusicType(): boolean {\n                if (self.meta?.type) {\n                    return [AlbumType.PODCAST, AlbumType.AUDIOBOOK].includes(self.meta.type);\n                }\n\n                return false;\n            }\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .views((self) => {\n        return {\n            get isOtherArtistAlbumsAvailable(): boolean {\n                return Boolean(\n                    !self.isNonMusicType && self.meta?.artists?.length === 1 && !self.meta?.artists[0]?.various\n                );\n            },\n\n            get isLatestGenreAlbumsAvailable(): boolean {\n                return Boolean(!self.isNonMusicType && self.meta?.genre);\n            },\n\n            get isNotFound(): boolean {\n                return (\n                    self.loadingState === LoadingState.REJECT &&\n                    self.errorStatusCode === HttpResponseStatusCode.NOT_FOUND\n                );\n            },\n\n            get isAlbumLoadingError(): boolean {\n                return self.loadingState === LoadingState.REJECT;\n            },\n\n            get isOtherAlbumVersionsExist(): boolean {\n                return Boolean(\n                    self.loadingState === LoadingState.IDLE ||\n                        self.loadingState === LoadingState.PENDING ||\n                        (self.otherAlbumVersions && self.otherAlbumVersions.length > 0)\n                );\n            },\n\n            get isLatestGenreAlbumsExist(): boolean {\n                return Boolean(\n                    self.latestGenreAlbums.loadingState === LoadingState.IDLE ||\n                        self.latestGenreAlbums.loadingState === LoadingState.PENDING ||\n                        (self.latestGenreAlbums.items && self.latestGenreAlbums.items.length > 0)\n                );\n            },\n\n            get isOtherArtistAlbumsExist(): boolean {\n                return Boolean(\n                    self.otherArtistAlbums.loadingState === LoadingState.IDLE ||\n                        self.otherArtistAlbums.loadingState === LoadingState.PENDING ||\n                        (self.otherArtistAlbums.items && self.otherArtistAlbums.items.length > 0)\n                );\n            },\n\n            get isAlbumLoading(): boolean {\n                return self.loadingState === LoadingState.IDLE || self.loadingState === LoadingState.PENDING;\n            },\n\n            get isLatestGenreAlbumsLoading(): boolean {\n                return (\n                    self.latestGenreAlbums.loadingState === LoadingState.IDLE ||\n                    self.latestGenreAlbums.loadingState === LoadingState.PENDING\n                );\n            },\n\n            get isOtherArtistAlbumsLoading(): boolean {\n                return (\n                    self.otherArtistAlbums.loadingState === LoadingState.IDLE ||\n                    self.otherArtistAlbums.loadingState === LoadingState.PENDING\n                );\n            }\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getLatestGenreAlbums: flow(function* (\n                params: TopResourceCategoryParams\n            ): Generator<Promise<TopResourceCategoryResponse>, void, TopResourceCategoryResponse> {\n                const { topResource, logger } = getEnv<StoreEnv>(self);\n\n                if (self.latestGenreAlbums.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    self.latestGenreAlbums.loadingState = LoadingState.PENDING;\n\n                    const data = yield topResource.getTopByGenre(params);\n\n                    self.latestGenreAlbums.items = cast(data.albums.map(albumWithArtistsResponseToModel));\n\n                    self.latestGenreAlbums.loadingState = LoadingState.RESOLVE;\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    self.latestGenreAlbums.loadingState = LoadingState.REJECT;\n                }\n            })\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getOtherArtistAlbums: flow(function* (\n                params: ArtistsResourceParams,\n                albumId: number\n            ): Generator<\n                Promise<ArtistsResourceSafeDirectAlbumsResponse>,\n                void,\n                ArtistsResourceSafeDirectAlbumsResponse\n            > {\n                const { artistsResource, logger } = getEnv<StoreEnv>(self);\n\n                if (self.otherArtistAlbums.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    if (!params.artistId) {\n                        self.otherArtistAlbums.loadingState = LoadingState.REJECT;\n\n                        return;\n                    }\n\n                    self.otherArtistAlbums.loadingState = LoadingState.PENDING;\n\n                    const data = yield artistsResource.getSafeDirectAlbums({\n                        ...params,\n                        artistId: params.artistId\n                    });\n\n                    self.otherArtistAlbums.items = cast(\n                        data.albums\n                            .filter((album: AlbumEntity) => String(album.id) !== String(albumId))\n                            .map(albumWithArtistsResponseToModel)\n                    );\n\n                    self.otherArtistAlbums.loadingState = LoadingState.RESOLVE;\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    self.otherArtistAlbums.loadingState = LoadingState.REJECT;\n                }\n            })\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getTracks: flow(function* ({ trackIds }: TracksMetaParams): Generator<Promise<Track[]>, void, Track[]> {\n                const { tracksResource, logger } = getEnv<StoreEnv>(self);\n\n                try {\n                    if (!self.meta?.id) {\n                        return;\n                    }\n\n                    updateVolumeItemsState(trackIds, self.items, self.indexItems, LoadingState.PENDING);\n\n                    const data = yield tracksResource.getTracksMeta({\n                        trackIds: getPreparedIds(trackIds, self.meta.id)\n                    });\n\n                    insertDataToVolumeItems(data, self.items, self.indexItems);\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    updateVolumeItemsState(trackIds, self.items, self.indexItems, LoadingState.REJECT);\n                }\n            })\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getData: flow(function* ({\n                albumId\n            }: AlbumsResourceWithTracksParams): Generator<\n                Promise<AlbumsResourceWithTracksIdsResponse | unknown>,\n                void,\n                AlbumsResourceWithTracksIdsResponse\n            > {\n                const { albumResource, logger } = getEnv<StoreEnv>(self);\n                // @ts-ignore\n                const { experiments } = getRoot(self);\n                const isAlbumVersionsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextAlbumDisableVersions,\n                    'on'\n                );\n                const isAlbumTracksDisabled = experiments.checkExperiment(Experiments.WebNextAlbumDisableTracks, 'on');\n                const isLatestGenreAlbumsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextAlbumDisableLatestGenreAlbums,\n                    'on'\n                );\n                const isOtherArtistAlbumsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextAlbumDisableOtherArtistAlbums,\n                    'on'\n                );\n\n                if (self.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    self.loadingState = LoadingState.PENDING;\n\n                    const data = yield albumResource.getAlbumWithTracksIds({\n                        albumId,\n                        resumeStream: false\n                    });\n\n                    if (data?.error === 'not-found') {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                        self.loadingState = LoadingState.REJECT;\n                        self.otherArtistAlbums.loadingState = LoadingState.REJECT;\n                        self.latestGenreAlbums.loadingState = LoadingState.REJECT;\n                        return;\n                    }\n\n                    self.meta = albumWithArtistsResponseToModel(data);\n\n                    if (!isAlbumVersionsDisabled && data.duplicates && data.duplicates.length > 0) {\n                        self.otherAlbumVersions = cast(data.duplicates?.map(albumWithArtistsResponseToModel));\n                    }\n\n                    if (!isAlbumTracksDisabled) {\n                        makeFlatVolumeItems(data, self.items, self.indexItems, self.trackIndexInContext);\n\n                        const initialTrackIds: string[] = [];\n\n                        for (let index = 0; index < INITIAL_TRACKS_COUNT_TO_FETCH; index++) {\n                            const item = self.items[index];\n                            if (item?.type === VolumeType.TRACK) {\n                                initialTrackIds.push(String(item.id));\n                            }\n                        }\n\n                        yield self.getTracks({ trackIds: initialTrackIds });\n                    }\n                    let latestGenreAlbumsRequest;\n                    let getOtherArtistAlbumsRequest;\n\n                    if (!isLatestGenreAlbumsDisabled && self.isLatestGenreAlbumsAvailable) {\n                        latestGenreAlbumsRequest = self.getLatestGenreAlbums({\n                            category: TopResourceCategoryType.RECENT_ALBUMS,\n                            period: Period.WEEK,\n                            pageSize: RELATED_ALBUMS_PAGE_SIZE,\n                            genre: data.genre\n                        });\n                    } else {\n                        self.latestGenreAlbums.loadingState = LoadingState.RESOLVE;\n                    }\n\n                    if (!isOtherArtistAlbumsDisabled && self.isOtherArtistAlbumsAvailable) {\n                        getOtherArtistAlbumsRequest = self.getOtherArtistAlbums(\n                            {\n                                artistId: String(data.artists[0]?.id),\n                                limit: RELATED_ALBUMS_PAGE_SIZE\n                            },\n                            albumId\n                        );\n                    } else {\n                        self.otherArtistAlbums.loadingState = LoadingState.RESOLVE;\n                    }\n\n                    yield Promise.allSettled([latestGenreAlbumsRequest, getOtherArtistAlbumsRequest]);\n\n                    // @ts-expect-error\n                    // TS считает, что статусы никогда не пересекутся, но на самом деле мы можем уйти со страницы,\n                    // раньше чем закончится последний ретрай и/или запрос, когда уже проставлен статус IDLE\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.RESOLVE;\n                    }\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    if (\n                        error instanceof HttpErrorException &&\n                        (error.statusCode === HttpResponseStatusCode.NOT_FOUND ||\n                            error.statusCode === HttpResponseStatusCode.BAD_REQUEST)\n                    ) {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                    }\n\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.REJECT;\n                        self.otherArtistAlbums.loadingState = LoadingState.REJECT;\n                        self.latestGenreAlbums.loadingState = LoadingState.REJECT;\n                    }\n                }\n            }),\n            reset() {\n                self.meta = null;\n                self.errorStatusCode = null;\n                self.items = cast([]);\n                self.indexItems.clear();\n                self.trackIndexInContext.clear();\n                self.loadingState = LoadingState.IDLE;\n                self.latestGenreAlbums.loadingState = LoadingState.IDLE;\n                self.latestGenreAlbums.items = cast([]);\n                self.otherArtistAlbums.loadingState = LoadingState.IDLE;\n                self.otherArtistAlbums.items = cast([]);\n                self.otherAlbumVersions = cast([]);\n            }\n        };\n    });\n\nexport type AlbumModel = Instance<typeof Album>;\n","export { AlbumPage } from './ui/Album/Album.js';\nexport { AlbumNotFoundPage } from './ui/AlbumNotFound/AlbumNotFound.js';\nexport { Album } from './model/Album.js';\n","export enum VolumeType {\n    TRACK = 'track',\n    TEXT = 'text'\n}\n","'use client';\n\nimport { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { notFound } from 'next/navigation.js';\nimport { CSSProperties, ReactElement, use, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ListRange } from 'react-virtuoso';\n\nimport { YaMusicContexts } from '@yandex-music-int/player-contexts';\nimport { useElementOffsetY } from '@yandex-music-int/sol/common/hooks/useElementOffsetY.js';\nimport { Caption } from '@yandex-music-int/sol/components/Typography';\n\nimport { Header } from '@/widgets/content/index.js';\nimport { PageHeaderAlbum, PageHeaderShimmer } from '@/widgets/page-header/index.js';\n\nimport { AlbumsCarousel } from '@/features/album/index.js';\nimport { TrackAlbum } from '@/features/track/index.js';\n\nimport {\n    CONTAINER_COOKIE_STORAGE,\n    getAverageBackgroundColor,\n    LoadingState,\n    NotificationContainerId,\n    TrackVariant,\n    useContainer,\n    useRumPage,\n    AnalyticsPageProvider,\n    useCreateFrom,\n    AnalyticsBlock,\n    AnalyticsPage,\n    useStore,\n    useNotify,\n    Experiments\n} from '@/shared/lib/index.js';\nimport { Footer, BaseNotificationError, TextShimmer, TrackShimmer, VirtualScroll } from '@/shared/ui/index.js';\n\nimport { VolumeType } from '../../lib/types/VolumeType.js';\nimport { VolumeItemModel } from '../../model/VolumeItem.js';\n\nimport styles from './Album.module.scss';\n\nconst DEBOUNCE_DURATION_MS = 300;\nconst DEFAULT_TRACK_SHIMMER_COUNT = 10;\n\ninterface Props {\n    albumId?: string | number;\n}\n\nconst HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION = 93;\nconst HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION = 17;\n\nexport const AlbumPage = observer(({ albumId }: Props): ReactElement => {\n    const from = useCreateFrom({ pageId: AnalyticsPage.ALBUM, blockId: AnalyticsBlock.ALBUM });\n    const albumNotificationCounter = useRef(0);\n\n    const container = useContainer();\n    const { notify } = useNotify();\n    const cookies = container.get(CONTAINER_COOKIE_STORAGE);\n    let isWebNextNavigationOn = false;\n\n    if (process.env.BUILD_TYPE === 'web') {\n        isWebNextNavigationOn = cookies.get('WebNextNavigation') === 'on';\n    }\n\n    const { album, experiments } = useStore();\n    const { formatMessage } = useIntl();\n\n    const averageColor = useMemo(() => {\n        return getAverageBackgroundColor(album?.meta?.averageColor);\n    }, [album?.meta?.averageColor]);\n\n    const { ref, offsetY } = useElementOffsetY();\n\n    const headerStyle = useMemo(() => {\n        if (offsetY !== undefined) {\n            const initialTranslateHeader = isWebNextNavigationOn\n                ? HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION\n                : HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION;\n            const translate = offsetY - initialTranslateHeader;\n            return {\n                '--average-color-background': averageColor,\n                transform: `translateY(${offsetY >= initialTranslateHeader ? 0 : translate}px)`,\n                opacity: 1\n            };\n        }\n        return {};\n    }, [offsetY, isWebNextNavigationOn, averageColor]);\n\n    useEffect(() => {\n        return () => {\n            if (album.id !== albumId) {\n                album.reset();\n                albumNotificationCounter.current = 0;\n            }\n        };\n    }, [album, albumId]);\n\n    // TODO: существует до момента, пока не появится обработка ошибок моделей\n    useEffect(() => {\n        if (album.isAlbumLoadingError && !album.isNotFound) {\n            if (albumNotificationCounter && albumNotificationCounter.current === 0) {\n                notify(\n                    <BaseNotificationError error={formatMessage({ id: 'album-errors.error-during-loading-album' })} />,\n                    {\n                        containerId: NotificationContainerId.ERROR\n                    }\n                );\n\n                albumNotificationCounter.current++;\n            }\n        }\n\n        if (\n            album.otherArtistAlbums.loadingState === LoadingState.REJECT ||\n            album.latestGenreAlbums.loadingState === LoadingState.REJECT\n        ) {\n            if (albumNotificationCounter && albumNotificationCounter.current === 0) {\n                notify(\n                    <BaseNotificationError\n                        error={formatMessage({ id: 'album-errors.error-during-loading-similar-albums' })}\n                    />,\n                    { containerId: NotificationContainerId.ERROR }\n                );\n\n                albumNotificationCounter.current++;\n            }\n        }\n    }, [\n        album.isAlbumLoadingError,\n        album.isNotFound,\n        album.latestGenreAlbums.loadingState,\n        album.otherArtistAlbums.loadingState,\n        formatMessage,\n        notify\n    ]);\n\n    const albumHeader = useMemo(() => {\n        if (album.isAlbumLoading || album.isAlbumLoadingError) {\n            return <PageHeaderShimmer className={styles.header} />;\n        }\n        return (\n            <PageHeaderAlbum\n                album={album.meta}\n                className={styles.header}\n                aria-labelledby=\"virtual-grid-header\"\n                ref={ref}\n            />\n        );\n    }, [album.isAlbumLoading, album.isAlbumLoadingError, album.meta, ref]);\n\n    const customComponents = useMemo(() => {\n        return {\n            Header: () => {\n                return (\n                    <>\n                        <Header />\n                        {albumHeader}\n                    </>\n                );\n            },\n            Footer: () => (\n                <div className={styles.footerContainer}>\n                    <div>\n                        {album.isOtherAlbumVersionsExist && (\n                            <AlbumsCarousel\n                                className={styles.carousel}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                                isLoading={album.isAlbumLoading}\n                                title={formatMessage({ id: 'entity-names.other-album-versions' })}\n                                albums={album.otherAlbumVersions}\n                            />\n                        )}\n                        {album.isLatestGenreAlbumsExist && (\n                            <AlbumsCarousel\n                                className={styles.carousel}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                                isLoading={album.isLatestGenreAlbumsLoading}\n                                title={formatMessage({ id: 'entity-names.new-albums-in-genre' })}\n                                albums={album.latestGenreAlbums.items}\n                            />\n                        )}\n                        {album.isOtherArtistAlbumsExist && (\n                            <AlbumsCarousel\n                                className={styles.carousel}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                                isLoading={album.isOtherArtistAlbumsLoading}\n                                title={formatMessage({ id: 'entity-names.other-albums-of-artist' })}\n                                albums={album.otherArtistAlbums.items}\n                            />\n                        )}\n                    </div>\n                    <Footer className={styles.footer} />\n                </div>\n            )\n        };\n    }, [\n        albumHeader,\n        album.isOtherAlbumVersionsExist,\n        album.isAlbumLoading,\n        album.otherAlbumVersions,\n        album.isLatestGenreAlbumsExist,\n        album.isLatestGenreAlbumsLoading,\n        album.latestGenreAlbums.items,\n        album.isOtherArtistAlbumsExist,\n        album.isOtherArtistAlbumsLoading,\n        album.otherArtistAlbums.items,\n        formatMessage\n    ]);\n\n    const getAlbumTracksByRange = useCallback(\n        (range: ListRange) => {\n            const trackIds = [];\n            for (let i = range.startIndex; i <= range.endIndex; i++) {\n                const item = album.items[i] as VolumeItemModel;\n                if (item?.type === VolumeType.TRACK && item?.loadingState === LoadingState.IDLE) {\n                    trackIds.push(item.id);\n                }\n            }\n            if (trackIds.length) {\n                album.getTracks({\n                    trackIds\n                });\n            }\n        },\n        [album]\n    );\n\n    if (album.loadingState === LoadingState.IDLE) {\n        use(\n            album.getData({\n                albumId\n            })\n        );\n    }\n\n    useRumPage(album.loadingState === LoadingState.RESOLVE);\n\n    if (album.isNotFound) {\n        notFound();\n    }\n\n    const itemContentCallback = (index: number): ReactElement | undefined => {\n        const item = album?.items?.[index] as VolumeItemModel;\n\n        if (!item) {\n            return <TrackShimmer className={styles.shimmerItem} variant={TrackVariant.ALBUM} />;\n        }\n\n        if (!item?.data) {\n            switch (item?.type) {\n                case VolumeType.TEXT:\n                    return <TextShimmer className={styles.shimmerItem} />;\n\n                case VolumeType.TRACK:\n                    return <TrackShimmer className={styles.shimmerItem} variant={TrackVariant.ALBUM} />;\n            }\n        }\n\n        switch (item?.type) {\n            case VolumeType.TRACK:\n                return (\n                    <TrackAlbum\n                        track={item.data}\n                        position={item.position}\n                        albumArtists={album?.meta?.artists}\n                        playContextParams={{\n                            contextData: {\n                                type: YaMusicContexts.Album,\n                                meta: {\n                                    id: album.meta.id\n                                },\n                                from\n                            },\n                            queueParams: {\n                                index: album.trackIndexInContext.get(item.id)\n                            }\n                        }}\n                    />\n                );\n\n            case VolumeType.TEXT:\n                return (\n                    <div className={clsx(styles.shimmerItem, styles.textItem)}>\n                        <Caption variant=\"span\" type=\"entity\" size=\"m\" weight=\"medium\" className={styles.text}>\n                            <FormattedMessage id=\"entity-names.disk-number\" values={{ number: item.data }} />\n                        </Caption>\n                    </div>\n                );\n        }\n    };\n\n    const isAlbumTracksDisabled = experiments.checkExperiment(Experiments.WebNextAlbumDisableTracks, 'on');\n\n    const itemCount = isAlbumTracksDisabled ? 0 : album.items.length || DEFAULT_TRACK_SHIMMER_COUNT;\n\n    return (\n        <AnalyticsPageProvider pageId={AnalyticsPage.ALBUM}>\n            <div className={styles.averageColorBackground} style={headerStyle as CSSProperties} />\n            <VirtualScroll\n                className={clsx(styles.root, styles.important)}\n                listClassName={styles.content}\n                customComponents={customComponents}\n                totalCount={itemCount}\n                // Для корректного обновления виртуального скролла\n                // eslint-disable-next-line react/jsx-no-bind\n                itemContentCallback={itemContentCallback}\n                onGetDataByRange={getAlbumTracksByRange}\n                debounceDurationInMs={DEBOUNCE_DURATION_MS}\n                initialItemCount={itemCount}\n            />\n        </AnalyticsPageProvider>\n    );\n});\n","'use client';\n\nimport { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\n\nimport { NotFound } from '@/widgets/not-found/index.js';\n\nimport { useStore } from '@/shared/lib/index.js';\n\nexport const AlbumNotFoundPage = observer(() => {\n    const { album } = useStore();\n\n    useEffect(() => {\n        return () => {\n            album.reset();\n        };\n    }, [album]);\n\n    return <NotFound />;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AlbumCard_root__vP6k4\",\"controls\":\"AlbumCard_controls__yuO40\",\"cover\":\"AlbumCard_cover__zXmdl\",\"coverLink\":\"AlbumCard_coverLink___ZD1S\",\"image\":\"AlbumCard_image__Mm55s\",\"titleLink\":\"AlbumCard_titleLink__u_WLG\",\"artists\":\"AlbumCard_artists__phKco\",\"artistLink\":\"AlbumCard_artistLink__uPR_2\",\"playButton\":\"AlbumCard_playButton__mYK9R\",\"control\":\"AlbumCard_control__qx7Xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavigationControls_root__uCVfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Album_root__Q0lER\",\"important\":\"Album_important__BgPFO\",\"averageColorBackground\":\"Album_averageColorBackground__Azuso\",\"header\":\"Album_header__AooR_\",\"content\":\"Album_content__lB0Uw\",\"footerContainer\":\"Album_footerContainer__FmHR2\",\"carousel\":\"Album_carousel__XJnod\",\"carouselContainer\":\"Album_carouselContainer__7NJck\",\"textItem\":\"Album_textItem__fRm1d\",\"text\":\"Album_text__qHJw_\",\"shimmerItem\":\"Album_shimmerItem__Qbpj3\",\"footer\":\"Album_footer__9zwOl\"};","import { HttpException } from './HttpException.js';\nexport class HttpErrorException extends HttpException {\n    statusCode;\n    constructor(message, options) {\n        super(message, {\n            code: 'E_HTTP_CLIENT_NON_2XX_3XX_RESPONSE',\n            cause: options.cause\n        });\n        this.statusCode = options.statusCode;\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpErrorException.prototype);\n    }\n}\n//# sourceMappingURL=HttpErrorException.js.map","import { BaseException } from '@yandex-music-int/exception';\nexport class HttpException extends BaseException {\n    name = 'HttpException';\n    constructor(message = 'Http Client error', { code = 'E_HTTP_CLIENT', ...restOptions } = {}) {\n        super(message, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpException.prototype);\n    }\n}\n//# sourceMappingURL=HttpException.js.map","export var HttpResponseStatusCode;\n(function (HttpResponseStatusCode) {\n    HttpResponseStatusCode[HttpResponseStatusCode[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n    HttpResponseStatusCode[HttpResponseStatusCode[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n})(HttpResponseStatusCode || (HttpResponseStatusCode = {}));\n//# sourceMappingURL=HttpResponseStatusCode.js.map","export { HttpResponseStatusCode } from './types/HttpResponseStatusCode.js';\nexport { HttpException } from './exceptions/HttpException.js';\nexport { HttpErrorException } from './exceptions/HttpErrorException.js';\n//# sourceMappingURL=index.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","__webpack_exports__","searchParams","useSearchParams","albumId","get","notFound","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Suspense","SecondaryPage","AlbumPage","NavigationEvents","metrika","useMetrika","pathname","usePathname","useEffect","url","concat","size","hit","PrimaryPage","children","param","history","useHistory","state","isLocationNotEqual","window","location","href","pushState","primaryPage","query","search","defaultPrimaryPage","data","AlbumsCarouselComponent","forwardRef","ref","title","description","albums","isLoading","className","containerClassName","headerClassName","jsx_runtime","CarouselBlock","map","AlbumCard","album","contentLinesCount","id","AlbumsCarousel","props","AlbumWithArtists","Album","artists","types","maybe","array","Artist","views","artistNames","self","artist","name","join","albumWithArtistsResponseToModel","response","artistResponseToModel","cast","albumResponseToModel","observer","from","useCreateFrom","isFuture","useFuture","formatMessage","useIntl","handleOnLikeClick","useOnLikeClick","sendLikeSearchFeedback","sendNavigateSearchFeedback","sendPlaySearchFeedback","useSearchFeedback","albumSingleType","type","AlbumType","SINGLE","undefined","addition","additionFormatter","year","version","explicitMark","contentWarning","ContentWarning","EXPLICIT","ExplicitMarkVariant","E","albumName","useMemo","isPlaying","togglePlay","usePlayableContext","playContextParams","contextData","YaMusicContexts","meta","loadContextMeta","handleClick","useCallback","event","stopPropagation","preventDefault","handleNavigate","onSearchFeedbackPlayed","setOnSearchFeedbackPlayed","useState","handlePlayButtonClick","onSearchFeedbackLiked","setOnSearchFeedbackLiked","handleLikeButtonClick","isLiked","menuControl","Button","clsx","styles","aria-label","icon","Icon","variant","radius","onClick","view","Paper","withShadow","jsxs","Link","Image","src","coverUri","fit","alt","withAvatarReplace","CommonCardControls","playControl","PlayButton","buttonVariant","withHover","iconSize","disabled","isAvailable","likeControl","LikeButton","EntityCard","Caption","weight","lineClamp","SeparatedArtists","linkClassName","captionSize","useHistoryBackOrForward","moveBack","debounce","withBackwardFallback","canBack","replaceState","back","moveForward","forward","Boolean","canForward","NavigationControls","withBackwardControl","withForwardControl","settings","useStore","isMobile","layout","LayoutName","Mobile","div","getPreparedIds","trackIds","trackId","createVolumeItemText","VolumeType","TEXT","createVolumeItemTrack","loadingState","position","TRACK","getVolumeItemKeyText","getVolumeItemKeyTrack","String","insertDataToVolumeItems","items","indexItems","forEach","track","trackIndex","LoadingState","RESOLVE","trackWithArtistsResponseToModel","trackPosition","index","volumeIndex","volume","makeFlatVolumeItems","trackIndexInContext","volumes","length","push","set","IDLE","updateVolumeItemsState","RelatedAlbums","model","enumeration","Object","values","VolumeItemTrack","literal","union","string","number","maybeNull","TrackWithArtists","VolumeItemText","VolumeItem","errorStatusCode","latestGenreAlbums","otherArtistAlbums","otherAlbumVersions","isNonMusicType","PODCAST","AUDIOBOOK","includes","isOtherArtistAlbumsAvailable","various","isLatestGenreAlbumsAvailable","genre","isNotFound","REJECT","HttpResponseStatusCode","NOT_FOUND","isAlbumLoadingError","isOtherAlbumVersionsExist","PENDING","isLatestGenreAlbumsExist","isOtherArtistAlbumsExist","isAlbumLoading","isLatestGenreAlbumsLoading","isOtherArtistAlbumsLoading","actions","getLatestGenreAlbums","flow","params","topResource","logger","getEnv","getTopByGenre","error","Error","getOtherArtistAlbums","artistsResource","artistId","getSafeDirectAlbums","filter","getTracks","tracksResource","getTracksMeta","getData","albumResource","experiments","getRoot","isAlbumVersionsDisabled","checkExperiment","Experiments","WebNextAlbumDisableVersions","isAlbumTracksDisabled","WebNextAlbumDisableTracks","isLatestGenreAlbumsDisabled","WebNextAlbumDisableLatestGenreAlbums","isOtherArtistAlbumsDisabled","WebNextAlbumDisableOtherArtistAlbums","latestGenreAlbumsRequest","getOtherArtistAlbumsRequest","getAlbumWithTracksIds","resumeStream","duplicates","initialTrackIds","item","category","TopResourceCategoryType","RECENT_ALBUMS","period","Period","WEEK","pageSize","limit","allSettled","HttpErrorException","statusCode","BAD_REQUEST","reset","clear","pageId","AnalyticsPage","ALBUM","blockId","AnalyticsBlock","albumNotificationCounter","useRef","container","useContainer","notify","useNotify","CONTAINER_COOKIE_STORAGE","averageColor","getAverageBackgroundColor","offsetY","useElementOffsetY","headerStyle","translate","transform","opacity","current","BaseNotificationError","containerId","NotificationContainerId","ERROR","albumHeader","PageHeaderShimmer","PageHeaderAlbum","aria-labelledby","customComponents","Header","Fragment","Footer","getAlbumTracksByRange","i","range","startIndex","endIndex","use","useRumPage","itemCount","AnalyticsPageProvider","style","VirtualScroll","listClassName","totalCount","itemContentCallback","TrackShimmer","TrackVariant","TextShimmer","TrackAlbum","albumArtists","queueParams","FormattedMessage","onGetDataByRange","debounceDurationInMs","initialItemCount","AlbumNotFoundPage","NotFound","module","exports","_HttpException_js__WEBPACK_IMPORTED_MODULE_0__","e","message","options","code","cause","setPrototypeOf","prototype","HttpException","_yandex_music_int_exception__WEBPACK_IMPORTED_MODULE_0__","y","restOptions"],"sourceRoot":""}