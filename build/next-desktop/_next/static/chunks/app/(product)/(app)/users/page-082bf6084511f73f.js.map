{"version":3,"file":"static/chunks/app/(product)/(app)/users/page-082bf6084511f73f.js","mappings":"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","sources":["webpack://_N_E/?9403","webpack://_N_E/./src/app/(product)/(app)/users/page.tsx","webpack://_N_E/./src/domain/app/navigation/NavigationEvents.tsx","webpack://_N_E/./src/domain/app/navigation/PrimaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/SecondaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/index.ts","webpack://_N_E/./src/domain/features/playlist/model/PlaylistOwner.ts","webpack://_N_E/./src/domain/features/playlist/model/PlaylistMadeFor.ts","webpack://_N_E/./src/domain/features/playlist/model/PlaylistMeta.ts","webpack://_N_E/./src/domain/features/playlist/lib/playlistOwnerResponseToModel.ts","webpack://_N_E/./src/domain/features/playlist/lib/playlistMadeForResponseToModel.ts","webpack://_N_E/./src/domain/features/playlist/lib/playlistResponseToMetaModel.ts","webpack://_N_E/./src/domain/features/playlist/lib/playlistWithArtistsResponseToModel.ts","webpack://_N_E/./src/domain/features/playlist/index.ts","webpack://_N_E/./src/domain/features/playlist/model/PlaylistWithArtists.ts","webpack://_N_E/./src/domain/features/playlist/ui/PlaylistCard/PlaylistCard.tsx","webpack://_N_E/./src/domain/features/playlist/ui/PlaylistsCarousel/PlaylistsCarousel.tsx","webpack://_N_E/./src/domain/pages/playlist/lib/updatePlaylistItemsState.ts","webpack://_N_E/./src/domain/pages/playlist/model/PlaylistItem.ts","webpack://_N_E/./src/domain/pages/playlist/model/Playlist.ts","webpack://_N_E/./src/domain/pages/playlist/index.ts","webpack://_N_E/./src/domain/pages/playlist/ui/Playlist/Playlist.tsx","webpack://_N_E/./src/domain/pages/playlist/ui/PlaylistNotFound/PlaylistNotFound.tsx","webpack://_N_E/./src/domain/features/playlist/ui/PlaylistCard/PlaylistCard.module.scss","webpack://_N_E/./src/domain/pages/playlist/ui/Playlist/Playlist.module.scss","webpack://_N_E/../../packages/http-client/build/exceptions/HttpErrorException.js","webpack://_N_E/../../packages/http-client/build/exceptions/HttpException.js","webpack://_N_E/../../packages/http-client/build/types/HttpResponseStatusCode.js","webpack://_N_E/../../packages/http-client/build/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/andrey-volkov/projects/arcadia/music/frontend/musfront/services/music/src/app/(product)/(app)/users/page.tsx\")","'use client';\n\nimport { notFound, useSearchParams } from 'next/navigation.js';\nimport { ReactElement } from 'react';\n\nimport { SecondaryPage } from '@/app/navigation/index.js';\n\nimport { PlaylistPage } from '@/pages/playlist/index.js';\n\nconst UsersPage = (): ReactElement | void => {\n    const searchParams = useSearchParams();\n\n    const userId = searchParams.get('userId');\n    const kind = searchParams.get('kind');\n\n    if (!userId || !kind) {\n        notFound();\n    }\n\n    return (\n        <SecondaryPage>\n            <PlaylistPage userId={userId} kind={kind} />\n        </SecondaryPage>\n    );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default UsersPage;\n","'use client';\n\nimport { usePathname, useSearchParams } from 'next/navigation.js';\nimport { ReactNode, useEffect } from 'react';\n\nimport { useMetrika } from '@/shared/lib/index.js';\n\nexport const NavigationEvents = (): ReactNode => {\n    const metrika = useMetrika();\n    const pathname = usePathname();\n    const searchParams = useSearchParams();\n\n    useEffect(() => {\n        const url = `${pathname}${searchParams.size > 0 ? `?${searchParams}` : ''}`;\n        metrika.hit(url);\n    }, [pathname, searchParams, metrika]);\n\n    return null;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {}\n\nexport const PrimaryPage = ({ children }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            history?.pushState({\n                href: window.location.href,\n                primaryPage: {\n                    pathname: window.location.pathname,\n                    query: window.location.search\n                }\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <Suspense>{children}</Suspense>;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {\n    defaultPrimaryPage?: string;\n}\n\nexport const SecondaryPage = ({ children, defaultPrimaryPage = '/' }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            const primaryPage = history?.state?.data.primaryPage ?? { pathname: defaultPrimaryPage, query: '' };\n            history?.pushState({\n                href: window.location.href,\n                primaryPage\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <Suspense>{children}</Suspense>;\n};\n","export { PrimaryPage } from './PrimaryPage.js';\nexport { SecondaryPage } from './SecondaryPage.js';\nexport { NavigationEvents } from './NavigationEvents.js';\n","import { types, Instance } from 'mobx-state-tree';\n\nimport { OwnerSex } from '@yandex-music-int/resource-collection';\n\nexport const PlaylistOwner = types.model('PlaylistOwner', {\n    uid: types.number,\n    login: types.string,\n    name: types.string,\n    sex: types.enumeration(Object.values(OwnerSex)),\n    verified: types.boolean\n});\n\nexport type PlaylistOwnerModel = Instance<typeof PlaylistOwner>;\n","import { types, Instance } from 'mobx-state-tree';\n\nimport { CaseForms } from '@/shared/models/CaseForms.js';\n\nimport { PlaylistOwner } from './PlaylistOwner.js';\n\nexport const PlaylistMadeFor = types.model('PlaylistOwner', {\n    userInfo: types.maybeNull(PlaylistOwner),\n    caseForms: types.maybeNull(CaseForms)\n});\n\nexport type PlaylistMadeForModel = Instance<typeof PlaylistMadeFor>;\n","import { Instance, types } from 'mobx-state-tree';\n\nimport { Playlist } from '@/entities/playlist/index.js';\n\nimport { PlaylistMadeFor } from './PlaylistMadeFor.js';\nimport { PlaylistOwner } from './PlaylistOwner.js';\n\nexport const PlaylistMeta = Playlist.props({\n    owner: types.maybe(PlaylistOwner),\n    modified: types.string,\n    description: types.maybe(types.string),\n    madeFor: types.maybeNull(PlaylistMadeFor)\n});\n\nexport type PlaylistMetaModel = Instance<typeof PlaylistMeta>;\n","import { Owner } from '@yandex-music-int/resource-collection';\n\nimport { PlaylistOwnerModel } from '../model/PlaylistOwner.js';\n\nexport const playlistOwnerResponseToModel = (response: Owner): PlaylistOwnerModel => ({\n    uid: response.uid,\n    login: response.login,\n    name: response.name,\n    sex: response.sex,\n    verified: response.verified\n});\n","import { cast } from 'mobx-state-tree';\n\nimport { MadeFor } from '@yandex-music-int/resource-collection';\n\nimport { caseFormsResponseToModel } from '@/shared/lib/index.js';\n\nimport { type PlaylistMadeForModel } from '../model/PlaylistMadeFor.js';\n\nimport { playlistOwnerResponseToModel } from './playlistOwnerResponseToModel.js';\n\nexport const playlistMadeForResponseToModel = (response: MadeFor): PlaylistMadeForModel => {\n    return cast({\n        userInfo: response.userInfo ? playlistOwnerResponseToModel(response.userInfo) : null,\n        caseForms: response.caseForms ? caseFormsResponseToModel(response.caseForms) : null\n    });\n};\n","import { cast } from 'mobx-state-tree';\n\nimport { Playlist } from '@yandex-music-int/resource-collection';\n\nimport { playlistResponseToModel } from '@/entities/playlist/index.js';\n\nimport { type PlaylistMetaModel } from '../model/PlaylistMeta.js';\n\nimport { playlistMadeForResponseToModel } from './playlistMadeForResponseToModel.js';\nimport { playlistOwnerResponseToModel } from './playlistOwnerResponseToModel.js';\n\nexport const playlistResponseToMetaModel = (response: Playlist): PlaylistMetaModel => {\n    return cast({\n        ...playlistResponseToModel(response),\n        owner: response.owner ? playlistOwnerResponseToModel(response.owner) : undefined,\n        description: response.description,\n        modified: response.modified,\n        madeFor: response.madeFor ? playlistMadeForResponseToModel(response.madeFor) : null\n    });\n};\n","import { cast } from 'mobx-state-tree';\n\nimport { PlaylistWithArtists as PlaylistWithArtistsResponse } from '@yandex-music-int/resource-collection';\n\nimport { artistResponseToModel } from '@/entities/artist/index.js';\nimport { playlistResponseToModel } from '@/entities/playlist/index.js';\n\nimport { PlaylistWithArtistsModel } from '../model/PlaylistWithArtists.js';\n\nexport const playlistWithArtistsResponseToModel = (\n    playlistResponse: PlaylistWithArtistsResponse | null | undefined\n): PlaylistWithArtistsModel => {\n    return cast({\n        ...playlistResponseToModel(playlistResponse),\n        artists: playlistResponse?.artists?.map(artistResponseToModel) ?? []\n    });\n};\n","export { PlaylistCard } from './ui/PlaylistCard/PlaylistCard.js';\nexport { PlaylistsCarousel } from './ui/PlaylistsCarousel/PlaylistsCarousel.js';\nexport { type PlaylistWithArtistsModel, PlaylistWithArtists } from './model/PlaylistWithArtists.js';\nexport { PlaylistMeta, type PlaylistMetaModel } from './model/PlaylistMeta.js';\nexport { playlistResponseToMetaModel } from './lib/playlistResponseToMetaModel.js';\nexport { playlistWithArtistsResponseToModel } from './lib/playlistWithArtistsResponseToModel.js';\n","import { Instance, types } from 'mobx-state-tree';\n\nimport { Artist } from '@/entities/artist/index.js';\nimport { Playlist } from '@/entities/playlist/index.js';\n\nexport const PlaylistWithArtists = Playlist.props({\n    artists: types.maybe(types.array(Artist))\n});\n\nexport type PlaylistWithArtistsModel = Instance<typeof PlaylistWithArtists>;\n","'use client';\n\nimport { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport React, { MouseEvent, ReactElement, useCallback, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { YaMusicContexts } from '@yandex-music-int/player-contexts';\nimport { Button } from '@yandex-music-int/sol/components/Button';\nimport { EntityCard, EntityCardProps, CommonCardControls } from '@yandex-music-int/sol/components/EntityCard';\nimport { Icon } from '@yandex-music-int/sol/components/Icon';\nimport { Image } from '@yandex-music-int/sol/components/Image';\nimport { Paper } from '@yandex-music-int/sol/components/Paper';\nimport { Caption } from '@yandex-music-int/sol/components/Typography';\n\nimport { SeparatedArtists } from '@/entities/artist/index.js';\nimport { useOnLikeClick } from '@/entities/playlist/index.js';\n\nimport { useCreateFrom, useSearchFeedback, WithChildren, WithClassName, usePlayableContext } from '@/shared/lib/index.js';\nimport { CardLikes, Link, PlayButton, useFuture, LikeButton } from '@/shared/ui/index.js';\n\nimport { PlaylistWithArtistsModel } from '../../model/PlaylistWithArtists.js';\n\nimport styles from './PlaylistCard.module.scss';\n\nexport interface Props extends WithClassName, WithChildren {\n    playlist: PlaylistWithArtistsModel;\n    customDescription?: string;\n    contentLinesCount?: EntityCardProps['contentLinesCount'];\n}\n\nexport const PlaylistCard = observer(\n    ({ className, playlist, children, contentLinesCount, customDescription }: Props): ReactElement => {\n        const from = useCreateFrom();\n        const { isFuture } = useFuture();\n        const { formatMessage } = useIntl();\n        const handleOnLikeClick = useOnLikeClick(playlist);\n        const { sendLikeSearchFeedback, sendNavigateSearchFeedback, sendPlaySearchFeedback } = useSearchFeedback();\n\n        const playlistAriaLabel = useMemo(() => {\n            const likesLabel =\n                typeof playlist.actualLikesCount === 'number'\n                    ? playlist.actualLikesCount > 0\n                        ? formatMessage({ id: 'entity-names.likes-counter' }, { counter: playlist.actualLikesCount })\n                        : formatMessage({ id: 'entity-names.likes-counter-empty' })\n                    : '';\n            const playlistName = formatMessage({ id: 'entity-names.playlist-name' }, { playlistName: playlist.title });\n\n            return `${playlistName} ${likesLabel}`;\n        }, [formatMessage, playlist.title, playlist.actualLikesCount]);\n\n        const { isPlaying, togglePlay } = usePlayableContext({\n            playContextParams: {\n                contextData: {\n                    type: YaMusicContexts.Playlist,\n                    meta: {\n                        id: playlist.uuid\n                    },\n                    from\n                },\n                loadContextMeta: true\n            }\n        });\n\n        //TODO: заменить на внутреннюю обработку в MenuButton\n        const handleClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n            event.stopPropagation();\n            event.preventDefault();\n        }, []);\n\n        const handleNavigate = useCallback(() => {\n            sendNavigateSearchFeedback?.();\n        }, [sendNavigateSearchFeedback]);\n\n        const [onSearchFeedbackPlayed, setOnSearchFeedbackPlayed] = useState(false);\n        const handlePlayButtonClick = useCallback(() => {\n            if (!onSearchFeedbackPlayed && !isPlaying) {\n                setOnSearchFeedbackPlayed(true);\n                sendPlaySearchFeedback?.();\n            }\n\n            togglePlay();\n        }, [isPlaying, onSearchFeedbackPlayed, sendPlaySearchFeedback, togglePlay]);\n\n        const [onSearchFeedbackLiked, setOnSearchFeedbackLiked] = useState(false);\n        const handleLikeButtonClick = useCallback(() => {\n            if (!onSearchFeedbackLiked && !playlist.isLiked) {\n                setOnSearchFeedbackLiked(true);\n                sendLikeSearchFeedback?.();\n            }\n\n            handleOnLikeClick();\n        }, [handleOnLikeClick, onSearchFeedbackLiked, playlist.isLiked, sendLikeSearchFeedback]);\n\n        const menuControl = useMemo(() => {\n            if (isFuture) {\n                return (\n                    <Button\n                        className={clsx(styles.icon, styles.control)}\n                        //TODO: Заменить на релевантное имя, когда будет готово контекстное меню\n                        aria-label={formatMessage({ id: 'interface-actions.context-menu' })}\n                        icon={<Icon size=\"xxs\" variant=\"more\" />}\n                        size=\"s\"\n                        radius=\"round\"\n                        onClick={handleClick}\n                    />\n                );\n            }\n\n            return null;\n        }, [isFuture, handleClick, formatMessage]);\n\n        const description = useMemo(() => {\n            if (customDescription) {\n                return (\n                    <Caption variant=\"span\" type=\"entity\" size=\"s\" weight=\"medium\" lineClamp={2}>\n                        {customDescription}\n                    </Caption>\n                );\n            }\n\n            if (playlist.artists) {\n                return (\n                    <SeparatedArtists\n                        className={styles.artists}\n                        artists={playlist.artists}\n                        lineClamp={1}\n                        linkClassName={styles.artistLink}\n                        captionSize=\"s\"\n                    />\n                );\n            }\n\n            return;\n        }, [playlist.artists, customDescription]);\n\n        const view = useMemo(() => {\n            return (\n                <Paper className={styles.cover} radius=\"s\" withShadow>\n                    <Link\n                        className={styles.coverLink}\n                        href={playlist.url}\n                        aria-label={playlist.title}\n                        onClick={handleNavigate}\n                    >\n                        <Image\n                            className={styles.image}\n                            src={playlist.coverUri}\n                            size={200}\n                            fit=\"cover\"\n                            alt={playlistAriaLabel}\n                            withAvatarReplace\n                        />\n                        <CommonCardControls\n                            className={styles.controls}\n                            playControl={\n                                <PlayButton\n                                    className={clsx(styles.playButton, styles.control)}\n                                    buttonVariant=\"default\"\n                                    withHover={false}\n                                    iconSize=\"l\"\n                                    variant=\"filled\"\n                                    onClick={handlePlayButtonClick}\n                                    isPlaying={isPlaying}\n                                />\n                            }\n                            likeControl={!playlist.isFavouritePlaylist && (\n                                    <LikeButton\n                                        isLiked={playlist.isLiked}\n                                        onClick={handleLikeButtonClick}\n                                        variant=\"default\"\n                                        size=\"s\"\n                                        iconSize=\"xxs\"\n                                        className={styles.control}\n                                    />\n                                )}\n                            menuControl={menuControl}\n                        />\n                    </Link>\n                </Paper>\n            );\n        }, [\n            playlist.url, \n            playlist.title, \n            playlist.coverUri, \n            playlist.isFavouritePlaylist, \n            playlist.isLiked, handleNavigate, \n            playlistAriaLabel, \n            handlePlayButtonClick, \n            isPlaying, \n            handleLikeButtonClick, \n            menuControl\n        ]);\n\n        return (\n            <EntityCard\n                aria-label={playlistAriaLabel}\n                className={clsx(styles.root, className)}\n                title={\n                    <Caption variant=\"div\" type=\"entity\" size=\"s\" weight=\"medium\" lineClamp={2}>\n                        <Link className={styles.titleLink} href={playlist.url} onClick={handleNavigate}>\n                            {playlist.title}\n                        </Link>\n                    </Caption>\n                }\n                contentLinesCount={contentLinesCount}\n                view={view}\n                description={description}\n            >\n                {Boolean(playlist.actualLikesCount) && (\n                    <CardLikes\n                        likesCount={playlist.actualLikesCount}\n                        isLiked={playlist.isLiked}\n                        handleOnLikeClick={handleOnLikeClick}\n                    />\n                )}\n                {children}\n            </EntityCard>\n        );\n    }\n);\n","'use client';\n\nimport { forwardRef, ReactElement, Ref } from 'react';\n\nimport { WithClassName } from '@/shared/lib/index.js';\nimport { CarouselBlock } from '@/shared/ui/index.js';\n\nimport { PlaylistWithArtistsModel } from '../../model/PlaylistWithArtists.js';\nimport { PlaylistCard } from '../PlaylistCard/PlaylistCard.js';\n\ninterface Props extends WithClassName {\n    forwardRef?: Ref<HTMLDivElement>;\n    title: string;\n    description?: string;\n    playlists?: PlaylistWithArtistsModel[];\n    isLoading?: boolean;\n    containerClassName?: string;\n    headerClassName?: string;\n}\n\nconst PlaylistsCarouselComponent = ({\n    forwardRef: ref,\n    title,\n    description,\n    playlists,\n    isLoading,\n    containerClassName = '',\n    className = '',\n    headerClassName\n}: Props): ReactElement | null => {\n    return (\n        <CarouselBlock\n            className={className}\n            headerClassName={headerClassName}\n            containerClassName={containerClassName}\n            isLoading={isLoading}\n            ref={ref}\n            title={title}\n            description={description}\n        >\n            {playlists?.map((playlist: PlaylistWithArtistsModel) => {\n                return <PlaylistCard key={playlist.key} playlist={playlist} contentLinesCount={3} />;\n            })}\n        </CarouselBlock>\n    );\n};\n\nexport const PlaylistsCarousel = forwardRef<HTMLDivElement, Props>((props: Props, ref: Ref<HTMLDivElement>) => {\n    return <PlaylistsCarouselComponent forwardRef={ref} {...props} />;\n});\n","import { TrackId } from '@yandex-music-int/resource-collection';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nimport { PlaylistItemModel } from '../model/PlaylistItem.js';\n\n/**\n * Функция для изменения состояния у определенных треков\n * @param trackIds Массив id треков, у которых необходимо поменять состояние\n * @param items Массив элементов для виртуального скролла\n * @param state Новое состояние для конкретного трека\n */\nexport const updatePlaylistItemsState = (\n    trackIds: TrackId[],\n    items: PlaylistItemModel[],\n    state: LoadingState\n): void => {\n    items.forEach((item: PlaylistItemModel) => {\n        if (trackIds.includes(item.id)) {\n            item = {\n                id: item.id,\n                data: null,\n                loadingState: state\n            };\n        }\n    });\n};\n","import { Instance, types } from 'mobx-state-tree';\n\nimport { TrackWithArtists } from '@/features/track/index.js';\n\nimport { LoadingState } from '@/shared/lib/index.js';\n\nexport const PlaylistItem = types.model('PlaylistItem', {\n    id: types.union(types.string, types.number),\n    data: types.maybeNull(TrackWithArtists),\n    loadingState: types.enumeration(Object.values(LoadingState))\n});\n\nexport type PlaylistItemModel = Instance<typeof PlaylistItem>;\n","import { cast, flow, getEnv, Instance, types } from 'mobx-state-tree';\n\nimport { HttpErrorException, HttpResponseStatusCode } from '@yandex-music-int/http-client';\nimport {\n    UsersResourcePlaylistsParams,\n    UsersResourcePlaylistWithTracksIds,\n    PlaylistTrackId,\n    TracksMetaParams,\n    Track,\n    PlaylistResourceParams,\n    PlaylistWithTracksIds\n} from '@yandex-music-int/resource-collection';\n\nimport { PlaylistMeta, playlistResponseToMetaModel } from '@/features/playlist/index.js';\nimport { trackWithArtistsResponseToModel } from '@/features/track/index.js';\n\nimport { LoadingState, StoreEnv } from '@/shared/lib/index.js';\n\nimport { updatePlaylistItemsState } from '../lib/updatePlaylistItemsState.js';\n\nimport { PlaylistItem, PlaylistItemModel } from './PlaylistItem.js';\n\nconst INITIAL_TRACKS_COUNT_TO_FETCH = 10;\n\nexport const Playlist = types\n    .model('Playlist', {\n        meta: types.maybeNull(PlaylistMeta),\n        items: types.array(PlaylistItem),\n        errorStatusCode: types.maybeNull(types.number),\n        loadingState: types.enumeration(Object.values(LoadingState))\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getTracks: flow(function* ({ trackIds }: TracksMetaParams): Generator<Promise<Track[]>, void, Track[]> {\n                const { tracksResource, logger } = getEnv<StoreEnv>(self);\n\n                try {\n                    if (!self.meta?.uid || !self.meta?.kind) {\n                        return;\n                    }\n\n                    updatePlaylistItemsState(trackIds, self.items, LoadingState.PENDING);\n\n                    const data = yield tracksResource.getTracksMeta({\n                        trackIds\n                    });\n\n                    self.items = cast(\n                        self.items.map((item: PlaylistItemModel) => {\n                            const trackData = data.find((track: Track) => String(track?.id) === item.id);\n\n                            if (trackData) {\n                                return {\n                                    id: trackData.id,\n                                    data: trackWithArtistsResponseToModel(trackData),\n                                    loadingState: LoadingState.RESOLVE\n                                };\n                            }\n\n                            return item;\n                        })\n                    );\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n                    updatePlaylistItemsState(trackIds, self.items, LoadingState.REJECT);\n                }\n            })\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            updateData: flow(function* (data: PlaylistWithTracksIds) {\n                if (data?.error === 'not-found') {\n                    self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                    self.loadingState = LoadingState.REJECT;\n                    return;\n                }\n\n                self.meta = playlistResponseToMetaModel(data);\n\n                const initialTrackIds: string[] = [];\n\n                self.items = cast(\n                    data.tracks.map((track: PlaylistTrackId, index: number) => {\n                        if (index < INITIAL_TRACKS_COUNT_TO_FETCH) {\n                            initialTrackIds.push(String(track.id));\n                        }\n                        return {\n                            id: String(track.id),\n                            loadingState: LoadingState.IDLE\n                        };\n                    })\n                );\n\n                return yield self.getTracks({ trackIds: initialTrackIds });\n            })\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getPlaylistByUserIdAndKind: flow(function* ({\n                userId,\n                playlistKind,\n                resumeStream = false,\n                trackMetaType = 'music'\n            }: UsersResourcePlaylistsParams): Generator<\n                Promise<UsersResourcePlaylistWithTracksIds | unknown>,\n                void,\n                UsersResourcePlaylistWithTracksIds\n            > {\n                const { usersResource, logger } = getEnv<StoreEnv>(self);\n\n                if (self.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    self.loadingState = LoadingState.PENDING;\n\n                    const data = yield usersResource.getPlaylistWithTracksIds({\n                        userId,\n                        playlistKind,\n                        resumeStream,\n                        trackMetaType\n                    });\n\n                    if (typeof data.playlistUuid !== 'string') {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                        self.loadingState = LoadingState.REJECT;\n                        return;\n                    }\n\n                    yield self.updateData(data);\n\n                    self.loadingState = LoadingState.RESOLVE;\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    if (\n                        error instanceof HttpErrorException &&\n                        (error.statusCode === HttpResponseStatusCode.NOT_FOUND ||\n                            error.statusCode === HttpResponseStatusCode.BAD_REQUEST)\n                    ) {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                    }\n\n                    self.loadingState = LoadingState.REJECT;\n                }\n            }),\n            getPlaylistByUuid: flow(function* ({\n                playlistUuid,\n                richTracks = false,\n                resumeStream = false\n            }: PlaylistResourceParams): Generator<\n                Promise<UsersResourcePlaylistWithTracksIds | unknown>,\n                void,\n                UsersResourcePlaylistWithTracksIds\n            > {\n                const { playlistResource, logger } = getEnv<StoreEnv>(self);\n\n                if (self.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    self.loadingState = LoadingState.PENDING;\n\n                    const data = yield playlistResource.getPlaylist({\n                        playlistUuid,\n                        resumeStream,\n                        richTracks\n                    });\n\n                    yield self.updateData(data);\n\n                    // @ts-expect-error\n                    // TS считает, что статусы никогда не пересекутся, но на самом деле мы можем уйти со страницы,\n                    // раньше чем закончится последний ретрай и/или запрос, когда уже проставлен статус IDLE\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.RESOLVE;\n                    }\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    if (\n                        error instanceof HttpErrorException &&\n                        (error.statusCode === HttpResponseStatusCode.NOT_FOUND ||\n                            error.statusCode === HttpResponseStatusCode.BAD_REQUEST)\n                    ) {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                    }\n\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.REJECT;\n                    }\n                }\n            }),\n            reset() {\n                self.meta = null;\n                self.loadingState = LoadingState.IDLE;\n                self.items = cast([]);\n                self.errorStatusCode = null;\n            }\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .views((self) => ({\n        get isNotFound(): boolean {\n            return (\n                self.loadingState === LoadingState.REJECT && self.errorStatusCode === HttpResponseStatusCode.NOT_FOUND\n            );\n        },\n        get isLoading() {\n            return self.loadingState === LoadingState.PENDING || self.loadingState === LoadingState.IDLE;\n        },\n        get isDisabled() {\n            return self.loadingState === LoadingState.RESOLVE && (self.items.length === 0 || !self.meta?.available);\n        }\n    }));\n\nexport type PlaylistModel = Instance<typeof Playlist>;\n","export { PlaylistPage } from './ui/Playlist/Playlist.js';\nexport { PlaylistNotFoundPage } from './ui/PlaylistNotFound/PlaylistNotFound.js';\nexport { Playlist } from './model/Playlist.js';\n","'use client';\n\nimport { observer } from 'mobx-react-lite';\nimport { notFound } from 'next/navigation.js';\nimport { ReactElement, use, useCallback, useMemo, useEffect, CSSProperties } from 'react';\nimport { ListRange } from 'react-virtuoso';\n\nimport { YaMusicContexts } from '@yandex-music-int/player-contexts';\nimport { useElementOffsetY } from '@yandex-music-int/sol/common/hooks/useElementOffsetY.js';\n\nimport { Header } from '@/widgets/content/index.js';\nimport { PageHeaderShimmer, PageHeaderPlaylist } from '@/widgets/page-header/index.js';\n\nimport { TrackPlaylist } from '@/features/track/index.js';\n\nimport { hasDuplicatesBefore } from '@/entities/playlist/index.js';\n\nimport {\n    CONTAINER_COOKIE_STORAGE,\n    LoadingState,\n    TrackVariant,\n    getAverageBackgroundColor,\n    useContainer,\n    useStore,\n    useRumPage,\n    AnalyticsPageProvider,\n    useCreateFrom,\n    AnalyticsPage,\n    AnalyticsBlock\n} from '@/shared/lib/index.js';\nimport { Footer, TrackShimmer, VirtualScroll } from '@/shared/ui/index.js';\n\nimport { PlaylistItemModel } from '../../model/PlaylistItem.js';\n\nimport styles from './Playlist.module.scss';\n\nconst DEBOUNCE_DURATION_MS = 300;\n\ninterface Props {\n    playlistUuid?: string;\n    userId?: string;\n    kind?: string;\n}\n\nconst HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION = 93;\nconst HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION = 17;\n\nexport const PlaylistPage = observer(({ userId, kind, playlistUuid }: Props): ReactElement => {\n    const from = useCreateFrom({ pageId: AnalyticsPage.PLAYLIST, blockId: AnalyticsBlock.PLAYLIST });\n    const container = useContainer();\n    const cookies = container.get(CONTAINER_COOKIE_STORAGE);\n    let isWebNextNavigationOn = false;\n\n    if (process.env.BUILD_TYPE === 'web') {\n        isWebNextNavigationOn = cookies.get('WebNextNavigation') === 'on';\n    }\n\n    const { playlist } = useStore();\n\n    const averageColor = useMemo(() => {\n        return getAverageBackgroundColor(playlist?.meta?.averageColor);\n    }, [playlist?.meta?.averageColor]);\n\n    const { ref, offsetY } = useElementOffsetY();\n\n    const headerStyle = useMemo(() => {\n        if (offsetY !== undefined) {\n            const initialTranslateHeader = isWebNextNavigationOn\n                ? HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION\n                : HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION;\n            const translate = offsetY - initialTranslateHeader;\n            return {\n                '--average-color-background': averageColor,\n                transform: `translateY(${offsetY >= initialTranslateHeader ? 0 : translate}px)`,\n                opacity: 1\n            };\n        }\n        return {};\n    }, [offsetY, isWebNextNavigationOn, averageColor]);\n\n    useEffect(() => {\n        return () => {\n            if (playlist.uid !== userId || playlist.kind !== kind || playlist.uuid !== playlistUuid) {\n                playlist.reset();\n            }\n        };\n    }, [playlist, userId, kind, playlistUuid]);\n\n    if (playlist.loadingState === LoadingState.IDLE) {\n        if (typeof playlistUuid === 'string') {\n            use(\n                playlist.getPlaylistByUuid({\n                    playlistUuid\n                })\n            );\n        } else {\n            use(\n                playlist.getPlaylistByUserIdAndKind({\n                    userId,\n                    playlistKind: kind\n                })\n            );\n        }\n    }\n\n    useRumPage(playlist.loadingState === LoadingState.RESOLVE);\n\n    if (playlist.isNotFound) {\n        notFound();\n    }\n\n    const playlistHeader = useMemo(() => {\n        if (playlist.isLoading) {\n            return <PageHeaderShimmer className={styles.header} />;\n        }\n        return (\n            <PageHeaderPlaylist\n                playlist={playlist.meta}\n                isDisabled={playlist.isDisabled}\n                className={styles.header}\n                ref={ref}\n            />\n        );\n    }, [playlist.isDisabled, playlist.isLoading, playlist.meta, ref]);\n\n    const customComponents = useMemo(() => {\n        return {\n            Header: () => {\n                return (\n                    <>\n                        <Header />\n                        {playlistHeader}\n                    </>\n                );\n            },\n\n            Footer: () => <Footer className={styles.footer} />\n        };\n    }, [playlistHeader]);\n\n    const getPlaylistTracksByRange = useCallback(\n        (range: ListRange) => {\n            const trackIds = [];\n            for (let i = range.startIndex; i <= range.endIndex; i++) {\n                const item = playlist.items[i] as PlaylistItemModel;\n                if (item?.loadingState === LoadingState.IDLE) {\n                    trackIds.push(item.id);\n                }\n            }\n            if (trackIds.length) {\n                playlist.getTracks({\n                    trackIds\n                });\n            }\n        },\n        [playlist]\n    );\n\n    const itemContentCallback = (index: number): ReactElement | undefined => {\n        const item = playlist?.items?.[index] as PlaylistItemModel;\n\n        if (!item || !item?.data) {\n            return <TrackShimmer className={styles.shimmerItem} variant={TrackVariant.PLAYLIST} />;\n        }\n\n        return (\n            <TrackPlaylist\n                track={item.data}\n                hasDuplicatesBefore={hasDuplicatesBefore(playlist?.items, item.data, index)}\n                playContextParams={{\n                    contextData: {\n                        type: YaMusicContexts.Playlist,\n                        meta: {\n                            id: playlist.meta.uuid\n                        },\n                        from\n                    },\n                    queueParams: {\n                        index\n                    },\n                    loadContextMeta: true\n                }}\n            />\n        );\n    };\n\n    return (\n        <AnalyticsPageProvider pageId={AnalyticsPage.PLAYLIST}>\n            <div className={styles.averageColorBackground} style={headerStyle as CSSProperties} />\n            <VirtualScroll\n                className={styles.root}\n                listClassName={styles.content}\n                customComponents={customComponents}\n                totalCount={playlist.items.length}\n                // Для корректного обновления виртуального скролла\n                // eslint-disable-next-line react/jsx-no-bind\n                itemContentCallback={itemContentCallback}\n                onGetDataByRange={getPlaylistTracksByRange}\n                debounceDurationInMs={DEBOUNCE_DURATION_MS}\n                initialItemCount={playlist.items.length}\n            />\n        </AnalyticsPageProvider>\n    );\n});\n","'use client';\n\nimport { observer } from 'mobx-react-lite';\n\nimport { NotFound } from '@/widgets/not-found/index.js';\n\nexport const PlaylistNotFoundPage = observer(() => {\n    return <NotFound />;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlaylistCard_root__i3pR4\",\"controls\":\"PlaylistCard_controls__Ej8Rz\",\"cover\":\"PlaylistCard_cover__tpK5L\",\"coverLink\":\"PlaylistCard_coverLink__Qmy_v\",\"image\":\"PlaylistCard_image__Li6oy\",\"titleLink\":\"PlaylistCard_titleLink__H8qEc\",\"artists\":\"PlaylistCard_artists__HtVIF\",\"artistLink\":\"PlaylistCard_artistLink__jx3KB\",\"playButton\":\"PlaylistCard_playButton__eaduk\",\"control\":\"PlaylistCard_control__73YUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Playlist_root__soQjV\",\"averageColorBackground\":\"Playlist_averageColorBackground__sTYXX\",\"header\":\"Playlist_header__AFLVW\",\"content\":\"Playlist_content__jK_zQ\",\"shimmerItem\":\"Playlist_shimmerItem__D5COd\",\"footer\":\"Playlist_footer__FT8cm\"};","import { HttpException } from './HttpException.js';\nexport class HttpErrorException extends HttpException {\n    statusCode;\n    constructor(message, options) {\n        super(message, {\n            code: 'E_HTTP_CLIENT_NON_2XX_3XX_RESPONSE',\n            cause: options.cause\n        });\n        this.statusCode = options.statusCode;\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpErrorException.prototype);\n    }\n}\n//# sourceMappingURL=HttpErrorException.js.map","import { BaseException } from '@yandex-music-int/exception';\nexport class HttpException extends BaseException {\n    name = 'HttpException';\n    constructor(message = 'Http Client error', { code = 'E_HTTP_CLIENT', ...restOptions } = {}) {\n        super(message, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpException.prototype);\n    }\n}\n//# sourceMappingURL=HttpException.js.map","export var HttpResponseStatusCode;\n(function (HttpResponseStatusCode) {\n    HttpResponseStatusCode[HttpResponseStatusCode[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n    HttpResponseStatusCode[HttpResponseStatusCode[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n})(HttpResponseStatusCode || (HttpResponseStatusCode = {}));\n//# sourceMappingURL=HttpResponseStatusCode.js.map","export { HttpResponseStatusCode } from './types/HttpResponseStatusCode.js';\nexport { HttpException } from './exceptions/HttpException.js';\nexport { HttpErrorException } from './exceptions/HttpErrorException.js';\n//# sourceMappingURL=index.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","__webpack_exports__","searchParams","useSearchParams","userId","get","kind","notFound","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","SecondaryPage","PlaylistPage","NavigationEvents","metrika","useMetrika","pathname","usePathname","useEffect","url","concat","size","hit","PrimaryPage","children","param","history","useHistory","state","isLocationNotEqual","window","location","href","pushState","primaryPage","query","search","Suspense","defaultPrimaryPage","data","PlaylistOwner","types","model","uid","number","login","string","name","sex","enumeration","Object","values","OwnerSex","verified","boolean","PlaylistMadeFor","userInfo","maybeNull","caseForms","CaseForms","PlaylistMeta","Playlist","props","owner","maybe","modified","description","madeFor","playlistOwnerResponseToModel","response","playlistMadeForResponseToModel","cast","caseFormsResponseToModel","playlistResponseToMetaModel","playlistResponseToModel","undefined","playlistWithArtistsResponseToModel","playlistResponse","artists","map","artistResponseToModel","PlaylistWithArtists","array","Artist","PlaylistCard","observer","className","playlist","contentLinesCount","customDescription","from","useCreateFrom","isFuture","useFuture","formatMessage","useIntl","handleOnLikeClick","useOnLikeClick","sendLikeSearchFeedback","sendNavigateSearchFeedback","sendPlaySearchFeedback","useSearchFeedback","playlistAriaLabel","useMemo","likesLabel","actualLikesCount","id","counter","playlistName","title","isPlaying","togglePlay","usePlayableContext","playContextParams","contextData","type","YaMusicContexts","meta","uuid","loadContextMeta","handleClick","useCallback","event","stopPropagation","preventDefault","handleNavigate","onSearchFeedbackPlayed","setOnSearchFeedbackPlayed","useState","handlePlayButtonClick","onSearchFeedbackLiked","setOnSearchFeedbackLiked","handleLikeButtonClick","isLiked","menuControl","Button","clsx","styles","aria-label","icon","Icon","variant","radius","onClick","Caption","weight","lineClamp","SeparatedArtists","linkClassName","captionSize","view","Paper","withShadow","jsxs","Link","Image","src","coverUri","fit","alt","withAvatarReplace","CommonCardControls","playControl","PlayButton","buttonVariant","withHover","iconSize","likeControl","isFavouritePlaylist","LikeButton","EntityCard","Boolean","CardLikes","likesCount","PlaylistsCarouselComponent","forwardRef","ref","playlists","isLoading","containerClassName","headerClassName","CarouselBlock","key","PlaylistsCarousel","updatePlaylistItemsState","trackIds","items","forEach","includes","item","loadingState","PlaylistItem","union","TrackWithArtists","LoadingState","errorStatusCode","actions","getTracks","flow","tracksResource","logger","getEnv","self","PENDING","getTracksMeta","trackData","find","String","track","trackWithArtistsResponseToModel","RESOLVE","error","Error","REJECT","updateData","HttpResponseStatusCode","NOT_FOUND","initialTrackIds","tracks","index","push","IDLE","getPlaylistByUserIdAndKind","playlistKind","resumeStream","trackMetaType","usersResource","getPlaylistWithTracksIds","playlistUuid","HttpErrorException","statusCode","BAD_REQUEST","getPlaylistByUuid","richTracks","playlistResource","getPlaylist","reset","views","isNotFound","isDisabled","length","available","pageId","AnalyticsPage","PLAYLIST","blockId","AnalyticsBlock","container","useContainer","CONTAINER_COOKIE_STORAGE","useStore","averageColor","getAverageBackgroundColor","offsetY","useElementOffsetY","headerStyle","translate","transform","opacity","use","useRumPage","playlistHeader","PageHeaderShimmer","PageHeaderPlaylist","customComponents","Header","Fragment","Footer","getPlaylistTracksByRange","i","range","startIndex","endIndex","AnalyticsPageProvider","div","style","VirtualScroll","listClassName","totalCount","itemContentCallback","TrackPlaylist","hasDuplicatesBefore","queueParams","TrackShimmer","TrackVariant","onGetDataByRange","debounceDurationInMs","initialItemCount","PlaylistNotFoundPage","NotFound","module","exports","_HttpException_js__WEBPACK_IMPORTED_MODULE_0__","e","message","options","code","cause","setPrototypeOf","prototype","HttpException","_yandex_music_int_exception__WEBPACK_IMPORTED_MODULE_0__","y","restOptions"],"sourceRoot":""}