{"version":3,"file":"static/chunks/app/(product)/(app)/artist/page-9cbbc02a41f1a2ed.js","mappings":"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","sources":["webpack://_N_E/?ccb7","webpack://_N_E/./src/app/(product)/(app)/artist/page.tsx","webpack://_N_E/./src/domain/app/navigation/NavigationEvents.tsx","webpack://_N_E/./src/domain/app/navigation/PrimaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/SecondaryPage.tsx","webpack://_N_E/./src/domain/app/navigation/index.ts","webpack://_N_E/./src/domain/features/navigation/lib/useHistoryBackOrForward.ts","webpack://_N_E/./src/domain/features/navigation/ui/NavigationControls.tsx","webpack://_N_E/./src/domain/features/navigation/index.ts","webpack://_N_E/./src/domain/pages/artist/lib/artistBriefInfoResponseToMeta.ts","webpack://_N_E/./src/domain/pages/artist/lib/concatPopularAlbums.ts","webpack://_N_E/./src/domain/pages/artist/model/Artist.ts","webpack://_N_E/./src/domain/pages/artist/index.ts","webpack://_N_E/./src/domain/pages/artist/ui/Artist/Artist.tsx","webpack://_N_E/./src/domain/pages/artist/ui/ArtistNotFound/ArtistNotFound.tsx","webpack://_N_E/./src/domain/features/navigation/ui/NavigationControls.module.scss","webpack://_N_E/./src/domain/pages/artist/ui/Artist/Artist.module.scss","webpack://_N_E/../../packages/http-client/build/exceptions/HttpErrorException.js","webpack://_N_E/../../packages/http-client/build/exceptions/HttpException.js","webpack://_N_E/../../packages/http-client/build/types/HttpResponseStatusCode.js","webpack://_N_E/../../packages/http-client/build/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/andrey-volkov/projects/arcadia/music/frontend/musfront/services/music/src/app/(product)/(app)/artist/page.tsx\")","'use client';\n\nimport { notFound, useSearchParams } from 'next/navigation.js';\nimport { ReactElement } from 'react';\n\nimport { SecondaryPage } from '@/app/navigation/index.js';\n\nimport { ArtistPage } from '@/pages/artist/index.js';\n\nconst Artist = (): ReactElement => {\n    const searchParams = useSearchParams();\n\n    const artistId = searchParams.get('artistId');\n\n    if (!artistId) {\n        notFound();\n    }\n\n    return (\n        <SecondaryPage>\n            <ArtistPage artistId={artistId} />\n        </SecondaryPage>\n    );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Artist;\n","'use client';\n\nimport { usePathname, useSearchParams } from 'next/navigation.js';\nimport { ReactNode, useEffect } from 'react';\n\nimport { useMetrika } from '@/shared/lib/index.js';\n\nexport const NavigationEvents = (): ReactNode => {\n    const metrika = useMetrika();\n    const pathname = usePathname();\n    const searchParams = useSearchParams();\n\n    useEffect(() => {\n        const url = `${pathname}${searchParams.size > 0 ? `?${searchParams}` : ''}`;\n        metrika.hit(url);\n    }, [pathname, searchParams, metrika]);\n\n    return null;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {}\n\nexport const PrimaryPage = ({ children }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            history?.pushState({\n                href: window.location.href,\n                primaryPage: {\n                    pathname: window.location.pathname,\n                    query: window.location.search\n                }\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <Suspense>{children}</Suspense>;\n};\n","'use client';\n\nimport { ReactNode, Suspense, useEffect } from 'react';\n\nimport { WithChildren, useHistory } from '@/shared/lib/index.js';\n\ninterface Props extends WithChildren {\n    defaultPrimaryPage?: string;\n}\n\nexport const SecondaryPage = ({ children, defaultPrimaryPage = '/' }: Props): ReactNode => {\n    const history = useHistory();\n    useEffect(() => {\n        if (!history?.state || history?.state?.isLocationNotEqual(window.location.href)) {\n            const primaryPage = history?.state?.data.primaryPage ?? { pathname: defaultPrimaryPage, query: '' };\n            history?.pushState({\n                href: window.location.href,\n                primaryPage\n            });\n        }\n        // хук должен отработать один раз только при загрузке страницы\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <Suspense>{children}</Suspense>;\n};\n","export { PrimaryPage } from './PrimaryPage.js';\nexport { SecondaryPage } from './SecondaryPage.js';\nexport { NavigationEvents } from './NavigationEvents.js';\n","import { debounce } from 'lodash-es';\nimport { useMemo } from 'react';\n\nimport { useHistory } from '@/shared/lib/index.js';\n\nconst DEBOUNCE_DURATION_MS = 200;\n\nexport const useHistoryBackOrForward = (\n    withBackwardFallback?: string\n): {\n    canBack: boolean;\n    canForward: boolean;\n    moveBack: () => void;\n    moveForward: () => void;\n} => {\n    const history = useHistory();\n    const moveBack = useMemo(() => {\n        return debounce(() => {\n            if (withBackwardFallback && !history.canBack) {\n                history.replaceState({\n                    href: withBackwardFallback,\n                    primaryPage: {\n                        pathname: '',\n                        query: ''\n                    }\n                });\n                return;\n            }\n            history?.back();\n        }, DEBOUNCE_DURATION_MS);\n    }, [history, withBackwardFallback]);\n\n    const moveForward = useMemo(() => {\n        return debounce(() => {\n            history?.forward();\n        }, DEBOUNCE_DURATION_MS);\n    }, [history]);\n\n    return {\n        canBack: Boolean(withBackwardFallback) || history.canBack,\n        canForward: history.canForward,\n        moveBack,\n        moveForward\n    };\n};\n","import { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ReactElement } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@yandex-music-int/sol/components/Button';\nimport { Icon } from '@yandex-music-int/sol/components/Icon';\n\nimport { LayoutName, WithClassName, useStore } from '@/shared/lib/index.js';\n\nimport { useHistoryBackOrForward } from '../lib/useHistoryBackOrForward.js';\n\nimport styles from './NavigationControls.module.scss';\n\ninterface Props extends WithClassName {\n    withBackwardControl?: boolean;\n    withForwardControl?: boolean;\n    withBackwardFallback?: string;\n}\n\nexport const NavigationControls = observer(\n    ({\n        withBackwardControl = true,\n        withForwardControl = true,\n        className,\n        withBackwardFallback\n    }: Props): ReactElement => {\n        const { settings } = useStore();\n\n        const isMobile = settings.layout === LayoutName.Mobile;\n        const { formatMessage } = useIntl();\n        const { canBack, canForward, moveBack, moveForward } = useHistoryBackOrForward(withBackwardFallback);\n\n        return (\n            <div className={clsx(styles.root, className)}>\n                {withBackwardControl && (\n                    <Button\n                        aria-label={formatMessage({ id: 'navigation.go-back' })}\n                        radius=\"round\"\n                        disabled={!canBack}\n                        size={isMobile ? 'xxs' : 's'}\n                        icon={<Icon size=\"xxs\" variant=\"arrowLeft\" />}\n                        onClick={moveBack}\n                    />\n                )}\n                {withForwardControl && (\n                    <Button\n                        aria-label={formatMessage({ id: 'navigation.go-forward' })}\n                        radius=\"round\"\n                        disabled={!canForward}\n                        size={isMobile ? 'xxs' : 's'}\n                        icon={<Icon size=\"xxs\" variant=\"arrowRight\" />}\n                        onClick={moveForward}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n","export { NavigationControls } from './ui/NavigationControls.js';\nexport { useHistoryBackOrForward } from './lib/useHistoryBackOrForward.js';\n","import { cast } from 'mobx-state-tree';\n\nimport { Artist } from '@yandex-music-int/resource-collection';\n\nimport { ArtistMetaModel } from '@/features/artist/index.js';\n\nimport { artistResponseToModel } from '@/entities/artist/index.js';\n\nexport const artistBriefInfoResponseToMeta = (\n    artist: Artist,\n    stats?: { lastMonthListeners: number }\n): ArtistMetaModel => {\n    return cast({\n        artist: artistResponseToModel(artist),\n        lastMonthListeners: stats?.lastMonthListeners\n    });\n};\n","import { Album } from '@yandex-music-int/resource-collection';\n\nimport { AlbumWithArtistsModel, albumWithArtistsResponseToModel } from '@/features/album/index.js';\n\nexport const concatPopularAlbums = (\n    albums: Album[] = [],\n    alsoAlbums: Album[] = [],\n    count: number\n): AlbumWithArtistsModel[] => {\n    let popularAlbums: Album[] = albums;\n\n    if (albums.length < count) {\n        popularAlbums = popularAlbums.concat(alsoAlbums);\n    }\n\n    return popularAlbums.map(albumWithArtistsResponseToModel).slice(0, count);\n};\n","import { cast, flow, getEnv, Instance, types, getRoot } from 'mobx-state-tree';\n\nimport { HttpErrorException, HttpResponseStatusCode } from '@yandex-music-int/http-client';\nimport {\n    ArtistsResourceBriefInfoParams,\n    ArtistsResourceBriefInfoResponse\n} from '@yandex-music-int/resource-collection';\n\nimport { AlbumWithArtists, albumWithArtistsResponseToModel } from '@/features/album/index.js';\nimport { ArtistMeta } from '@/features/artist/index.js';\nimport { playlistResponseToMetaModel, PlaylistWithArtists } from '@/features/playlist/index.js';\nimport { TrackWithArtists, trackWithArtistsResponseToModel } from '@/features/track/index.js';\n\nimport { Artist as ArtistEntity, artistResponseToModel } from '@/entities/artist/index.js';\n\nimport { LoadingState, StoreEnv, Experiments } from '@/shared/lib/index.js';\n\nimport { artistBriefInfoResponseToMeta } from '../lib/artistBriefInfoResponseToMeta.js';\nimport { concatPopularAlbums } from '../lib/concatPopularAlbums.js';\n\nconst POPULAR_TRACKS_COUNT = 5;\nconst SIMILAR_ARTISTS_COUNT = 9;\nconst POPULAR_ALBUMS_COUNT = 9;\n\nexport const Artist = types\n    .model('Artist', {\n        loadingState: types.enumeration(Object.values(LoadingState)),\n        meta: types.maybeNull(ArtistMeta),\n        popularTracks: types.array(TrackWithArtists),\n        lastRelease: types.maybeNull(AlbumWithArtists),\n        similarArtists: types.array(ArtistEntity),\n        popularAlbums: types.array(AlbumWithArtists),\n        playlists: types.array(PlaylistWithArtists),\n        errorStatusCode: types.maybeNull(types.number)\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .actions((self) => {\n        return {\n            getData: flow(function* ({\n                artistId\n            }: ArtistsResourceBriefInfoParams): Generator<\n                Promise<ArtistsResourceBriefInfoResponse>,\n                void,\n                ArtistsResourceBriefInfoResponse\n            > {\n                // @ts-ignore\n                const { slides, experiments } = getRoot(self);\n                const { artistsResource, logger } = getEnv<StoreEnv>(self);\n                const isLastReleasesDisabled = experiments.checkExperiment(\n                    Experiments.WebNextArtistDisableLastReleases,\n                    'on'\n                );\n                const isPopularTracksDisabled = experiments.checkExperiment(\n                    Experiments.WebNextArtistDisablePopularTracks,\n                    'on'\n                );\n                const isSimilarArtistsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextArtistDisableSimilarArtists,\n                    'on'\n                );\n                const isPopularAlbumsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextArtistDisablePopularAlbums,\n                    'on'\n                );\n                const isPlaylistsDisabled = experiments.checkExperiment(\n                    Experiments.WebNextArtistDisablePlaylists,\n                    'on'\n                );\n\n                if (self.loadingState === LoadingState.PENDING) {\n                    return;\n                }\n\n                try {\n                    self.loadingState = LoadingState.PENDING;\n\n                    const {\n                        popularTracks,\n                        error,\n                        artist,\n                        stats,\n                        albums,\n                        playlists,\n                        alsoAlbums,\n                        similarArtists,\n                        lastReleases\n                    } = yield artistsResource.getBriefInfo({\n                        artistId,\n                        popularTracksCount: POPULAR_TRACKS_COUNT,\n                        fetchPlaylistLikesCounts: true\n                    });\n\n                    if (error === 'not-found' || artist?.error === 'not-found') {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                        self.loadingState = LoadingState.REJECT;\n                        return;\n                    }\n\n                    self.meta = cast(artistBriefInfoResponseToMeta(artist, stats));\n\n                    if (!isLastReleasesDisabled && lastReleases && lastReleases.length > 0) {\n                        const lastRelease = lastReleases[0];\n\n                        if (lastRelease && albums && albums.length > 1) {\n                            self.lastRelease = cast(albumWithArtistsResponseToModel(lastRelease));\n                        }\n                    }\n\n                    if (!isPopularTracksDisabled && popularTracks && popularTracks.length > 0) {\n                        self.popularTracks = cast(\n                            popularTracks.slice(0, POPULAR_TRACKS_COUNT).map(trackWithArtistsResponseToModel)\n                        );\n                    }\n\n                    if (!isSimilarArtistsDisabled && similarArtists && similarArtists.length > 0) {\n                        self.similarArtists = cast(\n                            similarArtists.slice(0, SIMILAR_ARTISTS_COUNT).map(artistResponseToModel)\n                        );\n                    }\n\n                    if (!isPopularAlbumsDisabled) {\n                        self.popularAlbums = cast(concatPopularAlbums(albums, alsoAlbums, POPULAR_ALBUMS_COUNT));\n                    }\n\n                    if (!isPlaylistsDisabled && playlists && playlists.length > 0) {\n                        self.playlists = cast(playlists.map(playlistResponseToMetaModel));\n                    }\n\n                    slides.artistReset();\n                    if (slides.artistSlidesLoadingState === LoadingState.IDLE) {\n                        yield slides.getArtistSlides({\n                            artistId\n                        });\n                    }\n\n                    // @ts-expect-error\n                    // TS считает, что статусы никогда не пересекутся, но на самом деле мы можем уйти со страницы,\n                    // раньше чем закончится последний ретрай и/или запрос, когда уже проставлен статус IDLE\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.RESOLVE;\n                    }\n                } catch (error) {\n                    if (typeof error === 'string' || error instanceof Error) {\n                        logger.error(error);\n                    }\n\n                    if (\n                        error instanceof HttpErrorException &&\n                        (error.statusCode === HttpResponseStatusCode.NOT_FOUND ||\n                            error.statusCode === HttpResponseStatusCode.BAD_REQUEST)\n                    ) {\n                        self.errorStatusCode = HttpResponseStatusCode.NOT_FOUND;\n                    }\n\n                    if (self.loadingState !== LoadingState.IDLE) {\n                        self.loadingState = LoadingState.REJECT;\n                    }\n                }\n            }),\n            reset() {\n                self.loadingState = LoadingState.IDLE;\n                self.meta = null;\n                self.errorStatusCode = null;\n                self.lastRelease = null;\n                self.popularTracks = cast([]);\n                self.similarArtists = cast([]);\n                self.playlists = cast([]);\n            }\n        };\n    })\n    // Отключаем правило, так как сложно вывести тип\n    // eslint-disable-next-line @typescript-eslint/typedef\n    .views((self) => {\n        return {\n            get isLoading(): boolean {\n                return self.loadingState === LoadingState.IDLE || self.loadingState === LoadingState.PENDING;\n            },\n\n            get isPopularTracksExist(): boolean {\n                return (\n                    self.loadingState === LoadingState.IDLE ||\n                    self.loadingState === LoadingState.PENDING ||\n                    self.popularTracks.length > 0\n                );\n            },\n\n            get popularAlbumsTitle(): string {\n                const counts = self.meta?.artist?.counts;\n\n                if (counts && counts.albums > 0 && counts.albums < POPULAR_ALBUMS_COUNT && counts.compilations > 0) {\n                    return 'Популярные альбомы и сборники';\n                } else if (counts && counts.albums > 0) {\n                    return 'Популярные альбомы';\n                }\n\n                return 'Популярные сборники';\n            },\n\n            get isPopularAlbumsExists(): boolean {\n                return (\n                    self.loadingState === LoadingState.IDLE ||\n                    self.loadingState === LoadingState.PENDING ||\n                    self.popularAlbums.length > 0\n                );\n            },\n\n            get isSimilarArtistsExist(): boolean {\n                return (\n                    self.loadingState === LoadingState.IDLE ||\n                    self.loadingState === LoadingState.PENDING ||\n                    self.similarArtists.length > 0\n                );\n            },\n\n            get isPlaylistsExist() {\n                return (\n                    self.loadingState === LoadingState.IDLE ||\n                    self.loadingState === LoadingState.PENDING ||\n                    (self.playlists && self.playlists.length > 0)\n                );\n            },\n\n            get isLastReleaseExists(): boolean {\n                return (\n                    self.loadingState === LoadingState.IDLE ||\n                    self.loadingState === LoadingState.PENDING ||\n                    Boolean(self.lastRelease)\n                );\n            },\n\n            get isNotFound(): boolean {\n                return (\n                    self.loadingState === LoadingState.REJECT &&\n                    self.errorStatusCode === HttpResponseStatusCode.NOT_FOUND\n                );\n            }\n        };\n    });\n\nexport type ArtistModel = Instance<typeof Artist>;\n","export { ArtistPage } from './ui/Artist/Artist.js';\nexport { ArtistNotFoundPage } from './ui/ArtistNotFound/ArtistNotFound.js';\nexport { Artist } from './model/Artist.js';\n","'use client';\n\nimport { clsx } from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { notFound } from 'next/navigation.js';\nimport { ReactElement, use, useEffect, useMemo, CSSProperties } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { YaMusicContextData, YaMusicContexts } from '@yandex-music-int/player-contexts';\nimport { MusicEntityData } from '@yandex-music-int/player-entities';\nimport { useElementOffsetY } from '@yandex-music-int/sol/common/hooks/useElementOffsetY.js';\nimport { ScrollableContent } from '@yandex-music-int/sol/components/ScrollableContent';\nimport { PlayContextParams } from '@yandex-music-int/sonata';\n\nimport { Header } from '@/widgets/content/index.js';\nimport { PageHeaderArtist, PageHeaderShimmer } from '@/widgets/page-header/index.js';\n\nimport { AlbumsCarousel, AlbumCard } from '@/features/album/index.js';\nimport { ArtistCard } from '@/features/artist/index.js';\nimport { PlaylistsCarousel } from '@/features/playlist/index.js';\nimport { TrackPlaylist, TrackWithArtistsModel } from '@/features/track/index.js';\n\nimport { ArtistModel } from '@/entities/artist/index.js';\nimport { hasDuplicatesBefore } from '@/entities/playlist/index.js';\n\nimport {\n    LoadingState,\n    TrackVariant,\n    useStore,\n    getAverageBackgroundColor,\n    useContainer,\n    CONTAINER_COOKIE_STORAGE,\n    useRumPage,\n    AnalyticsPageProvider,\n    AnalyticsBlock,\n    AnalyticsPage,\n    useCreateFrom,\n    Experiments\n} from '@/shared/lib/index.js';\nimport { CarouselBlock, BlockHeader, EntityCardShimmer, TracksList, Footer } from '@/shared/ui/index.js';\n\nimport styles from './Artist.module.scss';\n\ninterface Props {\n    artistId?: string | number;\n}\n\nconst HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION = 93;\nconst HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION = 17;\n\nexport const ArtistPage = observer(({ artistId }: Props): ReactElement => {\n    const from = useCreateFrom({ pageId: AnalyticsPage.ARTIST, blockId: AnalyticsBlock.ARTIST });\n    const container = useContainer();\n    const cookies = container.get(CONTAINER_COOKIE_STORAGE);\n    let isWebNextNavigationOn = false;\n\n    if (process.env.BUILD_TYPE === 'web') {\n        isWebNextNavigationOn = cookies.get('WebNextNavigation') === 'on';\n    }\n\n    const { artist, slides, experiments } = useStore();\n    const { formatMessage } = useIntl();\n\n    const { ref, offsetY } = useElementOffsetY();\n\n    const averageColor = useMemo(() => {\n        return getAverageBackgroundColor(artist?.meta?.artist?.averageColor);\n    }, [artist?.meta?.artist?.averageColor]);\n\n    const headerStyle = useMemo(() => {\n        if (offsetY !== undefined) {\n            const initialTranslateHeader = isWebNextNavigationOn\n                ? HEADER_TO_VIEWPORT_OFFSET_NEW_NAVIGATION\n                : HEADER_TO_VIEWPORT_OFFSET_OLD_NAVIGATION;\n            const translate = offsetY - initialTranslateHeader;\n            return {\n                '--average-color-background': averageColor,\n                transform: `translateY(${offsetY >= initialTranslateHeader ? 0 : translate}px)`,\n                opacity: 1\n            };\n        }\n        return {};\n    }, [offsetY, isWebNextNavigationOn, averageColor]);\n\n    useEffect(() => {\n        return () => {\n            if (artist.id !== artistId) {\n                artist.reset();\n            }\n        };\n    }, [artist, artistId]);\n\n    if (artist.loadingState === LoadingState.IDLE) {\n        use(\n            artist.getData({\n                artistId\n            })\n        );\n    }\n\n    useRumPage(artist.loadingState === LoadingState.RESOLVE);\n\n    if (artist.isNotFound) {\n        notFound();\n    }\n\n    const coverLink = useMemo(() => {\n        if (experiments.checkExperiment(Experiments.WebRewind2023, 'on') && slides.artistItems.length > 0) {\n            return `/rewind2023/artist/${artistId}`;\n        }\n        return;\n    }, [artistId, experiments, slides.artistItems.length]);\n\n    const playContextParams = (id: string): PlayContextParams<YaMusicContextData, MusicEntityData> => {\n        return {\n            contextData: {\n                type: YaMusicContexts.Artist,\n                meta: {\n                    id: Number(artistId)\n                },\n                from\n            },\n            queueParams: {\n                index: artist.popularTracks.findIndex((item: TrackWithArtistsModel) => item.id === id)\n            },\n            loadContextMeta: true\n        };\n    };\n\n    const artistHeader = useMemo(() => {\n        if (artist.isLoading) {\n            return <PageHeaderShimmer className={styles.header} coverRadius=\"round\" />;\n        }\n        return <PageHeaderArtist className={styles.header} artistMeta={artist.meta} coverLink={coverLink} ref={ref} />;\n    }, [artist.isLoading, artist.meta, coverLink, ref]);\n\n    return (\n        <AnalyticsPageProvider pageId={AnalyticsPage.ARTIST}>\n            <div className={styles.averageColorBackground} style={headerStyle as CSSProperties} />\n            <ScrollableContent className={styles.root} containerClassName={styles.content}>\n                <div>\n                    <Header />\n                    {artistHeader}\n                    <div className={styles.recents}>\n                        {artist.isPopularTracksExist && (\n                            <div\n                                className={clsx(styles.popularTracksBlock, {\n                                    [styles.popularTracksBlock_withLastRelease]: artist.isLastReleaseExists\n                                })}\n                            >\n                                <BlockHeader\n                                    className={clsx(styles.carouselContainer, styles.important)}\n                                    title={formatMessage({ id: 'entity-names.popular-tracks' })}\n                                />\n                                <TracksList\n                                    className={clsx(styles.popularTracksContainer, styles.tracksContainer)}\n                                    isLoading={artist.isLoading}\n                                    variant={TrackVariant.PLAYLIST}\n                                >\n                                    {artist.popularTracks?.map((track: TrackWithArtistsModel, index: number) => {\n                                        return (\n                                            <TrackPlaylist\n                                                key={track.id}\n                                                track={track}\n                                                playContextParams={playContextParams(track.id)}\n                                                hasDuplicatesBefore={hasDuplicatesBefore(\n                                                    artist.popularTracks,\n                                                    track,\n                                                    index\n                                                )}\n                                            />\n                                        );\n                                    })}\n                                </TracksList>\n                            </div>\n                        )}\n                        {artist.isLastReleaseExists && (\n                            <div className={styles.lastReleaseBlock}>\n                                <BlockHeader\n                                    className={clsx(styles.lastReleaseHeader, styles.important)}\n                                    title={formatMessage({ id: 'entity-names.recently-release' })}\n                                />\n                                {artist.isLoading ? (\n                                    <EntityCardShimmer className={styles.lastReleaseCard} />\n                                ) : (\n                                    <AlbumCard className={styles.lastReleaseCard} album={artist.lastRelease} />\n                                )}\n                            </div>\n                        )}\n                    </div>\n                    <div className={styles.carouselBlocks}>\n                        {artist.isPopularAlbumsExists && (\n                            <AlbumsCarousel\n                                headerClassName={styles.carouselHeader}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                                albums={artist.popularAlbums}\n                                isLoading={artist.isLoading}\n                                title={artist.popularAlbumsTitle}\n                            />\n                        )}\n                        {artist.isPlaylistsExist && (\n                            <PlaylistsCarousel\n                                isLoading={artist.isLoading}\n                                title={formatMessage({ id: 'entity-names.artist-playlist' })}\n                                playlists={artist.playlists}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                                headerClassName={styles.carouselHeader}\n                            />\n                        )}\n                        {artist.isSimilarArtistsExist && (\n                            <CarouselBlock\n                                title={formatMessage({ id: 'entity-names.similar-artists' })}\n                                isLoading={artist.isLoading}\n                                headerClassName={styles.carouselHeader}\n                                containerClassName={clsx(styles.carouselContainer, styles.important)}\n                            >\n                                {artist.similarArtists.map((artistItem: ArtistModel) => (\n                                    <ArtistCard key={artist.id} artist={artistItem} contentLinesCount={3} />\n                                ))}\n                            </CarouselBlock>\n                        )}\n                    </div>\n                </div>\n                <Footer className={styles.footer} />\n            </ScrollableContent>\n        </AnalyticsPageProvider>\n    );\n});\n","'use client';\n\nimport { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\n\nimport { NotFound } from '@/widgets/not-found/index.js';\n\nimport { useStore } from '@/shared/lib/index.js';\n\nexport const ArtistNotFoundPage = observer(() => {\n    const { artist } = useStore();\n\n    useEffect(() => {\n        return () => {\n            artist.reset();\n        };\n    }, [artist]);\n\n    return <NotFound />;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavigationControls_root__uCVfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Artist_root__K_jRw\",\"averageColorBackground\":\"Artist_averageColorBackground__5iOpY\",\"header\":\"Artist_header__I7G_m\",\"content\":\"Artist_content__B8c8f\",\"recents\":\"Artist_recents__Oj3Y3\",\"popularTracksBlock\":\"Artist_popularTracksBlock__ETF5y\",\"popularTracksBlock_withLastRelease\":\"Artist_popularTracksBlock_withLastRelease__0aHnG\",\"popularTracksContainer\":\"Artist_popularTracksContainer__Yc6SW\",\"tracksContainer\":\"Artist_tracksContainer__OPqVm\",\"lastReleaseBlock\":\"Artist_lastReleaseBlock__bWGDw\",\"carouselHeader\":\"Artist_carouselHeader__lVeWu\",\"carouselContainer\":\"Artist_carouselContainer__8v2E_\",\"important\":\"Artist_important__M0WDR\",\"popularTracks\":\"Artist_popularTracks__IGPnd\",\"lastReleaseHeader\":\"Artist_lastReleaseHeader__h30bq\",\"lastReleaseCard\":\"Artist_lastReleaseCard__6eY78\",\"carouselBlocks\":\"Artist_carouselBlocks__eQGOp\",\"footer\":\"Artist_footer__B_78X\"};","import { HttpException } from './HttpException.js';\nexport class HttpErrorException extends HttpException {\n    statusCode;\n    constructor(message, options) {\n        super(message, {\n            code: 'E_HTTP_CLIENT_NON_2XX_3XX_RESPONSE',\n            cause: options.cause\n        });\n        this.statusCode = options.statusCode;\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpErrorException.prototype);\n    }\n}\n//# sourceMappingURL=HttpErrorException.js.map","import { BaseException } from '@yandex-music-int/exception';\nexport class HttpException extends BaseException {\n    name = 'HttpException';\n    constructor(message = 'Http Client error', { code = 'E_HTTP_CLIENT', ...restOptions } = {}) {\n        super(message, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpException.prototype);\n    }\n}\n//# sourceMappingURL=HttpException.js.map","export var HttpResponseStatusCode;\n(function (HttpResponseStatusCode) {\n    HttpResponseStatusCode[HttpResponseStatusCode[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n    HttpResponseStatusCode[HttpResponseStatusCode[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n})(HttpResponseStatusCode || (HttpResponseStatusCode = {}));\n//# sourceMappingURL=HttpResponseStatusCode.js.map","export { HttpResponseStatusCode } from './types/HttpResponseStatusCode.js';\nexport { HttpException } from './exceptions/HttpException.js';\nexport { HttpErrorException } from './exceptions/HttpErrorException.js';\n//# sourceMappingURL=index.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","__webpack_exports__","searchParams","useSearchParams","artistId","get","notFound","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","SecondaryPage","ArtistPage","NavigationEvents","metrika","useMetrika","pathname","usePathname","useEffect","url","concat","size","hit","PrimaryPage","children","param","history","useHistory","state","isLocationNotEqual","window","location","href","pushState","primaryPage","query","search","Suspense","defaultPrimaryPage","data","useHistoryBackOrForward","moveBack","useMemo","debounce","withBackwardFallback","canBack","replaceState","back","moveForward","forward","Boolean","canForward","NavigationControls","observer","withBackwardControl","withForwardControl","className","settings","useStore","isMobile","layout","LayoutName","Mobile","formatMessage","useIntl","jsx_runtime","jsxs","div","clsx","styles","Button","aria-label","id","radius","disabled","icon","Icon","variant","onClick","artistBriefInfoResponseToMeta","artist","stats","cast","artistResponseToModel","lastMonthListeners","concatPopularAlbums","albums","alsoAlbums","count","popularAlbums","length","map","albumWithArtistsResponseToModel","slice","Artist","types","model","loadingState","enumeration","Object","values","LoadingState","meta","maybeNull","ArtistMeta","popularTracks","array","TrackWithArtists","lastRelease","AlbumWithArtists","similarArtists","ArtistEntity","playlists","PlaylistWithArtists","errorStatusCode","number","actions","getData","flow","slides","experiments","getRoot","self","artistsResource","logger","getEnv","isLastReleasesDisabled","checkExperiment","Experiments","WebNextArtistDisableLastReleases","isPopularTracksDisabled","WebNextArtistDisablePopularTracks","isSimilarArtistsDisabled","WebNextArtistDisableSimilarArtists","isPopularAlbumsDisabled","WebNextArtistDisablePopularAlbums","isPlaylistsDisabled","WebNextArtistDisablePlaylists","PENDING","error","lastReleases","getBriefInfo","popularTracksCount","fetchPlaylistLikesCounts","HttpResponseStatusCode","NOT_FOUND","REJECT","trackWithArtistsResponseToModel","POPULAR_ALBUMS_COUNT","playlistResponseToMetaModel","artistReset","artistSlidesLoadingState","IDLE","getArtistSlides","RESOLVE","Error","HttpErrorException","statusCode","BAD_REQUEST","reset","views","isLoading","isPopularTracksExist","popularAlbumsTitle","counts","compilations","isPopularAlbumsExists","isSimilarArtistsExist","isPlaylistsExist","isLastReleaseExists","isNotFound","from","useCreateFrom","pageId","AnalyticsPage","ARTIST","blockId","AnalyticsBlock","container","useContainer","CONTAINER_COOKIE_STORAGE","ref","offsetY","useElementOffsetY","averageColor","getAverageBackgroundColor","headerStyle","undefined","translate","transform","opacity","use","useRumPage","coverLink","WebRewind2023","artistItems","playContextParams","contextData","type","YaMusicContexts","Number","queueParams","index","findIndex","item","loadContextMeta","artistHeader","PageHeaderShimmer","coverRadius","PageHeaderArtist","artistMeta","AnalyticsPageProvider","style","ScrollableContent","containerClassName","Header","BlockHeader","title","TracksList","TrackVariant","PLAYLIST","track","TrackPlaylist","hasDuplicatesBefore","EntityCardShimmer","AlbumCard","album","AlbumsCarousel","headerClassName","PlaylistsCarousel","CarouselBlock","ArtistCard","artistItem","contentLinesCount","Footer","ArtistNotFoundPage","NotFound","module","exports","_HttpException_js__WEBPACK_IMPORTED_MODULE_0__","e","message","options","code","cause","setPrototypeOf","prototype","HttpException","_yandex_music_int_exception__WEBPACK_IMPORTED_MODULE_0__","y","name","restOptions"],"sourceRoot":""}