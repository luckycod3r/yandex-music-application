{"version":3,"file":"static/chunks/7006.c16da0b08d01c9e7.js","mappings":"sFAAA,IAAAA,EAAA,CACA,gBACA,MACA,KACA,CACA,oBACA,MACA,KACA,IACA,CACA,kBACA,MACA,CACA,2BACA,MACA,IACA,CACA,qBACA,MACA,KACA,CACA,mBACA,MACA,KACA,KACA,CACA,WACA,MACA,KACA,KACA,CACA,6DACA,MACA,KACA,CACA,8BACA,MACA,KACA,CACA,oCACA,MACA,KACA,CACA,sCACA,MACA,KACA,EAEA,SAAAC,EAAAC,CAAA,EACA,IAAAC,EAAAC,CAAA,CAAAJ,EAAAE,GACA,OAAAG,QAAAC,OAAA,GAAAC,IAAA,YACA,IAAAC,EAAA,6BAAAN,EAAA,IAEA,OADAM,EAAAC,IAAA,oBACAD,CACA,GAGA,IAAAE,EAAAV,CAAA,CAAAE,EAAA,CAAAS,EAAAD,CAAA,IACA,OAAAL,QAAAO,GAAA,CAAAF,EAAAG,KAAA,IAAAb,GAAA,CAAAG,EAAAK,CAAA,GAAAD,IAAA,YACA,OAAAJ,EAAAQ,EACA,EACA,CACAV,EAAAa,IAAA,YAAwC,OAAAC,OAAAD,IAAA,CAAAd,EAAA,EACxCC,EAAAU,EAAA,OACAK,EAAAC,OAAA,CAAAhB,0EEhEYiB,EAALA,uBAAKA,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GACRC,GAAAA,CAAM,qBADED,EAERE,OAAAA,CAAU,wBCId,IAAMC,EAAmB,CAACC,EAAcC,IAC7B,GAAWA,MAAAA,CAARD,EAAK,KAAWE,MAAA,CAARD,GAGTE,EAA2B,KAEG,CAC/B,IAAMC,EAAa,GAAwBC,MAAAA,CAArBT,EAAWE,OAAO,EAAkCI,MAAA,CAA/BG,CAAAA,EAAAA,EAAAA,CAAAA,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,MAE3D,OAAOP,EAAiBK,EFfO,MEgBnC,CAIR,mGKnBYG,EAALC,kCHOA,OAAMC,EAQFC,eAAeC,CAKwC,CAAQ,IALhD,CAClBC,SAAAA,CAAQ,CACRC,KAAAA,CAAI,CACJC,aAAAA,CAAY,CACZC,IAAAA,CAAG,CACuD,CALxCJ,CAMlB,KAAI,CAACE,IAAI,CAAGA,MAAAA,EAAAA,EAAQ,IAAI,CAACA,IAAI,CAC7B,IAAI,CAACE,GAAG,CAAGA,MAAAA,EAAAA,EAAO,IAAI,CAACA,GAAG,CAC1B,IAAI,CAACD,YAAY,CAAGA,MAAAA,EAAAA,EAAgB,IAAI,CAACA,YAAY,CACrD,IAAI,CAACF,QAAQ,CAAGA,MAAAA,EAAAA,EAAY,IAAI,CAACA,QAAQ,CAG7C,IAAcI,eAAoC,CAElD,CAhBAC,YAA6BC,CAAAA,CAAyCC,CAAAA,CAAyB,cAAlED,UAAAA,KAAAA,gBAAyCC,SAAAA,KAAAA,GALtE,GAAAC,EAAAC,CAAA,OAAUT,WAAV,QACA,GAAAQ,EAAAC,CAAA,OAAUP,eAAV,QACA,GAAAM,EAAAC,CAAA,OAAUR,OAAV,QACA,GAAAO,EAAAC,CAAA,OAAUN,MAAV,qBAE6BG,cAAyCC,OAL5DP,QAAAA,CAAmB,QACnBE,YAAAA,CAAuB,QACvBD,IAAAA,CAAe,QACfE,GAAAA,CAAc,EAEwE,CAiBpG,CCtBO,MAAMO,UAAgCb,EAK/Bc,gBAAyB,CAC/B,IAAMC,EAAO,GAAmBtB,MAAA,CAAhB,IAAI,CAACU,QAAQ,EAAoDV,MAAA,CAAjD,IAAI,CAACY,YAAY,CAAG,IAAsBZ,MAAA,CAAlB,IAAI,CAACY,YAAY,EAAK,IAC9E,OAAOW,mBAAmB,WAAuBD,MAAAA,CAAZ,IAAI,CAACX,IAAI,EAAQX,MAAA,CAALsB,GACrD,CAEA,IAAWE,kBAAuC,CAC9C,GAAI,CAAC,IAAI,CAACb,IAAI,EAAI,CAAC,IAAI,CAACE,GAAG,CACvB,OAGJ,GAAM,CACFY,oBAAqB,CAAEd,KAAMe,CAAY,CAAEC,OAAAA,CAAM,CAAE,CACtD,CAAG,IAAI,CAACV,MAAM,CAETW,EAAsBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAWH,EAAc,IAAI,CAACb,GAAG,EACvDiB,EAAc,IAAI,CAACT,cAAc,GAEvC,MAAO,GAAsCM,MAAAA,CAAnCC,EAAoB,iBAAiCE,MAAAA,CAAlBH,EAAO,aAAuB3B,MAAA,CAAZ8B,EACnE,CAEOC,4BAAmC,CAE1C,CA1BAhB,YAAmBC,CAA6B,CAAEC,CAAuB,CAAE,CACvE,KAAK,CAACD,EAASC,EACnB,CAyBJ,CCvBO,MAAMe,UAA4BZ,EAkB7Ba,gCAAuC,CAC3CC,YAAY,IAAI,CAACC,8BAA8B,CAACC,IAAI,CAAC,IAAI,EAzBlB,IA0B3C,CAEQD,gCAAuC,CACvC,IAAI,CAACrB,aAAa,GAAK,IAAI,CAACuB,mBAAmB,GAC/C,IAAI,CAACA,mBAAmB,CAAG,IAAI,CAACvB,aAAa,CAC7C,IAAI,CAACwB,UAAU,GAEvB,CAEQA,YAAmB,CAEnBC,OAAOC,QAAQ,CAACC,MAAM,EAE9B,CAEgBV,4BAAmC,CAC3C,IAAI,CAACP,gBAAgB,EACrBe,CAAAA,OAAOC,QAAQ,CAACE,IAAI,CAAG,IAAI,CAAClB,gBAAgB,CAEpD,CAEA,IAAuBV,eAAoC,CACvD,OAAO,IAAI,CAACE,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAACC,WAAW,CAAE,KAAUC,KAAAA,CAC/D,CAEA,IAAWC,6BAAuC,CAC9C,MAAOC,CAAAA,CAAQ,IAAI,CAAChC,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAACC,WAAW,CAAE,GAC7D,CAGA,MAAaI,OAAuB,CAEpC,CA3CAlC,YAAmBC,CAAqC,CAAEC,CAAuB,CAAE,CAC/E,KAAK,CAACD,EAASC,GAHnB,GAAAC,EAAAC,CAAA,OAAQkB,sBAAR,QAMQ,IAAI,CAACA,mBAAmB,CAAG,IAAI,CAACvB,aAAa,CAC7C,IAAI,CAACmB,8BAA8B,EAE3C,CAqCJ,UClEY5B,CAAAA,EAAAA,GAAAA,CAAAA,EAAqBA,CAAAA,CAAAA,GAG7B6C,KAAAA,CAAAA,QAHQ7C,EAKR8C,UAAAA,CAAAA,aALQ9C,EAOR+C,OAAAA,CAAAA,UAPQ/C,EAURgD,MAAAA,CAAAA,SAVQhD,EAaRiD,QAAAA,CAAAA,WAbQjD,EAkBRkD,OAAAA,CAAAA,UAlBQlD,EAoBRmD,WAAAA,CAAAA,4BELG,OAAMC,UAA+BlD,EAwCxC0C,OAAqB,CACjB,GAAK,IAAI,CAACS,YAAY,EAItB,GAAI,CAAC,IAAI,CAAC5C,aAAa,EAAI,IAAI,CAAC6C,KAAK,CAAE,CACnC,IAAI,CAACC,WAAW,GAChB,IAAI,CAACtB,UAAU,GACf,MACJ,CAEA,GAAI,CAAC,IAAI,CAACqB,KAAK,EAAI,IAAI,CAAC7C,aAAa,EAKjC,IAAI,CAACA,aAAa,EAAI,IAAI,CAAC+C,eAAe,EAAI,IAAI,CAAC/C,aAAa,GAAK,IAAI,CAAC+C,eAAe,CALtD,CACnC,IAAI,CAAC9B,0BAA0B,GAC/B,MACJ,EAMJ,CAEA,IAAWP,kBAAuC,CAC9C,GAAM,CACFsC,iBAAkB,CAAEnD,KAAMoD,CAAS,CAAEC,SAAAA,CAAQ,CAAE,CAClD,CAAG,IAAI,CAAC/C,MAAM,CAEXK,EAAO,GAAmBtB,MAAA,CAAhB,IAAI,CAACU,QAAQ,EAAoDV,MAAA,CAAjD,IAAI,CAACY,YAAY,CAAG,IAAsBZ,MAAA,CAAlB,IAAI,CAACY,YAAY,EAAK,GACrD,OAAnBU,EAAK2C,MAAM,CAAC,IACZ3C,CAAAA,EAAOA,EAAK4C,SAAS,CAAC,IAG1B,IAAMvC,EAAyCY,OAAOC,QAAQ,CAACb,MAAM,CAC/DG,EAAc,GAA+BP,MAAAA,CAA5BI,EAAO,uBAA8C3B,MAAA,CAAzBuB,mBAAmBD,IAChE6C,EAAmBtC,CAAAA,EAAAA,EAAAA,CAAAA,EAAWkC,EAAW,MAEzCK,EAAM,IAAIC,IAAI,GAAoBrE,MAAA,CAAjBmE,EAAiB,eAWxC,OATAC,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,gBAAiB,SACzCF,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,UAAW,SACnCF,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,QAAS,iBACjCF,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,QAAS,cACjCF,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,QAAS,eACjCF,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,YAAaN,GACrCI,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,eAAgBxC,GACxCsC,EAAIxD,YAAY,CAAC0D,MAAM,CAAC,QAAS,IAAI,CAACC,UAAU,EAEzCH,EAAII,QAAQ,EACvB,CAEQlC,YAAmB,CAEnBC,OAAOC,QAAQ,CAACC,MAAM,EAE9B,CAEOV,4BAAmC,CAClC,IAAI,CAACP,gBAAgB,EACrBe,CAAAA,OAAOC,QAAQ,CAACE,IAAI,CAAG,IAAI,CAAClB,gBAAgB,CAEpD,CAEOiD,mBAAmBC,CAAyB,CAAQ,CACvD,IAAI,CAACb,eAAe,CAAGa,CAC3B,CAEOC,iBAAwB,CAC3B,IAAI,CAACjB,YAAY,CAAG,EACxB,CAEOkB,SAASC,CAAkC,CAAQ,CAClDA,EAAYC,KAAK,GAAK,IAAI,CAACP,UAAU,EACrC,IAAI,CAACvD,OAAO,CAAC+D,GAAG,CAACnC,EAAAA,CAAWA,CAACoC,KAAK,CAAEH,EAAYlB,KAAK,CAAE,CACnDsB,QAASC,KAAKC,KAAK,CAACN,EAAYO,SAAS,CAAI,MACjD,EAER,CAEA,IAAWzB,OAA4B,CACnC,GAAI,IAAI,CAAC7C,aAAa,CAClB,OAAO,IAAI,CAACE,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAACoC,KAAK,GAAKlC,KAAAA,CAItD,CAEUc,aAAoB,CAC1B,IAAI,CAAC5C,OAAO,CAACqE,MAAM,CAACzC,EAAAA,CAAWA,CAACoC,KAAK,CACzC,CAEQM,kBAAyB,CAC7B,IAAMR,EAAQI,KAAKK,KAAK,CAACL,KAAAA,KAAKM,MAAM,IAAYhB,QAAQ,CAAC,IAEzD,IAAI,CAACxD,OAAO,CAAC+D,GAAG,CAACnC,EAAAA,CAAWA,CAAC6C,UAAU,CAAEX,EAAO,CAC5CG,QAAS,CACb,EACJ,CAEA,IAAYV,YAAqB,CAC7B,OAAO,IAAI,CAACvD,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAAC6C,UAAU,GAAK,EACvD,CAxIA1E,YAAmBC,CAA6B,CAAEC,CAAuB,CAAE,CACvE,KAAK,CAACD,EAASC,GAJnB,GAAAC,EAAAC,CAAA,OAAUuC,eAAwB,IAClC,GAAAxC,EAAAC,CAAA,OAAU0C,kBAAV,QAKS,IAAI,CAACU,UAAU,EAChB,IAAI,CAACe,gBAAgB,GAGzB,IAAI,CAACrC,KAAK,EACd,CAiIJ,CCpJO,MAAMyC,UAA6BjC,EAUtC,IAAoBE,OAA4B,CAC5C,OAAO,IAAI,CAAC3C,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAACoC,KAAK,GAAKlC,KAAAA,CAClD,CAEA,IAAWC,6BAAuC,CAC9C,MAAOC,CAAAA,CAAQ,IAAI,CAAChC,OAAO,CAAC2B,GAAG,CAACC,EAAAA,CAAWA,CAACoC,KAAK,CACrD,CAEQW,mBAA0B,CACOpD,OAAOqD,aAAa,EACrDrD,OAAOqD,aAAa,CAACC,MAAM,CAACC,EAAAA,CAAaA,CAACC,kBAAkB,EAAEhH,IAAI,CAAC,IAC/D,IAAI,CAACiH,yBAAyB,CAAGtB,EACjC,IAAI,CAACC,eAAe,GACpB,IAAI,CAAC1B,KAAK,EACd,EAER,CAEA,IAAuBnC,eAAoC,CACvD,OAAO,IAAI,CAACkF,yBAAyB,CAzBzCjF,YAAmBC,CAAoC,CAAEC,CAAuB,CAAE,CAC9E,KAAK,CAACD,EAASC,GAHnB,GAAAC,EAAAC,CAAA,OAAQ6E,4BAAR,QAKI,IAAI,CAACL,iBAAiB,EAC1B,CAuBJ,sCEtCO,eAAeM,EAAUC,CAA8C,EAC1E,GAAM,CAAEjF,OAAAA,CAAM,CAAE,CAAG,MAAMtC,EAAA,OAAO,KAASqB,MAAA,CAAJkG,EAAI,QAEzC,OAAOjF,GACX,oHCFO,IAAMd,EAAkB,IAC3B,OAAQgG,GACJ,IAAK,QACD,OAAOC,EAAAA,CAAcA,CAACC,OAAO,KAC5B,SACD,OAAOD,EAAAA,CAAcA,CAACE,KAAK,KAC1B,QACD,OAAOF,EAAAA,CAAcA,CAACG,KAAK,CAGnC,OAAO,IACX,0CCfOH,EAAKA,kCAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GACRC,OAAAA,CAAU,UADFD,EAERE,KAAAA,CAAQ,QAFAF,EAGRG,KAAAA,CAAQ,0FCCL,OAAAC,UAAiCC,EAAAC,CAAa,CACrDC,KAAA,iCACAC,EAAA,kBAA8C3H,KAAAA,EAAA,iBAAA4H,EAAA,CAAuC,EAAI,EACzF,MAAAD,EAAA,CAAyB3H,KAAAA,EAAA,GAAA4H,CAAA,GAGzBtH,OAAAuH,cAAA,MAAAN,EAAAO,SAAA,CACA,CACA,CCRO,MAAAC,UAAyCR,EAChDG,KAAA,yCACAA,CAAA,EACA,iCAAyCA,EAAAnC,QAAA,GAAgB,+BACzDvF,KAAA,uBACA,GAGAM,OAAAuH,cAAA,MAAAE,EAAAD,SAAA,CACA,CACA,CCVO,MAAAE,UAA8CT,EACrDG,KAAA,8CACAA,CAAA,EACA,kCAA0CA,EAAAnC,QAAA,GAAgB,oCAC1DvF,KAAA,4BACA,GAGAM,OAAAuH,cAAA,MAAAG,EAAAF,SAAA,CACA,CACA,CCXO,MAAAG,EAEPC,SAAA,GACAC,OAAA,IAAAC,GAAA,CACAC,SAAAX,CAAA,CAAAY,CAAA,EACA,QAAAC,GAAA,CAAAb,GACA,UAAsBM,EAA+BN,GAMrD,OAJA,KAAAQ,QAAA,EACA,QAAAA,QAAA,CACA,CAAAR,EAAA,CAAAY,CACA,EACA,KAEAE,aAAAN,CAAA,EACA,QAAAR,KAAAQ,EACA,QAAAK,GAAA,CAAAb,GACA,UAA0BM,EAA+BN,GAOzD,OAJA,KAAAQ,QAAA,EACA,QAAAA,QAAA,CACA,GAAAA,CAAA,EAEA,KAEAxE,IAAAgE,CAAA,EACA,QAAAS,MAAA,CAAAI,GAAA,CAAAb,GACA,YAAAS,MAAA,CAAAzE,GAAA,CAAAgE,GAEA,IAAAY,EAAA,KAAAJ,QAAA,CAAAR,EAAA,CACA,YAAAY,EACA,UAAsBP,EAA0BL,GAEhD,IAAAe,EAAA,KAAAC,MAAA,CAAAJ,GAIA,OAHAA,EAAAK,QAAA,EACA,KAAAR,MAAA,CAAArC,GAAA,CAAA4B,EAAAe,GAEAA,CACA,CACAF,IAAAb,CAAA,EACA,OAAAA,KAAA,KAAAQ,QAAA,CAEAQ,OAAAJ,CAAA,EACA,OAAAA,EAAAM,OAAA,MACA,CACA,sCCnCO,SAAAC,EAAAD,CAAA,EACP,OACA/H,KAAA,YACA+H,QAAAA,EACAD,SAAA,EACA,CACA,CACO,SAAAG,EAAAF,CAAA,EACP,OACA/H,KAAA,UACA+H,QAAAA,EACAD,SAAA,EACA,CACA,6KC3BO,IAAAI,EAAA,GACPzI,OAAAD,IAAA,CAAA2B,EAAAgH,WAAA,EACAC,MAAA,KAAAC,MAAAC,OAAAnJ,KACAT,GAAA,IAAA6J,SAAApJ,EAAA,KCHOqJ,EAAA,GAGP,GAAArJ,OAAA,YACA,UAGA,EAAAsJ,QAAA,EAAAC,CAAAA,EAAAD,QAAA,CAAAE,MAAA,EAAAD,EAAAD,QAAA,CAAAG,UAAA,oBCPAC,EAAA,CACAC,WAAA,EACAC,WAAA,CACA,EACOC,EAAA,EAAsCC,aAAAA,CAAA,CAAAP,MAAAA,CAAA,CAAAQ,gBAAAA,CAAA,CAAAC,WAAAA,CAAA,CAAAC,kBAAAA,CAAA,CAAqE,IAClH,IAAAA,GAAAF,EACA,OAAAL,EAEA,GAAAM,SACA,EAAAE,kBAAA,CAAAJ,EACA,CACAH,WAAAM,EAAAC,kBAAA,CACAN,WAAAI,CACA,EAEAN,EAEA,GAAAO,EAAAjB,WAAA,CAAAO,EAAA,EACA,IAAAY,EAAAF,EAAAjB,WAAA,CAAAO,EAAA,CACA,GAAAY,GAAAC,UAAAC,QAAAF,EAAAC,QAAA,CAAAC,MAAA,EAAAP,EACA,OACAH,WAAAQ,EAAAC,QAAA,CAAAC,MAAA,GACAT,WAAAO,EAAAC,QAAA,CAAAN,EAAA,KACA,CAEA,CACA,OAAAJ,CACA,EC3BOY,EAAA,MAAAC,GAAA,IAAA3K,QAAA,GAAA4K,WAAA3K,EAAA0K,ICGAE,EAAA,OAEPC,QAAAA,CAAA,CAAAnB,MAAAA,CAAA,CAAAO,aAAAA,CAAA,CAAAa,kBAAAA,CAAA,CAAiD,IAIjD,GAAApB,GAAAD,UAAAsB,SAAAlH,IAAA,eAEA,OAEA,IAAAmH,EAA2BxB,EAAYE,GACvCuB,EAA0BjB,EAA0B,CACpDN,MAAAsB,EACAf,aAAAA,EACAG,kBAAAU,GAAA3I,OACA+H,gBAAAY,GAAAZ,eACA,EACAW,CAAAA,EAAAK,KAAA,CAAAC,KAAA,CAAAF,EAAAnB,UAAA,CACA,MAAUW,EAAKQ,EAAAlB,UAAA,CACf,ECjBAqB,EAAA,CACA,MACA,OACA,MACA,QACA,SACA,OACA,MACA,OACA,MACA,QACA,SACA,OACA,OACOC,EACPC,MAAA,aACAT,EAAA,EAA4B,EAC5B,KAAAS,MAAA,CAAsBC,EAAAC,EAAE,CAAA3C,MAAA,MAAA4C,gBAAA,CAAAZ,GACxB,CACA,MAAAhH,IAAArB,CAAA,CAAAqI,EAAA,EAAgC,EAChC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,OACpC,CACA,MAAAC,KAAApJ,CAAA,CAAAqI,EAAA,EAAiC,EACjC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,QACpC,CACA,MAAAE,IAAArJ,CAAA,CAAAqI,EAAA,EAAgC,EAChC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,OACpC,CACA,MAAAG,MAAAtJ,CAAA,CAAAqI,EAAA,EAAkC,EAClC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,SACpC,CACA,MAAAI,OAAAvJ,CAAA,CAAAqI,EAAA,EAAmC,EACnC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,UACpC,CACA,MAAAK,KAAAxJ,CAAA,CAAAqI,EAAA,EAAiC,EACjC,YAAAa,OAAA,CAAAlJ,EAAA,CAAoC,GAAAqI,CAAA,CAAAc,OAAA,QACpC,CACA,MAAAD,QAAApG,CAAA,CAAAuF,CAAA,EACA,IAEA,IAAAoB,EAAAC,KAAAC,GAAA,GACA1C,EAAA,WAAA6B,MAAA,CAAAhG,EAAA,KAAAmG,gBAAA,CAAAZ,IACAuB,EAAAF,KAAAC,GAAA,GAAAF,EACA,YAAAI,iBAAA,CAAA5C,EAAAoB,EAAA,CAA+DyB,MAAAL,EAAAxC,SAAA2C,CAAA,EAC/D,CACA,MAAA1C,EAAA,CACA,GAAAA,aAAiC6C,EAAAC,CAAS,CAC1C,WAAAC,cAAA,CAAA/C,EAEA,OAAAA,CACA,CACA,CACA+B,iBAAAZ,CAAA,EACA,IAAgB6B,UAAAA,CAAA,CAAAf,OAAAA,CAAA,CAAA7J,aAAAA,CAAA,CAAAiJ,QAAAA,CAAA,CAAA4B,KAAAA,CAAA,CAAAC,MAAAA,CAAA,CAAA1B,MAAAA,CAAA,CAAA2B,QAAAA,CAAA,CAAA9G,YAAAA,CAAA,EAAqF8E,EACrGiC,EAAA,GA4CA,GA3CA,SAAA/G,GACA+G,CAAAA,EAAA/G,WAAA,CAAAA,CAAA,EAEA,SAAA2G,GACAI,CAAAA,EAAAJ,SAAA,CAAAA,CAAA,EAEA,SAAAf,GACAmB,CAAAA,EAAAnB,MAAA,CAAAA,CAAA,EAEA,SAAAZ,GACA+B,CAAAA,EAAA/B,OAAA,EACA,GAAAA,CAAA,CACA,aAAAA,CAAA,gBAAAA,CAAA,eACA,EAEA,SAAAjJ,GACAgL,CAAAA,EAAAhL,YAAA,CAAAA,CAAA,EAEA,SAAA6K,GACAG,CAAAA,EAAAH,IAAA,CAAAA,CAAA,EAEA,iBAAAE,GACAC,CAAAA,EAAAD,OAAA,CAAAA,CAAA,EAEA3B,GAAA/I,SACA2K,EAAA5B,KAAA,EACAC,MAAAD,EAAA/I,MAAA,CAAAkI,kBAAA,CACA0C,aAAA,EACA5D,YAA6BD,EAAqCgC,EAAA/I,MAAA,CAClE,EACA2K,EAAAD,OAAA,CAAA3B,GAAA/I,OAAA0K,QACAC,EAAAF,KAAA,CAAAE,EAAAF,KAAA,KACAE,EAAAF,KAAA,CAAAI,WAAA,CAAAF,EAAAF,KAAA,CAAAI,WAAA,KACAF,EAAAF,KAAA,CAAAI,WAAA,CAAAC,IAAA,OAAAjH,IACA,MAAsB4E,EAAsB,CAC5Cc,QAAA1F,EAAA0F,OAAA,CACAb,QAAA7E,EAAA6E,OAAA,CACAnB,MAAA1D,EAAA0D,KAAA,CACAO,aAAAjE,EAAAkH,UAAA,CACApC,kBAAAI,CACA,EACA,IAEA0B,EAAA,KAEAO,EADA,IAAoBC,cAAAA,CAAA,CAAAJ,YAAAA,CAAA,CAAAK,YAAAA,CAAA,CAAAC,cAAAA,CAAA,EAAyDV,CAE7E,UAAAE,EAAAF,KAAA,EACAE,CAAAA,EAAAF,KAAA,KAEAW,MAAAC,OAAA,CAAAJ,IACAN,CAAAA,EAAAF,KAAA,CAAAQ,aAAA,CAAAA,EAAA1N,GAAA,UAAAgM,EAAA+B,KACAN,EAAAjB,KAAAC,GAAA,GACA,IAAAuB,EAAA,KAAAC,gBAAA,CAAAjC,EAAA+B,EACA,OAAAG,EAAAF,EACA,EAAiB,EAEjBH,MAAAC,OAAA,CAAAR,KACAF,EAAAF,KAAA,CAAAI,WAAA,CAAAF,EAAAF,KAAA,CAAAI,WAAA,KACAF,EAAAF,KAAA,CAAAI,WAAA,CAAAF,EAAAF,KAAA,CAAAI,WAAA,CAAA9L,MAAA,CAAA8L,EAAAtN,GAAA,WAAgIgK,MAAAA,CAAA,CAAAwD,WAAAA,CAAA,CAAmB,IACnJ,MAAAU,EAAA,KAAAnB,cAAA,CAAA/C,GAAAwD,EACA,KAEAK,MAAAC,OAAA,CAAAH,IACAP,CAAAA,EAAAF,KAAA,CAAAS,WAAA,CAAAA,EAAA3N,GAAA,UAAAgK,IACA,MAAAkE,EAAA,KAAAnB,cAAA,CAAA/C,IACAA,GACiB,EAEjB6D,MAAAC,OAAA,CAAAF,IACAR,CAAAA,EAAAF,KAAA,CAAAU,aAAA,CAAAA,EAAA5N,GAAA,UAAAgM,EAAA+B,EAAAhE,KACA,IAAAiE,EAAA,KAAAC,gBAAA,CAAAjC,EAAA+B,GACArB,EAAAF,KAAAC,GAAA,GAKA,OAJA,MAAAyB,EAAA,KAAAvB,iBAAA,CAAA5C,EAAAiE,EAAA,CACApB,MAAAa,EACA1D,SAAA2C,CACA,IACA3C,CACA,EAAiB,CAEjB,CACA,OAAAqD,CACA,CACAT,kBAAA5C,CAAA,CAAAoB,CAAA,CAAAgD,CAAA,EACA,OACA9C,QAAAtK,OAAAqN,WAAA,CAAArE,EAAAsB,OAAA,CAAAgD,OAAA,IACAnE,WAAAH,EAAAE,MAAA,CACAqE,cAAAvE,EAAAwE,UAAA,CACA3I,IAAAmE,EAAAnE,GAAA,CACAqH,KAAAlD,EAAAkD,IAAA,CAAArJ,IAAA,CAAAmG,GACAyE,KAAAzE,EAAAyE,IAAA,CAAA5K,IAAA,CAAAmG,GACAoE,QAAAA,EACAnC,QAAA,CACAgB,UAAA7B,EAAA6B,SAAA,CACA3B,QAAAF,EAAAE,OAAA,CACAjJ,aAAA+I,EAAA/I,YAAA,CACA6J,OAAAd,EAAAc,MAAA,CAEA,CACA,CACAgC,iBAAAjC,CAAA,CAAAb,CAAA,EACA,IAAAvF,EAAA,IAAAC,IAAAmG,EAAApG,GAAA,EACA,OACAyF,QAAA,KAAAoD,gBAAA,CAAAtD,EAAAE,OAAA,EACAjJ,aAAA,IAAAsM,gBAAA9I,EAAA+I,MAAA,EACA1B,KAAAjB,EAAAiB,IAAA,CACArH,IAAAoG,EAAApG,GAAA,CACAqG,OAAA,KAAA2C,aAAA,CAAAzD,EAAAc,MAAA,EAEAkB,QAAA7I,KAAAA,CACA,CACA,CACAmK,iBAAApD,CAAA,SACA,SAAAA,EACA,GAEAA,aAAAwD,QACA9N,OAAAqN,WAAA,CAAA/C,EAAAgD,OAAA,IAEAR,MAAAC,OAAA,CAAAzC,GACAtK,OAAAqN,WAAA,CAAA/C,GAEAA,CACA,CACA0B,eAAA/C,CAAA,SACA,aAA6B6C,EAAAC,CAAS,CACtC,IAAuBgC,EAAAC,CAAkB,CAAA/E,EAAA5B,OAAA,EACzC8B,WAAAF,EAAAD,QAAA,CAAAE,MAAA,CACA+E,MAAAhF,CACA,GAEA,IAAmBiF,EAAAzO,CAAa,CAAAwJ,EAAA5B,OAAA,EAChC4G,MAAAhF,CACA,EACA,CACA4E,cAAA3C,CAAA,SACA,SAAAA,GAAAP,EAAAwD,QAAA,CAAAjD,GACAA,EAAAkD,WAAA,GAEA,KACA,CACAC,eAAAC,CAAA,EACA,IAAAC,EAAA,IAAAC,IAMA,OALAF,EAAAG,OAAA,KACA9D,EAAAwD,QAAA,CAAAjD,IACAqD,EAAAG,GAAA,CAAAxD,EAAAkD,WAAA,GAEA,GACA,IAAAG,EAAA,CAEA,oFChNO,OAAAR,UAAiCY,EAAAlP,CAAa,CACrD0J,UAAA,aACA9B,CAAA,CAAA+C,CAAA,EACA,MAAA/C,EAAA,CACA3H,KAAA,qCACAuO,MAAA7D,EAAA6D,KAAA,GAEA,KAAA9E,UAAA,CAAAiB,EAAAjB,UAAA,CAGAnJ,OAAAuH,cAAA,MAAAwG,EAAAvG,SAAA,CACA,CACA,oFCZO,OAAA0G,UAA4BU,EAAAzH,CAAa,CAChDC,KAAA,4BACAC,EAAA,qBAAiD3H,KAAAA,EAAA,mBAAA4H,EAAA,CAAyC,EAAI,EAC9F,MAAAD,EAAA,CAAyB3H,KAAAA,EAAA,GAAA4H,CAAA,GAGzBtH,OAAAuH,cAAA,MAAA2G,EAAA1G,SAAA,CACA,CACA,oHCLO,IAAAqH,EAAA,IACP,QCEO,OAAAC,EACPC,WAAA,CACAC,YAAA,aACA,CAAkBD,YAAAA,CAAA,CAAAC,aAAAA,CAAA,CAA2B,EAC7C,KAAAD,WAAA,CAAAA,EACA,KAAAC,YAAA,CAAAA,CACA,CACAC,cAAAC,CAAA,CAAA7H,CAAA,CAAA8H,EAAA,EAA8C,CAAAC,CAAA,MAG9CC,EAFA,IAAAC,EAAAC,OAAAlI,aAAAmI,OAAAnI,EAAAoI,KAAA,CAAApI,EAAAoI,KAAA,CAAApI,GACAqI,EAAwB,GAAAC,EAAAC,CAAA,EAAST,SAKjC,CAHAnP,OAAAD,IAAA,CAAA2P,GAAA3F,MAAA,EACAsF,CAAAA,EAAA,KAAAQ,aAAA,CAAAH,EAAA,EAEAN,GACA,GAAsBE,EAAA,CAAkB,EAAEQ,EAAaT,GAAc,EAErE,CAAAC,EAAAD,EAAA,CAEAQ,cAAAV,CAAA,EAEA,QAAAH,YAAA,EAAAjF,OACA,QAAAgG,KAAA,KAAAf,YAAA,EACA,IAAAgB,EAAmC,GAAA5M,EAAAwM,CAAA,EAAGT,EAAAY,EACtC,UAAAC,GACoB,GAAAxK,EAAAoK,CAAA,EALpBT,EAKuBY,EAAwBlB,IAE/C,CAEA,OATAM,CAUA,CACA,+FChCO,OAAAc,UAA4BnB,EAAAoB,CAAU,CAC7C1O,YAAA4I,CAAA,EACA,MAAAA,EACA,CACA+F,KAAA9I,CAAA,CAAA8H,CAAA,EACA,KAAAJ,WAAA,EAAgCqB,EAAArE,CAAS,CAAAsE,IAAA,EACzC,KAAAC,YAAA,CAA8BF,EAAArE,CAAS,CAAAsE,IAAA,CAAAhJ,EAAA8H,EAEvC,CACAoB,MAAAlJ,CAAA,CAAA8H,CAAA,EACA,KAAAJ,WAAA,EAAgCqB,EAAArE,CAAS,CAAAyE,KAAA,EACzC,KAAAF,YAAA,CAA8BF,EAAArE,CAAS,CAAAyE,KAAA,CAAAnJ,EAAA8H,EAEvC,CACAsB,MAAApJ,CAAA,CAAA8H,CAAA,EACA,KAAAJ,WAAA,EAAgCqB,EAAArE,CAAS,CAAA2E,KAAA,EACzC,KAAAJ,YAAA,CAA8BF,EAAArE,CAAS,CAAA2E,KAAA,CAAArJ,EAAA8H,EAEvC,CACAwB,KAAAtJ,CAAA,CAAA8H,CAAA,EACA,KAAAJ,WAAA,EAAgCqB,EAAArE,CAAS,CAAA6E,OAAA,EACzC,KAAAN,YAAA,CAA8BF,EAAArE,CAAS,CAAA6E,OAAA,CAAAvJ,EAAA8H,GAEvC,KAAA0B,kBAAA,CAAgCT,EAAArE,CAAS,CAAA6E,OAAA,CAAAvJ,EAAA8H,EACzC,CACAlG,MAAA5B,CAAA,CAAA8H,CAAA,EACA,KAAAJ,WAAA,EAAgCqB,EAAArE,CAAS,CAAA+E,KAAA,EACzC,KAAAR,YAAA,CAA8BF,EAAArE,CAAS,CAAA+E,KAAA,CAAAzJ,EAAA8H,GAEvC,KAAA0B,kBAAA,CAAgCT,EAAArE,CAAS,CAAA+E,KAAA,CAAAzJ,EAAA8H,EACzC,CACA4B,IAAA1J,CAAA,CAAA8H,CAAA,EACA,KAAAmB,YAAA,CAA0BF,EAAArE,CAAS,CAAAsE,IAAA,CAAAhJ,EAAA8H,EACnC,CACAmB,aAAAU,CAAA,CAAA3J,CAAA,CAAA8H,CAAA,EACA,IAAAjE,EAAuBkF,EAAAa,CAAgB,CAAAD,EAAA,CAEvCE,OAAA,CAAAhG,EAAA,SAAA+D,aAAA,CAAA+B,EAAA3J,EAAA8H,GACA,CAEA0B,mBAAAG,CAAA,CAAA3J,CAAA,CAAA8H,CAAA,EACAnM,OAAAmO,EAAA,CAAAC,GAAA,CAAAC,QAAA,EACAhK,QAAAA,EACA2J,MAAAA,EACAM,WAAA,CAEAnC,KAAAA,CACA,CACA,EACA,CACA,yIGxDOiB,EACPA,yDACAA,CADAA,EAMCA,GAAAA,CAAAA,EAAA,IALD,CAAAA,EAAA,kBACAA,CAAA,CAAAA,EAAA,sBACAA,CAAA,CAAAA,EAAA,gBACAA,CAAA,CAAAA,EAAA,kBACAA,CAAA,CAAAA,EAAA,kBAEO,IAAAmB,EAAA,CACP,CAAAnB,EAAAU,KAAA,UACA,CAAAV,EAAAQ,OAAA,SACA,CAAAR,EAAAC,IAAA,SACA,CAAAD,EAAAI,KAAA,UACA,CAAAJ,EAAAM,KAAA,SACA,uKEdO,SAASc,EAAaC,CAAA,EAC7B,IAAAA,EACA,YAEA,IACA,OAAAC,KAAAC,KAAA,CAAAF,EACA,CACA,MAAAxI,EAAA,CAIA,OADAiI,QAAAjI,KAAA,CAAAA,GACA,IACA,CACA,CCXO,MAAA2I,EACPxO,IAAAgE,CAAA,CAAAyK,EAAA,IACA,IAAAC,EAA4B,GAAAC,EAAAC,EAAA,EAAG5K,UAC/B,EACmBoK,EAAaM,IAAA3J,OAAA,KAEhC2J,GAAA,IACA,CACAtM,IAAA4B,CAAA,CAAAe,CAAA,CAAAiC,CAAA,CAAAyH,EAAA,IACA,IACA,IAAAI,EAAAJ,EAAAH,KAAA5B,SAAA,EAAoD3H,MAAAA,CAAA,GAAOA,EAC/C,GAAA4J,EAAAG,EAAA,EAAG9K,EAAA6K,EAAA7H,EACf,CACA,MAAAnB,EAAA,CAEAiI,QAAAjI,KAAA,CAAAA,EACA,CACA,CACAhB,IAAAb,CAAA,EACA,MAAA3D,CAAAA,CAAA,KAAAL,GAAA,CAAAgE,EACA,CACAtB,OAAAsB,CAAA,EACQ,GAAA2K,EAAAI,EAAA,EAAM/K,EACd,CACA,CC1BO,IAAMgL,EAAe,GAC5BC,MAAAA,CCCO,OAAAC,EACPlP,IAAAgE,CAAA,EACA,uBAAApE,OAAA,CACA,IAAA8O,EAAA9O,OAAAuP,YAAA,CAAAC,OAAA,CAAApL,IAAA7D,KAAAA,EACAkP,EAA8BjB,EAAaM,GAC3C,IAAAW,EACA,YAEA,IAAAtK,EAAAsK,GAAAtK,OAAA,YACA,GAAAzC,SAAA+F,KAAAC,GAAA,OAAAD,KAAAgH,EAAA/M,OAAA,EAAAgN,OAAA,IACA,KAAA5M,MAAA,CAAAsB,GACA,MAEAe,CACA,CACA,WACA,CACA3C,IAAA4B,CAAA,CAAAe,CAAA,CAAAiC,CAAA,EACA,oBAAAA,GAAA1E,QAAA,CACA,IAAAA,EAAA,IAAA+F,KACA/F,EAAAiN,eAAA,CAAAjN,EAAAkN,eAAA,GAAgER,EAAehI,EAAA1E,OAAA,GAC/E0E,EAAA1E,OAAA,CAAAA,CACA,CACA,oBAAA1C,QACAA,OAAAuP,YAAA,CAAAM,OAAA,CAAAzL,EAAAsK,KAAA5B,SAAA,EACA3H,MAAAA,EACA,GAAAiC,CAAA,GAGA,CACAnC,IAAAb,CAAA,EACA,MAAA3D,CAAAA,CAAA,KAAAL,GAAA,CAAAgE,EACA,CACAtB,OAAAsB,CAAA,EACA,oBAAApE,QACAA,OAAAuP,YAAA,CAAAO,UAAA,CAAA1L,EAEA,CACA,eCpCO,OAAA2L,UAA+B7L,EAAAC,CAAa,CACnDC,KAAA,gCACA4L,CAAA,CAAAzS,CAAA,EAAiCb,KAAAA,EAAA,eAAA4H,EAAA,CAAqC,EAAI,EAC1E,qBAA6B/G,EAAA,gBAAM,EAAiByS,EAAA,SAAS,GAAatT,KAAAA,EAAA,GAAA4H,CAAA,GAG1EtH,OAAAuH,cAAA,MAAAwL,EAAAvL,SAAA,CACA,CACA,CCXO,MAAAyL,EACPrM,SAAA,GACArG,KAAA,eACAqG,CAAA,CAAArG,CAAA,EACA,KAAAqG,QAAA,CAAAA,EACA,KAAArG,IAAA,CAAAA,CACA,CAEA6C,IAAAgE,CAAA,EACA,UAAkB2L,EAAgB,KAAAnM,QAAA,MAAArG,IAAA,CAClC,CAEAiF,IAAA4B,CAAA,CAAAe,CAAA,CAAAiC,CAAA,EACA,UAAkB2I,EAAgB,KAAAnM,QAAA,MAAArG,IAAA,CAClC,CAEA0H,IAAAb,CAAA,EACA,UAAkB2L,EAAgB,KAAAnM,QAAA,MAAArG,IAAA,CAClC,CAEAuF,OAAAsB,CAAA,EACA,UAAkB2L,EAAgB,KAAAnM,QAAA,MAAArG,IAAA,CAClC,CACA,CCvBO,MAAA2S,EACP9P,IAAAgE,CAAA,EACA,IAAA0K,EAAA9O,OAAAmQ,cAAA,CAAAX,OAAA,CAAApL,IAAA7D,KAAAA,EACA,OAAeiO,EAAaM,IAAA3J,OAAA,IAC5B,CACA3C,IAAA4B,CAAA,CAAAe,CAAA,EACAnF,OAAAmQ,cAAA,CAAAN,OAAA,CAAAzL,EAAAsK,KAAA5B,SAAA,EACA3H,MAAAA,CACA,GACA,CACAF,IAAAb,CAAA,EACA,MAAA3D,CAAAA,CAAA,KAAAL,GAAA,CAAAgE,EACA,CACAtB,OAAAsB,CAAA,EACApE,OAAAmQ,cAAA,CAAAL,UAAA,CAAA1L,EACA,CACA","sources":["webpack://_N_E/./src/domain/shared/lib/config/ lazy ^\\.\\/.*\\.ts$ referencedExports: config namespace object","webpack://_N_E/./src/domain/shared/api/constants/externalApiClientVersion.ts","webpack://_N_E/./src/domain/shared/api/types/ClientType.ts","webpack://_N_E/./src/domain/shared/api/getExternalApiClientName.ts","webpack://_N_E/./src/domain/shared/api/index.ts","webpack://_N_E/./src/domain/shared/lib/authorization/BaseAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/authorization/BaseCookieAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/authorization/ClientAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/types/SessionCookieStatuses.ts","webpack://_N_E/./src/domain/shared/lib/authorization/ServerAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/authorization/BaseOAuthAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/authorization/DesktopAuthorization.ts","webpack://_N_E/./src/domain/shared/lib/authorization/index.ts","webpack://_N_E/./src/domain/shared/lib/config/getConfig.ts","webpack://_N_E/./src/domain/shared/lib/platform/getPlatformName.ts","webpack://_N_E/./src/domain/shared/lib/platform/types/ClientPlatform.ts","webpack://_N_E/../../packages/container/build/exceptions/ContainerException.js","webpack://_N_E/../../packages/container/build/exceptions/NotFoundContainerException.js","webpack://_N_E/../../packages/container/build/exceptions/AlreadyExistsContainerException.js","webpack://_N_E/../../packages/container/build/IoCContainer.js","webpack://_N_E/../../packages/container/build/shorthands.js","webpack://_N_E/../../packages/http-client/build/utils/retryPolicy/convertRetryPolicyConfigToStatusCodes.js","webpack://_N_E/../../packages/http-client/build/utils/retryPolicy/getErrorCode.js","webpack://_N_E/../../packages/http-client/build/utils/retryPolicy/getRetryPolicyControllerDecision.js","webpack://_N_E/../../packages/http-client/build/utils/delay.js","webpack://_N_E/../../packages/http-client/build/utils/retryPolicy/browserBeforeRetryHook.js","webpack://_N_E/../../packages/http-client/build/BrowserHttpClient.js","webpack://_N_E/../../packages/http-client/build/exceptions/HttpErrorException.js","webpack://_N_E/../../packages/http-client/build/exceptions/HttpException.js","webpack://_N_E/../../packages/logger/build/utils/obfuscateValue.js","webpack://_N_E/../../packages/logger/build/BaseLogger.js","webpack://_N_E/../../packages/logger/build/BrowserLogger.js","webpack://_N_E/../../packages/logger/build/browser.js","webpack://_N_E/../../packages/logger/build/index.js","webpack://_N_E/../../packages/logger/build/types/LogLevels.js","webpack://_N_E/../../packages/storage/build/cookie/ServerCookieStorage.js","webpack://_N_E/../../packages/storage/build/utils/safeJSONParse.js","webpack://_N_E/../../packages/storage/build/cookie/ClientCookieStorage.js","webpack://_N_E/../../packages/storage/build/utils/convertDaysToMs.js","webpack://_N_E/../../packages/storage/build/local/ClientLocalStorage.js","webpack://_N_E/../../packages/storage/build/exceptions/StorageException.js","webpack://_N_E/../../packages/storage/build/dummy/DummyStorage.js","webpack://_N_E/../../packages/storage/build/session/ClientSessionStorage.js","webpack://_N_E/../../packages/storage/build/index.js","webpack://_N_E/<anon>"],"sourcesContent":["var map = {\n\t\"./default.ts\": [\n\t\t33551,\n\t\t3551\n\t],\n\t\"./development.ts\": [\n\t\t10889,\n\t\t7738,\n\t\t889\n\t],\n\t\"./getConfig.ts\": [\n\t\t31450\n\t],\n\t\"./getMetrikaSettings.ts\": [\n\t\t20162,\n\t\t162\n\t],\n\t\"./getPrefixUrl.ts\": [\n\t\t30518,\n\t\t8987\n\t],\n\t\"./production.ts\": [\n\t\t66228,\n\t\t7738,\n\t\t6228\n\t],\n\t\"./qa.ts\": [\n\t\t51155,\n\t\t7738,\n\t\t1918\n\t],\n\t\"./retryPolicyConfigs/musicExternalApiRetryPolicyConfig.ts\": [\n\t\t88979,\n\t\t8979\n\t],\n\t\"./types/ConfigVariables.ts\": [\n\t\t64580,\n\t\t4580\n\t],\n\t\"./types/ConfigVariablesPlayer.ts\": [\n\t\t62981,\n\t\t2981\n\t],\n\t\"./types/ConfigVariablesResource.ts\": [\n\t\t72119,\n\t\t2119\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 78276;\nmodule.exports = webpackAsyncContext;","export const EXTERNAL_API_CLIENT_VERSION = '1.0';\n","export enum ClientType {\n    WEB = 'YandexMusicWebNext',\n    DESKTOP = 'YandexMusicDesktopApp'\n}\n","import { getPlatform } from '../lib/platform/getPlatform.js';\nimport { getPlatformName } from '../lib/platform/getPlatformName.js';\n\nimport { EXTERNAL_API_CLIENT_VERSION } from './constants/externalApiClientVersion.js';\nimport { ClientType } from './types/ClientType.js';\n\nconst createClientName = (type: string, version: string): string => {\n    return `${type}/${version}`;\n};\n\nexport const getExternalApiClientName = (): string => {\n    if (process.env.BUILD_TYPE === 'desktop') {\n        if (typeof window !== 'undefined') {\n            const clientType = `${ClientType.DESKTOP}${getPlatformName(getPlatform())}`;\n\n            return createClientName(clientType, EXTERNAL_API_CLIENT_VERSION);\n        }\n    }\n\n    return createClientName(ClientType.WEB, EXTERNAL_API_CLIENT_VERSION);\n};\n","export { getExternalApiClientName } from './getExternalApiClientName.js';\n","import { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { UrlData } from '../router/useUrl.js';\n\nimport { AuthorizationStorage } from './types/AuthorizationStorage.js';\n\n/**\n * Базовый класс для всех типов авторизации\n */\nexport class BaseAuthorization {\n    protected pathname: string = '';\n    protected searchParams: string = '';\n    protected host: string = '';\n    protected tld: string = '';\n\n    public constructor(protected storage: AuthorizationStorage, protected config: ConfigVariables) {}\n\n    public setRedirectUrl({\n        pathname,\n        host,\n        searchParams,\n        tld\n    }: Pick<UrlData, 'host' | 'pathname' | 'searchParams' | 'tld'>): void {\n        this.host = host ?? this.host;\n        this.tld = tld ?? this.tld;\n        this.searchParams = searchParams ?? this.searchParams;\n        this.pathname = pathname ?? this.pathname;\n    }\n\n    protected get passportLogin(): string | undefined {\n        return;\n    }\n}\n","import { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { getTLDHost } from '../router/utils/getTLDHost.js';\n\nimport { BaseAuthorization } from './BaseAuthorization.js';\nimport { AuthorizationStorage } from './types/AuthorizationStorage.js';\n\n/**\n * Базовый класс для авторизации по куки Session_id\n */\nexport class BaseCookieAuthorization extends BaseAuthorization {\n    public constructor(storage: AuthorizationStorage, config: ConfigVariables) {\n        super(storage, config);\n    }\n\n    protected getRedirectUri(): string {\n        const path = `${this.pathname}${this.searchParams ? `?${this.searchParams}` : ''}`;\n        return encodeURIComponent(`https://${this.host}${path}`);\n    }\n\n    public get authorizationUrl(): string | undefined {\n        if (!this.host || !this.tld) {\n            return;\n        }\n\n        const {\n            passportCredentials: { host: passportHost, origin }\n        } = this.config;\n\n        const passportHostWithTld = getTLDHost(passportHost, this.tld);\n        const redirectUri = this.getRedirectUri();\n\n        return `${passportHostWithTld}/auth?origin=${origin}&retpath=${redirectUri}`;\n    }\n\n    public redirectToAuthorizationUrl(): void {\n        /* */\n    }\n}\n","import { ClientCookieStorage } from '@yandex-music-int/storage';\n\nimport { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { Storage } from '../types/Storage.js';\nimport { StorageKeys } from '../types/StorageKeys.js';\n\nimport { BaseCookieAuthorization } from './BaseCookieAuthorization.js';\n\nconst PASSPORT_LOGIN_COOKIE_OBSERVE_INTERVAL = 5000;\n\n/**\n * Класс для авторизации в браузере. Основной функционал класса - проверка разлогина\n * в соседней вкладке\n */\nexport class ClientAuthorization extends BaseCookieAuthorization {\n    protected declare storage: ClientCookieStorage<Storage>;\n\n    /*\n        Свойство нужно для наблюдения за изменением паспортной куки StorageKeys.YandexLogin\n        Запоминаем текущее значение куки и сравнием его в следующую итерацию интервала checkPassportLoginCookieChange\n    */\n    private passportLoginCached?: string;\n\n    public constructor(storage: ClientCookieStorage<Storage>, config: ConfigVariables) {\n        super(storage, config);\n\n        if (typeof window !== 'undefined') {\n            this.passportLoginCached = this.passportLogin;\n            this.setPassportLoginCookieObserver();\n        }\n    }\n\n    private setPassportLoginCookieObserver(): void {\n        setInterval(this.checkPassportLoginCookieChange.bind(this), PASSPORT_LOGIN_COOKIE_OBSERVE_INTERVAL);\n    }\n\n    private checkPassportLoginCookieChange(): void {\n        if (this.passportLogin !== this.passportLoginCached) {\n            this.passportLoginCached = this.passportLogin;\n            this.reloadPage();\n        }\n    }\n\n    private reloadPage(): void {\n        if (typeof window !== 'undefined') {\n            window.location.reload();\n        }\n    }\n\n    public override redirectToAuthorizationUrl(): void {\n        if (this.authorizationUrl) {\n            window.location.href = this.authorizationUrl;\n        }\n    }\n\n    protected override get passportLogin(): string | undefined {\n        return this.storage.get(StorageKeys.YandexLogin, false) || undefined;\n    }\n\n    public get hasAuthorizationCredentials(): boolean {\n        return Boolean(this.storage.get(StorageKeys.YandexLogin, false));\n    }\n\n    // В браузере проверок нет, т.к авторизация построена на http-only куки Session_id\n    public async check(): Promise<void> {\n        /* */\n    }\n}\n","/** https://docs.yandex-team.ru/blackbox/methods/sessionid#status */\nexport enum SessionCookieStatuses {\n    /** переданная авторизационная кука валидна. Если не задан параметр multisession,\n     * этот статус также говорит о том, что аккаунт по умолчанию залогинен */\n    VALID = 'VALID',\n    /** аутентификационная кука валидна, но может быть обновлена */\n    NEED_RESET = 'NEED_RESET',\n    /** срок действия авторизационнойкуки истек, сессия не действительна */\n    EXPIRED = 'EXPIRED',\n    /** пользователь не авторизован в данном домене. Куки со статусом NOAUTH используются для\n     * подчиненных доменов в мультидоменной авторизации (МДА) */\n    NOAUTH = 'NOAUTH',\n    /** учетная запись пользователя существует, но заблокирована службой поддержки\n     * (возможен только если в запросе не был задан параметр multisession) */\n    DISABLED = 'DISABLED',\n    /** авторизационная кука неправильного формата, была сформирована до выхода или проверяется\n     * не в том окружении, для которого была выставлена.\n     * Если в запросе не был задан параметр multisession, статус также может означать, что для\n     * аккаута был выполнен выход на всех устройствах, необходимо сменить пароль, или аккаунта не существует */\n    INVALID = 'INVALID',\n    /** кука sessguard невалидна или отсутствует */\n    WRONG_GUARD = 'WRONG_GUARD'\n}\n","import { redirect } from 'next/navigation.js';\n\nimport { ServerCookieStorage } from '@yandex-music-int/storage';\n\nimport { Blackbox } from '../blackbox/Blackbox.js';\nimport { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { getTLDHost } from '../router/utils/getTLDHost.js';\nimport { SessionCookieStatuses } from '../types/SessionCookieStatuses.js';\nimport { Storage } from '../types/Storage.js';\nimport { StorageKeys } from '../types/StorageKeys.js';\n\nimport { BaseCookieAuthorization } from './BaseCookieAuthorization.js';\n\nexport class ServerAuthorization extends BaseCookieAuthorization {\n    protected declare storage: ServerCookieStorage<Storage>;\n\n    public constructor(storage: ServerCookieStorage<Storage>, config: ConfigVariables, protected blackbox: Blackbox) {\n        super(storage, config);\n    }\n\n    /**\n     * Проверки (https://docs.yandex-team.ru/authdevguide/concepts/before):\n     * - Если нет куки Session_id, редиректим на паспорт\n     * - Если есть кука Session_id, проверяем ее в blackbox\n     *  - Если кука валидна, отдаем пользователю страницу\n     *  - Если кука не валидна, редиректим на паспорт /auth/\n     *  - Если кука валидна, но надо обновить (NEED_RESET), редиректим на паспорт /auth/update\n     *  - Если куку надо получить (WRONG_GUARD), редиректим на паспорт /auth/update\n     */\n    public check(): void {\n        const cookieStatus = this.getSessionCookieStatus();\n\n        if (this.sessionCookie && cookieStatus) {\n            switch (cookieStatus) {\n                case SessionCookieStatuses.VALID:\n                    break;\n                case SessionCookieStatuses.NEED_RESET:\n                case SessionCookieStatuses.EXPIRED:\n                    this.redirectToUpdateCookieUrl();\n                    break;\n                case SessionCookieStatuses.WRONG_GUARD:\n                    this.redirectToAuthGuardUrl();\n                    break;\n                case SessionCookieStatuses.INVALID:\n                case SessionCookieStatuses.NOAUTH:\n                    this.redirectToAuthorizationUrl();\n                    break;\n                default:\n            }\n\n            return;\n        }\n    }\n\n    public get sessionCookie(): string | undefined {\n        return this.storage.get(StorageKeys.SessionId, false) || undefined;\n    }\n\n    public get updateCookieUrl(): string {\n        const {\n            passportCredentials: { host: passportHost }\n        } = this.config;\n\n        const passportHostWithTld = getTLDHost(passportHost, this.tld);\n        const redirectUri = this.getRedirectUri();\n\n        return `${passportHostWithTld}/auth/update/?retpath=${redirectUri}`;\n    }\n\n    public get authGuardUrl(): string {\n        const {\n            passportCredentials: { host: passportHost }\n        } = this.config;\n\n        const passportHostWithTld = getTLDHost(passportHost, this.tld);\n        const redirectUri = this.getRedirectUri();\n\n        return `${passportHostWithTld}/auth/guard/?retpath=${redirectUri}`;\n    }\n\n    public override redirectToAuthorizationUrl(): void {\n        if (this.authorizationUrl) {\n            redirect(this.authorizationUrl);\n        }\n    }\n\n    public redirectToUpdateCookieUrl(): void {\n        if (this.updateCookieUrl) {\n            redirect(this.updateCookieUrl);\n        }\n    }\n\n    public redirectToAuthGuardUrl(): void {\n        if (this.authGuardUrl) {\n            redirect(this.authGuardUrl);\n        }\n    }\n\n    protected getSessionCookieStatus(): SessionCookieStatuses | undefined {\n        const userSession = this.blackbox.getUserSession();\n\n        return userSession?.status.value;\n    }\n\n    public get hasAuthorizationCredentials(): boolean {\n        return Boolean(this.storage.get(StorageKeys.YandexLogin, false));\n    }\n}\n","import { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { getTLDHost } from '../router/utils/getTLDHost.js';\nimport { StorageKeys } from '../types/StorageKeys.js';\n\nimport { BaseAuthorization } from './BaseAuthorization.js';\nimport { AuthorizationStorage } from './types/AuthorizationStorage.js';\n\ninterface OAuthTokenCredentials {\n    token: string;\n    expiresIn: number;\n    state: string;\n}\n\n/**\n * Базовый класс авторизации через OAuth токен. Используется для desktop приложения\n */\nexport class BaseOAuthAuthorization extends BaseAuthorization {\n    protected dataIsLoaded: boolean = false;\n    protected tokenOwnerLogin: string | undefined;\n\n    public constructor(storage: AuthorizationStorage, config: ConfigVariables) {\n        super(storage, config);\n\n        if (!this.oauthState) {\n            this.updateOauthState();\n        }\n\n        this.check();\n    }\n\n    /*\n        Проверки запускаются для того, чтобы определить \"авторизованность\" пользователя. По результам проверок\n        принимается решение: ничего не делает или принудительно авторизовать пользователя.\n\n        Проверки:\n        - Если в куках нет токена и нет паспортного логина: пользователь \"незалогин\"\n        - Если в куках есть токен и нет паспортного логина, значит, пользователь разлогинился \n          на другом сервисе. Считаем его \"незалогином\"\n        - Если есть паспортный логин и нет токена, значит, токен куда-то потерялся (возможно, пользователь\n          впервые заходит на Музыку либо кука токена просрочилась). Считаем его \"нечестным залогином\"\n        - Если есть токен и есть паспортный логин, то считаем его залогином до тех пор, пока в модель User\n          не прорастет его логин по токену. После прорастания логин сохранится в поле tokenOwnerLogin и проверка \n          будет перезапущена. В случае несовпадения tokenOwnerLogin и passportLogin считаем его нечестным залогином\n        - В противном случае: пользователь \"залогин\"\n\n        По результатам проверок выполняются действия:\n        - залогин: ничего не делаем, всегда возвращаем OAuth-токен из геттера token\n        - незалогин: ничего не делаем\n        - нечестный залогин: отправляем пользователя authorizationUrl для получения OAuth-токена\n\n        Проверки запускаются по следующим событиям:\n        - загрузка страницы\n        - загрузка модели User\n        - изменение паспортной куки PASSPORT_LOGIN_COOKIE_NAME\n        - TODO: ресурсы (ручки бэкенда) возвращают 403\n    */\n    public check(): void {\n        if (!this.dataIsLoaded) {\n            return;\n        }\n\n        if (!this.passportLogin && this.token) {\n            this.removeToken();\n            this.reloadPage();\n            return;\n        }\n\n        if (!this.token && this.passportLogin) {\n            this.redirectToAuthorizationUrl();\n            return;\n        }\n\n        if (this.passportLogin && this.tokenOwnerLogin && this.passportLogin !== this.tokenOwnerLogin) {\n            this.redirectToAuthorizationUrl();\n            return;\n        }\n    }\n\n    public get authorizationUrl(): string | undefined {\n        const {\n            oauthCredentials: { host: oauthHost, clientId }\n        } = this.config;\n\n        let path = `${this.pathname}${this.searchParams ? `?${this.searchParams}` : ''}`;\n        if (path.charAt(0) === '/') {\n            path = path.substring(1);\n        }\n\n        const origin = typeof window !== 'undefined' ? window.location.origin : '';\n        const redirectUri = `${origin}/oauth?redirectUri=${encodeURIComponent(path)}`;\n        const oauthHostWithTld = getTLDHost(oauthHost, 'ru');\n\n        const url = new URL(`${oauthHostWithTld}/authorize`);\n\n        url.searchParams.append('response_type', 'token');\n        url.searchParams.append('display', 'popup');\n        url.searchParams.append('scope', 'music:content');\n        url.searchParams.append('scope', 'music:read');\n        url.searchParams.append('scope', 'music:write');\n        url.searchParams.append('client_id', clientId);\n        url.searchParams.append('redirect_uri', redirectUri);\n        url.searchParams.append('state', this.oauthState);\n\n        return url.toString();\n    }\n\n    private reloadPage(): void {\n        if (typeof window !== 'undefined') {\n            window.location.reload();\n        }\n    }\n\n    public redirectToAuthorizationUrl(): void {\n        if (this.authorizationUrl) {\n            window.location.href = this.authorizationUrl;\n        }\n    }\n\n    public setTokenOwnerLogin(login: string | undefined): void {\n        this.tokenOwnerLogin = login;\n    }\n\n    public setDataIsLoaded(): void {\n        this.dataIsLoaded = true;\n    }\n\n    public setToken(credentials: OAuthTokenCredentials): void {\n        if (credentials.state === this.oauthState) {\n            this.storage.set(StorageKeys.Oauth, credentials.token, {\n                expires: Math.floor(credentials.expiresIn / (60 * 60 * 24))\n            });\n        }\n    }\n\n    public get token(): string | undefined {\n        if (this.passportLogin) {\n            return this.storage.get(StorageKeys.Oauth) || undefined;\n        }\n\n        return;\n    }\n\n    protected removeToken(): void {\n        this.storage.remove(StorageKeys.Oauth);\n    }\n\n    private updateOauthState(): void {\n        const state = Math.round(Math.random() * 10e10).toString(16); // генерация рандомной строки до 9 символов\n\n        this.storage.set(StorageKeys.OauthState, state, {\n            expires: 1\n        });\n    }\n\n    private get oauthState(): string {\n        return this.storage.get(StorageKeys.OauthState) || '';\n    }\n}\n","import { ClientLocalStorage } from '@yandex-music-int/storage';\n\nimport { ConfigVariables } from '../config/types/ConfigVariables.js';\nimport { DesktopEvents } from '../desktop-events/DesktopEvents.js';\nimport { Storage } from '../types/Storage.js';\nimport { StorageKeys } from '../types/StorageKeys.js';\n\nimport { BaseOAuthAuthorization } from './BaseOAuthAuthorization.js';\n\nexport class DesktopAuthorization extends BaseOAuthAuthorization {\n    protected declare storage: ClientLocalStorage<Storage>;\n    private passportLoginFromElectron: string | undefined;\n\n    public constructor(storage: ClientLocalStorage<Storage>, config: ConfigVariables) {\n        super(storage, config);\n\n        this.loadPassportLogin();\n    }\n\n    public override get token(): string | undefined {\n        return this.storage.get(StorageKeys.Oauth) || undefined;\n    }\n\n    public get hasAuthorizationCredentials(): boolean {\n        return Boolean(this.storage.get(StorageKeys.Oauth));\n    }\n\n    private loadPassportLogin(): void {\n        if (typeof window !== 'undefined' && window.desktopEvents) {\n            window.desktopEvents.invoke(DesktopEvents.GET_PASSPORT_LOGIN).then((login: string | undefined) => {\n                this.passportLoginFromElectron = login;\n                this.setDataIsLoaded();\n                this.check();\n            });\n        }\n    }\n\n    protected override get passportLogin(): string | undefined {\n        return this.passportLoginFromElectron;\n    }\n}\n","export { ClientAuthorization } from './ClientAuthorization.js';\nexport { ServerAuthorization } from './ServerAuthorization.js';\nexport { DesktopAuthorization } from './DesktopAuthorization.js';\n","import { ConfigVariables } from './types/ConfigVariables.js';\n\nexport async function getConfig(env: typeof process.env.NEXT_PUBLIC_CONFIG_ENV): Promise<ConfigVariables> {\n    const { config } = await import(`./${env}.ts`);\n\n    return config();\n}\n","import { Platform } from '../types/Platform.js';\n\nimport { ClientPlatform } from './types/ClientPlatform.js';\n\nexport const getPlatformName = (platform: Platform | undefined): string | null => {\n    switch (platform) {\n        case 'win32':\n            return ClientPlatform.WINDOWS;\n        case 'darwin':\n            return ClientPlatform.MACOS;\n        case 'linux':\n            return ClientPlatform.LINUX;\n    }\n\n    return null;\n};\n","export enum ClientPlatform {\n    WINDOWS = 'Windows',\n    MACOS = 'MacOS',\n    LINUX = 'Linux'\n}\n","import { BaseException } from '@yandex-music-int/exception';\n/**\n * Base interface representing a generic exception in a container.\n */\nexport class ContainerException extends BaseException {\n    name = 'ContainerException';\n    constructor(message = 'Internal error', { code = 'E_CONTAINER', ...restOptions } = {}) {\n        super(message, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, ContainerException.prototype);\n    }\n}\n//# sourceMappingURL=ContainerException.js.map","import { ContainerException } from './ContainerException.js';\n/**\n * No entry was found in the container.\n */\nexport class NotFoundContainerException extends ContainerException {\n    name = 'NotFoundContainerException';\n    constructor(name) {\n        super(`No entry with the name '${name.toString()}' was found in the container`, {\n            code: 'E_CONTAINER_NOT_FOUND'\n        });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, NotFoundContainerException.prototype);\n    }\n}\n//# sourceMappingURL=NotFoundContainerException.js.map","import { ContainerException } from './ContainerException.js';\n/**\n * No entry was found in the container.\n */\nexport class AlreadyExistsContainerException extends ContainerException {\n    name = 'AlreadyExistsContainerException';\n    constructor(name) {\n        super(`A binding with the name '${name.toString()}' already exists in the container`, {\n            code: 'E_CONTAINER_ALREADY_EXISTS'\n        });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, AlreadyExistsContainerException.prototype);\n    }\n}\n//# sourceMappingURL=AlreadyExistsContainerException.js.map","import { NotFoundContainerException } from './exceptions/NotFoundContainerException.js';\nimport { AlreadyExistsContainerException } from './exceptions/AlreadyExistsContainerException.js';\n// TODO: throw an error when cyclic dependencies are registered, ex: A -> B, B -> A\nexport class IoCContainer {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    bindings = {};\n    shared = new Map();\n    register(name, binding) {\n        if (this.has(name)) {\n            throw new AlreadyExistsContainerException(name);\n        }\n        this.bindings = {\n            ...this.bindings,\n            [name]: binding\n        };\n        return this;\n    }\n    registerMany(bindings) {\n        for (const name in bindings) {\n            if (this.has(name)) {\n                throw new AlreadyExistsContainerException(name);\n            }\n        }\n        this.bindings = {\n            ...this.bindings,\n            ...bindings\n        };\n        return this;\n    }\n    get(name) {\n        if (this.shared.has(name)) {\n            return this.shared.get(name);\n        }\n        const binding = this.bindings[name];\n        if (typeof binding === 'undefined') {\n            throw new NotFoundContainerException(name);\n        }\n        const value = this.create(binding);\n        if (binding.isShared) {\n            this.shared.set(name, value);\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.bindings;\n    }\n    create(binding) {\n        return binding.creator(this);\n    }\n}\n//# sourceMappingURL=IoCContainer.js.map","export function constantValue(value) {\n    return {\n        type: \"constantValue\" /* ContainerBindingType.CONSTANT_VALUE */,\n        creator: () => value,\n        isShared: true\n    };\n}\nexport function transient(creator) {\n    return {\n        type: \"transient\" /* ContainerBindingType.TRANSIENT */,\n        creator,\n        isShared: false\n    };\n}\nexport function singleton(creator) {\n    return {\n        type: \"singleton\" /* ContainerBindingType.SINGLETON */,\n        creator,\n        isShared: true\n    };\n}\nexport function factory(creator) {\n    return {\n        type: \"factory\" /* ContainerBindingType.FACTORY */,\n        creator,\n        isShared: false\n    };\n}\n//# sourceMappingURL=shorthands.js.map","export const convertRetryPolicyConfigToStatusCodes = (config) => {\n    return Object.keys(config.statusCodes)\n        .filter((code) => !isNaN(Number(code)))\n        .map((code) => parseInt(code, 10));\n};\n//# sourceMappingURL=convertRetryPolicyConfigToStatusCodes.js.map","export const getErrorCode = (error) => {\n    // У Error ky и got разные интерфейсы, поэтому используем @ts-ignore\n    // @ts-ignore\n    if (error?.code === 'ETIMEDOUT') {\n        return 'TIMEOUT';\n    }\n    // @ts-ignore\n    return (error.response && (error.response.status || error.response.statusCode)) || 'NON_HTTP_ERROR';\n};\n//# sourceMappingURL=getErrorCode.js.map","const dontRetry = {\n    retryLimit: 0,\n    retryDelay: 0\n};\nexport const getRetryControllerDecision = ({ retryAttempt, error, isNotIdempotent, retryAfter, retryPolicyConfig }) => {\n    if (!retryPolicyConfig || isNotIdempotent) {\n        return dontRetry;\n    }\n    if (retryAfter) {\n        if (retryPolicyConfig.totalRequestsLimit > retryAttempt) {\n            return {\n                retryLimit: retryPolicyConfig.totalRequestsLimit,\n                retryDelay: retryAfter\n            };\n        }\n        return dontRetry;\n    }\n    if (retryPolicyConfig.statusCodes[error]) {\n        const errorConfig = retryPolicyConfig.statusCodes[error];\n        if (errorConfig?.attempts?.length && errorConfig.attempts.length >= retryAttempt) {\n            return {\n                retryLimit: errorConfig.attempts.length + 1,\n                retryDelay: errorConfig.attempts[retryAttempt - 1] || 1\n            };\n        }\n    }\n    return dontRetry;\n};\n//# sourceMappingURL=getRetryPolicyControllerDecision.js.map","export const delay = async (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=delay.js.map","import { getErrorCode } from './getErrorCode.js';\nimport { getRetryControllerDecision } from './getRetryPolicyControllerDecision.js';\nimport { delay } from '../delay.js';\nexport const browserBeforeRetryHook = async ({ \n// request,\noptions, error, retryAttempt, clientRetryConfig }) => {\n    // request.headers.set('X-Retry-Count', String(retryAttempt));\n    // В этом error точно может быть response и т.д., но нет нормальных тайпингов\n    // @ts-ignore\n    if (error?.response?.headers?.get('Retry-After')) {\n        // Не ретраим через RetryController, ky сам хорошо справляется с ретраями по Retry-After\n        return;\n    }\n    const convertedError = getErrorCode(error);\n    const retryDecision = getRetryControllerDecision({\n        error: convertedError,\n        retryAttempt,\n        retryPolicyConfig: clientRetryConfig?.config,\n        isNotIdempotent: clientRetryConfig?.isNotIdempotent\n    });\n    options.retry.limit = retryDecision.retryLimit;\n    await delay(retryDecision.retryDelay);\n};\n//# sourceMappingURL=browserBeforeRetryHook.js.map","import ky, { HTTPError } from 'ky';\nimport { HttpException } from './exceptions/HttpException.js';\nimport { HttpErrorException } from './exceptions/HttpErrorException.js';\nimport { convertRetryPolicyConfigToStatusCodes } from './utils/retryPolicy/convertRetryPolicyConfigToStatusCodes.js';\nimport { browserBeforeRetryHook } from './utils/retryPolicy/browserBeforeRetryHook.js';\nconst ALLOWED_KY_METHODS = [\n    'GET',\n    'POST',\n    'PUT',\n    'PATCH',\n    'DELETE',\n    'HEAD',\n    'get',\n    'post',\n    'put',\n    'patch',\n    'delete',\n    'head'\n];\nexport class BrowserHttpClient {\n    client;\n    constructor(options = {}) {\n        this.client = ky.create(this.optionsConverter(options));\n    }\n    async get(path, options = {}) {\n        return this.request(path, { ...options, method: 'GET' });\n    }\n    async post(path, options = {}) {\n        return this.request(path, { ...options, method: 'POST' });\n    }\n    async put(path, options = {}) {\n        return this.request(path, { ...options, method: 'PUT' });\n    }\n    async patch(path, options = {}) {\n        return this.request(path, { ...options, method: 'PATCH' });\n    }\n    async delete(path, options = {}) {\n        return this.request(path, { ...options, method: 'DELETE' });\n    }\n    async head(path, options = {}) {\n        return this.request(path, { ...options, method: 'HEAD' });\n    }\n    async request(url, options) {\n        try {\n            // Т.к. в api у ky нет таймингов ответа, считаем эту метрику сами\n            const startTime = Date.now();\n            const response = await this.client(url, this.optionsConverter(options));\n            const responseTime = Date.now() - startTime;\n            return this.responseConverter(response, options, { start: startTime, response: responseTime });\n        }\n        catch (error) {\n            if (error instanceof HTTPError) {\n                throw this.errorConverter(error);\n            }\n            throw error;\n        }\n    }\n    optionsConverter(options) {\n        const { prefixUrl, method, searchParams, headers, json, hooks, retry, timeout, credentials } = options;\n        const convertedOptions = {};\n        if (typeof credentials !== 'undefined') {\n            convertedOptions.credentials = credentials;\n        }\n        if (typeof prefixUrl !== 'undefined') {\n            convertedOptions.prefixUrl = prefixUrl;\n        }\n        if (typeof method !== 'undefined') {\n            convertedOptions.method = method;\n        }\n        if (typeof headers !== 'undefined') {\n            convertedOptions.headers = {\n                ...headers,\n                'user-agent': headers['user-agent'] ?? headers['User-Agent']\n            };\n        }\n        if (typeof searchParams !== 'undefined') {\n            convertedOptions.searchParams = searchParams;\n        }\n        if (typeof json !== 'undefined') {\n            convertedOptions.json = json;\n        }\n        if (typeof timeout === 'number') {\n            convertedOptions.timeout = timeout;\n        }\n        if (retry?.config) {\n            convertedOptions.retry = {\n                limit: retry.config.totalRequestsLimit,\n                backoffLimit: 1,\n                statusCodes: convertRetryPolicyConfigToStatusCodes(retry.config)\n            };\n            convertedOptions.timeout = retry?.config.timeout;\n            convertedOptions.hooks = convertedOptions.hooks || {};\n            convertedOptions.hooks.beforeRetry = convertedOptions.hooks.beforeRetry || [];\n            convertedOptions.hooks.beforeRetry.push(async (state) => {\n                await browserBeforeRetryHook({\n                    request: state.request,\n                    options: state.options,\n                    error: state.error,\n                    retryAttempt: state.retryCount,\n                    clientRetryConfig: retry\n                });\n            });\n        }\n        if (hooks) {\n            const { beforeRequest, beforeRetry, beforeError, afterResponse } = hooks;\n            let requestStartTime;\n            if (typeof convertedOptions.hooks === 'undefined') {\n                convertedOptions.hooks = {};\n            }\n            if (Array.isArray(beforeRequest)) {\n                convertedOptions.hooks.beforeRequest = beforeRequest.map((fn) => async (request, requestOptions) => {\n                    requestStartTime = Date.now();\n                    const normalizedOptions = this.normalizeOptions(request, requestOptions);\n                    await fn(normalizedOptions);\n                });\n            }\n            if (Array.isArray(beforeRetry)) {\n                convertedOptions.hooks.beforeRetry = convertedOptions.hooks.beforeRetry || [];\n                convertedOptions.hooks.beforeRetry = convertedOptions.hooks.beforeRetry.concat(beforeRetry.map((fn) => async ({ error, retryCount }) => {\n                    await fn(this.errorConverter(error), retryCount);\n                }));\n            }\n            if (Array.isArray(beforeError)) {\n                convertedOptions.hooks.beforeError = beforeError.map((fn) => async (error) => {\n                    await fn(this.errorConverter(error));\n                    return error;\n                });\n            }\n            if (Array.isArray(afterResponse)) {\n                convertedOptions.hooks.afterResponse = afterResponse.map((fn) => async (request, requestOptions, response) => {\n                    const normalizedOptions = this.normalizeOptions(request, requestOptions);\n                    const responseTime = Date.now();\n                    await fn(this.responseConverter(response, normalizedOptions, {\n                        start: requestStartTime,\n                        response: responseTime\n                    }));\n                    return response;\n                });\n            }\n        }\n        return convertedOptions;\n    }\n    responseConverter(response, options, timings) {\n        return {\n            headers: Object.fromEntries(response.headers.entries()),\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            url: response.url,\n            json: response.json.bind(response),\n            text: response.text.bind(response),\n            timings,\n            request: {\n                prefixUrl: options.prefixUrl,\n                headers: options.headers,\n                searchParams: options.searchParams,\n                method: options.method\n            }\n        };\n    }\n    normalizeOptions(request, options) {\n        const url = new URL(request.url);\n        return {\n            headers: this.normalizeHeaders(options.headers),\n            searchParams: new URLSearchParams(url.search),\n            json: request.json,\n            url: request.url,\n            method: this.convertMethod(options.method),\n            // TODO: в ky неоткуда взять `timeout`, поэтому намеренно возвращаем undefined\n            timeout: undefined\n        };\n    }\n    normalizeHeaders(headers) {\n        if (typeof headers === 'undefined') {\n            return {};\n        }\n        else if (headers instanceof Headers) {\n            return Object.fromEntries(headers.entries());\n        }\n        else if (Array.isArray(headers)) {\n            return Object.fromEntries(headers);\n        }\n        return headers;\n    }\n    errorConverter(error) {\n        if (error instanceof HTTPError) {\n            return new HttpErrorException(error.message, {\n                statusCode: error.response.status,\n                cause: error\n            });\n        }\n        return new HttpException(error.message, {\n            cause: error\n        });\n    }\n    convertMethod(method) {\n        if (typeof method !== 'undefined' && ALLOWED_KY_METHODS.includes(method)) {\n            return method.toUpperCase();\n        }\n        return 'GET';\n    }\n    convertMethods(methods) {\n        const filtered = new Set();\n        methods.forEach((method) => {\n            if (ALLOWED_KY_METHODS.includes(method)) {\n                filtered.add(method.toUpperCase());\n            }\n        });\n        return [...filtered];\n    }\n}\n//# sourceMappingURL=BrowserHttpClient.js.map","import { HttpException } from './HttpException.js';\nexport class HttpErrorException extends HttpException {\n    statusCode;\n    constructor(message, options) {\n        super(message, {\n            code: 'E_HTTP_CLIENT_NON_2XX_3XX_RESPONSE',\n            cause: options.cause\n        });\n        this.statusCode = options.statusCode;\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpErrorException.prototype);\n    }\n}\n//# sourceMappingURL=HttpErrorException.js.map","import { BaseException } from '@yandex-music-int/exception';\nexport class HttpException extends BaseException {\n    name = 'HttpException';\n    constructor(message = 'Http Client error', { code = 'E_HTTP_CLIENT', ...restOptions } = {}) {\n        super(message, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpException.prototype);\n    }\n}\n//# sourceMappingURL=HttpException.js.map","/**\n * Обфускация строки\n * @returns - Строка с обфусцированными символами\n */\nexport const obfuscateValue = () => {\n    return 'SECRET';\n};\n//# sourceMappingURL=obfuscateValue.js.map","import stringifySafe from 'json-stringify-safe';\nimport { get, set, cloneDeep } from 'lodash-es';\nimport { obfuscateValue } from './utils/obfuscateValue.js';\n/**\n * Базовый класс логера. Сериализует данные из data и форматирует с конкатенацией строк message и data.\n * Поддерживает обфускацию полей\n */\nexport class BaseLogger {\n    maxLogLevel;\n    secureFields;\n    constructor({ maxLogLevel, secureFields }) {\n        this.maxLogLevel = maxLogLevel;\n        this.secureFields = secureFields;\n    }\n    formatMessage(logLevel, message, data = {}, toStringifySafe) {\n        const messageFormatted = String(message instanceof Error && message.stack ? message.stack : message);\n        const auxData = cloneDeep(data);\n        let securedData;\n        if (Object.keys(auxData).length) {\n            securedData = this.obfuscateData(auxData);\n        }\n        if (toStringifySafe) {\n            return `${messageFormatted} ${stringifySafe(securedData)}`;\n        }\n        return [messageFormatted, securedData];\n    }\n    obfuscateData(data) {\n        const secureData = data;\n        if (this.secureFields?.length) {\n            for (const fieldName of this.secureFields) {\n                const fieldValue = get(data, fieldName);\n                if (typeof fieldValue !== 'undefined') {\n                    set(secureData, fieldName, obfuscateValue());\n                }\n            }\n        }\n        return secureData;\n    }\n}\n//# sourceMappingURL=BaseLogger.js.map","import { LOG_LEVEL_METHOD, LogLevels } from './types/LogLevels.js';\nimport { BaseLogger } from './BaseLogger.js';\n/**\n * Браузерный логгер.\n * Пишет логи в консоль. Логи уровня `error` и `warning` отправляет в error-booster/RUM\n */\nexport class BrowserLogger extends BaseLogger {\n    constructor(options) {\n        super(options);\n    }\n    info(message, data) {\n        if (this.maxLogLevel >= LogLevels.INFO) {\n            this.logToConsole(LogLevels.INFO, message, data);\n        }\n    }\n    debug(message, data) {\n        if (this.maxLogLevel >= LogLevels.DEBUG) {\n            this.logToConsole(LogLevels.DEBUG, message, data);\n        }\n    }\n    trace(message, data) {\n        if (this.maxLogLevel >= LogLevels.TRACE) {\n            this.logToConsole(LogLevels.TRACE, message, data);\n        }\n    }\n    warn(message, data) {\n        if (this.maxLogLevel >= LogLevels.WARNING) {\n            this.logToConsole(LogLevels.WARNING, message, data);\n        }\n        this.sendToErrorBooster(LogLevels.WARNING, message, data);\n    }\n    error(message, data) {\n        if (this.maxLogLevel >= LogLevels.ERROR) {\n            this.logToConsole(LogLevels.ERROR, message, data);\n        }\n        this.sendToErrorBooster(LogLevels.ERROR, message, data);\n    }\n    log(message, data) {\n        this.logToConsole(LogLevels.INFO, message, data);\n    }\n    logToConsole(level, message, data) {\n        const method = LOG_LEVEL_METHOD[level];\n        // eslint-disable-next-line no-console\n        console[method](...this.formatMessage(level, message, data));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    sendToErrorBooster(level, message, data) {\n        window.Ya.Rum.logError({\n            message,\n            level,\n            additional: {\n                // key-value дополнительной информации, без вложенности. Не нужно передавать сюда state приложения\n                data\n            }\n        });\n    }\n}\n//# sourceMappingURL=BrowserLogger.js.map","export * from './BrowserLogger.js';\n//# sourceMappingURL=browser.js.map","export * from './types/LogData.js';\nexport * from './types/LogMessage.js';\nexport * from './types/LogLevels.js';\nexport * from './types/BaseLoggerOptions.js';\nexport * from './types/Logger.js';\nexport * from './BaseLogger.js';\n//# sourceMappingURL=index.js.map","export var LogLevels;\n(function (LogLevels) {\n    LogLevels[LogLevels[\"ERROR\"] = 10] = \"ERROR\";\n    LogLevels[LogLevels[\"WARNING\"] = 20] = \"WARNING\";\n    LogLevels[LogLevels[\"INFO\"] = 30] = \"INFO\";\n    LogLevels[LogLevels[\"DEBUG\"] = 40] = \"DEBUG\";\n    LogLevels[LogLevels[\"TRACE\"] = 50] = \"TRACE\";\n})(LogLevels || (LogLevels = {}));\nexport const LOG_LEVEL_METHOD = {\n    [LogLevels.ERROR]: 'error',\n    [LogLevels.WARNING]: 'warn',\n    [LogLevels.INFO]: 'info',\n    [LogLevels.DEBUG]: 'debug',\n    [LogLevels.TRACE]: 'trace'\n};\n//# sourceMappingURL=LogLevels.js.map","import { cookies } from 'next/headers.js';\nimport { convertDaysToMs } from '../utils/convertDaysToMs.js';\nimport { safeJSONParse } from '../utils/safeJSONParse.js';\nexport class ServerCookieStorage {\n    get(name, raw = true) {\n        const item = cookies().get(name)?.value;\n        if (raw) {\n            return safeJSONParse(item)?.value ?? null;\n        }\n        return item || null;\n    }\n    set(name, value, options, raw = true) {\n        if (typeof options?.expires === 'number') {\n            options.expires = convertDaysToMs(options.expires);\n        }\n        try {\n            const setValue = raw ? JSON.stringify({ value }) : value;\n            cookies().set(name, setValue, options);\n        }\n        catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(error);\n        }\n    }\n    has(name) {\n        return Boolean(this.get(name));\n    }\n    remove(name) {\n        // Особенность next https://nextjs.org/docs/app/api-reference/functions/cookies#deleting-cookies\n        this.set(name, '');\n    }\n}\n//# sourceMappingURL=ServerCookieStorage.js.map","export function safeJSONParse(item) {\n    if (!item) {\n        return null;\n    }\n    try {\n        return JSON.parse(item);\n    }\n    catch (error) {\n        // TODO: добавить логгер\n        // eslint-disable-next-line no-console\n        console.error(error);\n        return null;\n    }\n}\n//# sourceMappingURL=safeJSONParse.js.map","import { get, set, remove } from 'es-cookie';\nimport { safeJSONParse } from '../utils/safeJSONParse.js';\nexport class ClientCookieStorage {\n    get(name, raw = true) {\n        const storageItem = get(name);\n        if (raw) {\n            return safeJSONParse(storageItem)?.value ?? null;\n        }\n        return storageItem || null;\n    }\n    set(name, value, options, raw = true) {\n        try {\n            const setValue = raw ? JSON.stringify({ value }) : value;\n            set(name, setValue, options);\n        }\n        catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(error);\n        }\n    }\n    has(name) {\n        return Boolean(this.get(name));\n    }\n    remove(name) {\n        remove(name);\n    }\n}\n//# sourceMappingURL=ClientCookieStorage.js.map","export const convertDaysToMs = (days) => {\n    return days * 864e5;\n};\n//# sourceMappingURL=convertDaysToMs.js.map","import { convertDaysToMs } from '../utils/convertDaysToMs.js';\nimport { safeJSONParse } from '../utils/safeJSONParse.js';\nexport class ClientLocalStorage {\n    get(name) {\n        if (typeof window !== 'undefined') {\n            const storageItem = window.localStorage.getItem(name) || undefined;\n            const parseItem = safeJSONParse(storageItem);\n            if (!parseItem) {\n                return null;\n            }\n            const value = parseItem?.value ?? null;\n            if (parseItem?.expires && Date.now() > new Date(parseItem.expires).getTime()) {\n                this.remove(name);\n                return null;\n            }\n            return value;\n        }\n        return null;\n    }\n    set(name, value, options) {\n        if (typeof options?.expires === 'number') {\n            const expires = new Date();\n            expires.setMilliseconds(expires.getMilliseconds() + convertDaysToMs(options.expires));\n            options.expires = expires;\n        }\n        if (typeof window !== 'undefined') {\n            window.localStorage.setItem(name, JSON.stringify({\n                value,\n                ...options\n            }));\n        }\n    }\n    has(name) {\n        return Boolean(this.get(name));\n    }\n    remove(name) {\n        if (typeof window !== 'undefined') {\n            window.localStorage.removeItem(name);\n        }\n    }\n}\n//# sourceMappingURL=ClientLocalStorage.js.map","import { BaseException } from '@yandex-music-int/exception';\n/**\n * Base interface representing a generic exception in a Storage.\n */\nexport class StorageException extends BaseException {\n    name = 'Storage Exception';\n    constructor(platfom, type, { code = 'E_STORAGE', ...restOptions } = {}) {\n        super(`There is no ${type} storage on the ${platfom} platform`, { code, ...restOptions });\n        // Set the prototype explicitly.\n        // @see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, StorageException.prototype);\n    }\n}\n//# sourceMappingURL=StorageException.js.map","import { StorageException } from '../exceptions/StorageException.js';\nexport class DummyStorage {\n    platform = '';\n    type = '';\n    constructor(platform, type) {\n        this.platform = platform;\n        this.type = type;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    get(name) {\n        throw new StorageException(this.platform, this.type);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set(name, value, options) {\n        throw new StorageException(this.platform, this.type);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    has(name) {\n        throw new StorageException(this.platform, this.type);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    remove(name) {\n        throw new StorageException(this.platform, this.type);\n    }\n}\n//# sourceMappingURL=DummyStorage.js.map","import { safeJSONParse } from '../utils/safeJSONParse.js';\nexport class ClientSessionStorage {\n    get(name) {\n        const storageItem = window.sessionStorage.getItem(name) ?? undefined;\n        return safeJSONParse(storageItem)?.value ?? null;\n    }\n    set(name, value) {\n        window.sessionStorage.setItem(name, JSON.stringify({\n            value\n        }));\n    }\n    has(name) {\n        return Boolean(this.get(name));\n    }\n    remove(name) {\n        window.sessionStorage.removeItem(name);\n    }\n}\n//# sourceMappingURL=ClientSessionStorage.js.map","export { ServerCookieStorage } from './cookie/ServerCookieStorage.js';\nexport { ClientCookieStorage } from './cookie/ClientCookieStorage.js';\nexport { ClientLocalStorage } from './local/ClientLocalStorage.js';\nexport { DummyStorage } from './dummy/DummyStorage.js';\nexport { ClientSessionStorage } from './session/ClientSessionStorage.js';\n//# sourceMappingURL=index.js.map"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","code","ids","id","all","slice","keys","Object","module","exports","ClientType","WEB","DESKTOP","createClientName","type","version","concat","getExternalApiClientName","clientType","getPlatformName","getPlatform","SessionCookieStatuses","SessionCookieStatuses_SessionCookieStatuses","BaseAuthorization","setRedirectUrl","param","pathname","host","searchParams","tld","passportLogin","constructor","storage","config","esm_define_property","_","BaseCookieAuthorization","getRedirectUri","path","encodeURIComponent","authorizationUrl","passportCredentials","passportHost","origin","passportHostWithTld","getTLDHost","redirectUri","redirectToAuthorizationUrl","ClientAuthorization","setPassportLoginCookieObserver","setInterval","checkPassportLoginCookieChange","bind","passportLoginCached","reloadPage","window","location","reload","href","get","StorageKeys","YandexLogin","undefined","hasAuthorizationCredentials","Boolean","check","VALID","NEED_RESET","EXPIRED","NOAUTH","DISABLED","INVALID","WRONG_GUARD","BaseOAuthAuthorization","dataIsLoaded","token","removeToken","tokenOwnerLogin","oauthCredentials","oauthHost","clientId","charAt","substring","oauthHostWithTld","url","URL","append","oauthState","toString","setTokenOwnerLogin","login","setDataIsLoaded","setToken","credentials","state","set","Oauth","expires","Math","floor","expiresIn","remove","updateOauthState","round","random","OauthState","DesktopAuthorization","loadPassportLogin","desktopEvents","invoke","DesktopEvents","GET_PASSPORT_LOGIN","passportLoginFromElectron","getConfig","env","platform","ClientPlatform","WINDOWS","MACOS","LINUX","ContainerException","BaseException","y","name","message","restOptions","setPrototypeOf","prototype","NotFoundContainerException","AlreadyExistsContainerException","IoCContainer","bindings","shared","Map","register","binding","has","registerMany","value","create","isShared","creator","singleton","factory","convertRetryPolicyConfigToStatusCodes","statusCodes","filter","isNaN","Number","parseInt","getErrorCode","response","error","status","statusCode","dontRetry","retryLimit","retryDelay","getRetryControllerDecision","retryAttempt","isNotIdempotent","retryAfter","retryPolicyConfig","totalRequestsLimit","errorConfig","attempts","length","delay","ms","setTimeout","browserBeforeRetryHook","options","clientRetryConfig","headers","convertedError","retryDecision","retry","limit","ALLOWED_KY_METHODS","BrowserHttpClient","client","distribution","ZP","optionsConverter","request","method","post","put","patch","delete","head","startTime","Date","now","responseTime","responseConverter","start","HTTPError","B","errorConverter","prefixUrl","json","hooks","timeout","convertedOptions","backoffLimit","beforeRetry","push","retryCount","requestStartTime","beforeRequest","beforeError","afterResponse","Array","isArray","requestOptions","normalizedOptions","normalizeOptions","fn","timings","fromEntries","entries","statusMessage","statusText","text","normalizeHeaders","URLSearchParams","search","convertMethod","Headers","HttpErrorException","d","cause","HttpException","includes","toUpperCase","convertMethods","methods","filtered","Set","forEach","add","_HttpException_js__WEBPACK_IMPORTED_MODULE_0__","_yandex_music_int_exception__WEBPACK_IMPORTED_MODULE_0__","obfuscateValue","BaseLogger","maxLogLevel","secureFields","formatMessage","logLevel","data","toStringifySafe","securedData","messageFormatted","String","Error","stack","auxData","cloneDeep","Z","obfuscateData","stringify","fieldName","fieldValue","BrowserLogger","P","info","LogLevels","INFO","logToConsole","debug","DEBUG","trace","TRACE","warn","WARNING","sendToErrorBooster","ERROR","log","level","v","console","Ya","Rum","logError","additional","LOG_LEVEL_METHOD","safeJSONParse_safeJSONParse","item","JSON","parse","ClientCookieStorage","raw","storageItem","es_cookie","U2","setValue","t8","Od","convertDaysToMs_convertDaysToMs","days","ClientLocalStorage","localStorage","getItem","parseItem","getTime","setMilliseconds","getMilliseconds","setItem","removeItem","StorageException","platfom","DummyStorage","ClientSessionStorage","sessionStorage"],"sourceRoot":""}