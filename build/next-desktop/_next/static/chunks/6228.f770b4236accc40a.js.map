{"version":3,"file":"static/chunks/6228.f770b4236accc40a.js","mappings":"uLAOA,IAAMA,EAAiB,CACnBC,MAAO,WACPC,QAAS,WACTC,IAAK,UACT,EAEMC,EAAoB,KAElB,OAAQC,CAAAA,EAAAA,EAAAA,CAAAA,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,MACpB,KAAKC,EAAAA,CAAcA,CAACN,KAAK,CACrB,OAAOD,EAAeC,KAAK,MAC1BM,EAAAA,CAAcA,CAACL,OAAO,CACvB,OAAOF,EAAeE,OAAO,CAIzC,OAAOF,EAAeG,GAAG,EAGhBK,EAAqB,KAC9B,IAAMC,EAA8B,CAChCC,GAAIN,IACJO,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,oBAAqB,GACrBC,OAAQ,EACZ,EAQA,OALIN,EAASO,UAAU,CAAG,CAClBC,WAAYC,CAAAA,EAAAA,EAAAA,CAAAA,GAChB,EAGGT,CACX,4IC9BO,IAAMU,EAAS,IACXC,CAAAA,EAAAA,EAAAA,CAAAA,EAAMC,CAAAA,EAAAA,EAAAA,MAAAA,IAAiB,CAC1BC,UAAW,CACPC,iBAAkB,CACdC,UAAWC,CAAAA,EAAAA,EAAAA,CAAAA,EAAa,4BAAqCC,MAAA,CAATC,EAAAA,CAAQA,GAC5DC,kBAAmBC,EAAAA,CAAiCA,CAE5D,EACAC,OAAQ,CACJC,UAAW,GACXC,UAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IACXC,eAAgB,uBAChBV,UAAWC,CAAAA,EAAAA,EAAAA,CAAAA,EAAa,4BAAqCC,MAAA,CAATC,EAAAA,CAAQA,EAChE,EACAQ,IAAK,CACDC,MAAO,EACX,EACAC,QAAS,CACLC,cAAe,UACnB,EACAC,gBAAiB/B,CAAAA,EAAAA,EAAAA,CAAAA,IACjBgC,WAAY,gBAAyBd,MAAA,CAATC,EAAAA,CAAQA,CACxC","sources":["webpack://_N_E/./src/domain/shared/lib/config/getMetrikaSettings.ts","webpack://_N_E/./src/domain/shared/lib/config/production.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { getPlatform } from '../platform/getPlatform.js';\nimport { getPlatformName } from '../platform/getPlatformName.js';\nimport { getVersion } from '../platform/getVersion.js';\nimport { ClientPlatform } from '../platform/types/ClientPlatform.js';\nimport { MetrikaInitParams } from '../types/MetrikaInitParams.js';\n\n// Если меняете айдишники, то нужно заменить еще и в src/desktop/main/config.ts\nconst MetrikaCounter = {\n    MACOS: '95673848',\n    WINDOWS: '95673843',\n    WEB: '95673834'\n} as const;\n\nconst getMetrikaCounter = (): string => {\n    if (process.env.BUILD_TYPE === 'desktop') {\n        switch (getPlatformName(getPlatform())) {\n            case ClientPlatform.MACOS:\n                return MetrikaCounter.MACOS;\n            case ClientPlatform.WINDOWS:\n                return MetrikaCounter.WINDOWS;\n        }\n    }\n\n    return MetrikaCounter.WEB;\n};\n\nexport const getMetrikaSettings = (): MetrikaInitParams => {\n    const settings: MetrikaInitParams = {\n        id: getMetrikaCounter(),\n        webvisor: true,\n        clickmap: true,\n        trackLinks: true,\n        accurateTrackBounce: true,\n        deffer: true\n    };\n\n    if (process.env.BUILD_TYPE === 'desktop') {\n        settings.userParams = {\n            appVersion: getVersion()\n        };\n    }\n\n    return settings;\n};\n","import { merge } from 'lodash-es';\n\nimport { DeepPartial } from '@yandex-music-int/ts-utility-types';\n\nimport { getPlatformSecret } from '../platform/getPlatformSecret.js';\nimport { TLD_MARK } from '../router/constants/tldMark.js';\n\nimport { config as defaultConfig } from './default.js';\nimport { getMetrikaSettings } from './getMetrikaSettings.js';\nimport { getPrefixUrl } from './getPrefixUrl.js';\nimport { musicExternalApiRetryPolicyConfig } from './retryPolicyConfigs/musicExternalApiRetryPolicyConfig.js';\nimport { ConfigVariables } from './types/ConfigVariables.js';\n\nexport const config = (): ConfigVariables => {\n    return merge(defaultConfig(), {\n        resources: {\n            musicExternalApi: {\n                prefixUrl: getPrefixUrl(`https://api.music.yandex.${TLD_MARK}`),\n                retryPolicyConfig: musicExternalApiRetryPolicyConfig\n            }\n        },\n        player: {\n            overembed: false,\n            secretKey: getPlatformSecret(),\n            externalDomain: 'next.music.yandex.ru',\n            prefixUrl: getPrefixUrl(`https://api.music.yandex.${TLD_MARK}`)\n        },\n        dev: {\n            panel: false\n        },\n        metrics: {\n            serverAddress: '/metrics'\n        },\n        metrikaSettings: getMetrikaSettings(),\n        oldWebHost: `music.yandex.${TLD_MARK}`\n    } satisfies DeepPartial<ConfigVariables>);\n};\n"],"names":["MetrikaCounter","MACOS","WINDOWS","WEB","getMetrikaCounter","getPlatformName","getPlatform","ClientPlatform","getMetrikaSettings","settings","id","webvisor","clickmap","trackLinks","accurateTrackBounce","deffer","userParams","appVersion","getVersion","config","merge","defaultConfig","resources","musicExternalApi","prefixUrl","getPrefixUrl","concat","TLD_MARK","retryPolicyConfig","musicExternalApiRetryPolicyConfig","player","overembed","secretKey","getPlatformSecret","externalDomain","dev","panel","metrics","serverAddress","metrikaSettings","oldWebHost"],"sourceRoot":""}